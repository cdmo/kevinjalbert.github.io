<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jalbert</title>
  <link href="https://kevinjalbert.com"/>
  <updated>2021-06-25T20:00:00-04:00</updated>
  <author>
    <name>Kevin Jalbert</name>
  </author>
  <id>https://kevinjalbert.com</id>
  <entry>
    <title>Embrace Active Support without Rails</title>
    <link rel="alternate" href="https://kevinjalbert.com/embrace-active-support-without-rails/"/>
    <id>https://kevinjalbert.com/embrace-active-support-without-rails/</id>
    <updated>2021-06-26T21:50:03-04:00</updated>
    <published>2021-06-25T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read my opinion on using Active Support without Rails in Ruby-only projects. I think the benefits outweigh the cost. Active Support is a Ruby on Rails component that primarily extends the Ruby language providing, a richer experience to developers.</description>
    <content type="html">&lt;h2&gt;What is Active Support&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Active Support is the Ruby on Rails component responsible for providing Ruby language extensions, utilities, and other transversal stuff.&lt;/p&gt;

&lt;p&gt;It offers a richer bottom-line at the language level, targeted both at the development of Rails applications and at the development of Ruby on Rails itself.&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href="https://guides.rubyonrails.org/active_support_core_extensions.html"&gt;RailsGuides&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a developer using Ruby, it is highly likely that you are using Rails in some projects. During your journey, you&amp;rsquo;ve likely touched aspects of Active Support without knowing it. Ruby, as a language, allows you to &lt;em&gt;redefine&lt;/em&gt; classes easily, almost to a fault. Active Support does exactly this.&lt;/p&gt;

&lt;p&gt;Active Support does &lt;em&gt;a lot&lt;/em&gt; under the hood by modifying core Ruby classes. These core extensions provide more capabilities through new methods. If you are using Rails, Active Support is already there as a dependency. If you spend enough time on a Rails project, you&amp;rsquo;ll reach for these methods from Active Support.&lt;/p&gt;

&lt;h2&gt;Active Support Without Rails&lt;/h2&gt;

&lt;p&gt;The following are my opinions on when to use Active Support without Rails.&lt;/p&gt;

&lt;h3&gt;Projects&lt;/h3&gt;

&lt;p&gt;In Ruby-only projects, you likely already require some gems, and at this point including Active Support just adds another dependency to the project. With Active Support, your project gains all those convenience methods you are used to.&lt;/p&gt;

&lt;p&gt;The reality of the situation is that you are unlikely to use &lt;em&gt;all&lt;/em&gt; the features of Active Support. Yes, this dependency is a large one, although if you want you can be &lt;a href="https://guides.rubyonrails.org/active_support_core_extensions.html#how-to-load-core-extensions"&gt;selective in loading only parts of Active Support&lt;/a&gt;. If you need to optimize your project (i.e., no dependencies for portability, or optimized code for performance), you might be using the wrong language. Active Support does lazy-load parts of itself, so it might not even be as &lt;em&gt;heavy&lt;/em&gt; as you think.&lt;/p&gt;

&lt;p&gt;In my Ruby projects I dislike reaching for something I&amp;rsquo;d typically use in a Rails project only to find out I don&amp;rsquo;t have access to it (i.e., &lt;code&gt;10.days.ago&lt;/code&gt;). Could I take an approach that doesn&amp;rsquo;t require Active Support? Sure, but at what cost (i.e., time/complexity)? I love Ruby for its expressiveness and ease at &lt;em&gt;getting things done&lt;/em&gt;. Active Support helps me do that better and faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Embrace Active Support and add it to your project&amp;rsquo;s dependencies&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Scripts&lt;/h3&gt;

&lt;p&gt;Small Ruby scripts are unique in the sense that they don&amp;rsquo;t always have dependencies. Requiring that first gem in a script can feel &lt;em&gt;wrong&lt;/em&gt;, although in my experience it&amp;rsquo;s worth it. The boost in productivity that a gem provides when you are trying to script something together is immense.&lt;/p&gt;

&lt;p&gt;Dealing with dependencies for scripts is a small inconvenience, as running a script without the required gems usually presents a clear error that is quickly remedied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Embrace Active Support if you already require gems for your script or if you want methods that Active Support offers&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Gems&lt;/h3&gt;

&lt;p&gt;If you are developing a Ruby gem, it would be best to not &lt;em&gt;force&lt;/em&gt; Active Support as a dependency without good reasons. If you absolutely need it, go for it &amp;ndash; ultimately it&amp;rsquo;s your call as the maintainer. Now if your gem is inherently tied to Rails, then it&amp;rsquo;s all good to include it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Avoid Active Support unless you absolutely need parts of it, or if the gem is intended to be used in a Rails project&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Keep a macOS Application Running using cron</title>
    <link rel="alternate" href="https://kevinjalbert.com/keep-a-macos-application-running-using-cron/"/>
    <id>https://kevinjalbert.com/keep-a-macos-application-running-using-cron/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2021-05-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read how I use cron to keep the RescueTime Application running. I was frustrated at RescueTime crashing and not recording data for a whole week.</description>
    <content type="html">&lt;p&gt;I have used &lt;a href="https://www.rescuetime.com/ref/31263"&gt;RescueTime (Referral Link)&lt;/a&gt; for many years at this point. It always disappoints me when I get the email saying that no data was recorded in RescueTime for the last week (see image above article title). For reasons unannounced to me, the macOS menu bar application had stopped running. I use the &lt;a href="https://www.macbartender.com/"&gt;Bartender for macOS&lt;/a&gt; to hide certain menu bar applications (as they offer little visual value) &amp;ndash; RescueTime is hidden from my view and I never noticed it wasn&amp;rsquo;t running.&lt;/p&gt;

&lt;p&gt;I needed a way to ensure that the application was kept running if it crashed.&lt;/p&gt;

&lt;h2&gt;Launch Application in Background using &lt;code&gt;cron&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;I know of &lt;code&gt;cron&lt;/code&gt; and how it can run scripts periodically &amp;ndash; I figured this would be the tool to save me here.&lt;/p&gt;

&lt;p&gt;I quickly put together the following (add this using &lt;code&gt;crontab -e&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*/5 * * * * open --hide --background /Applications/RescueTime.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;a href="https://crontab.guru/#*/5_*_*_*_*"&gt;crontab.guru&lt;/a&gt; we can see that this will run the &lt;code&gt;open&lt;/code&gt; for ResuceTime command every 5 minutes. The &lt;code&gt;--hide&lt;/code&gt; and &lt;code&gt;--background&lt;/code&gt; ensure that the application doesn&amp;rsquo;t open in an obtrusive manner (i.e., think applications with a GUI).&lt;/p&gt;

&lt;p&gt;This worked for me &amp;ndash; it opened RescueTime if it was closed out. I even tested this with other applications and it &lt;em&gt;mostly&lt;/em&gt; worked as expected. The &lt;em&gt;hide and background&lt;/em&gt; flags didn&amp;rsquo;t work for some applications (e.g., Evernote always appears in the forefront for whatever reason).&lt;/p&gt;

&lt;p&gt;Done deal then right? Wrong. I noticed every now and then a keystroke or two wouldn&amp;rsquo;t register. When I looked at the time it was always on the minute the &lt;code&gt;cron&lt;/code&gt; would trigger&amp;hellip; If I had to take a guess, the &lt;code&gt;open&lt;/code&gt; was causing focus to switch briefly and would interrupt keystrokes on the current application I was in.&lt;/p&gt;

&lt;p&gt;I could decrease the frequency that the command would run or&amp;hellip;&lt;/p&gt;

&lt;h2&gt;Only &lt;code&gt;open&lt;/code&gt; if Application isn&amp;rsquo;t Running&lt;/h2&gt;

&lt;p&gt;My next approach was to only &lt;em&gt;open&lt;/em&gt; the application if it wasn&amp;rsquo;t already running. This will prevent the &lt;code&gt;open&lt;/code&gt; from triggering multiple times during the day.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Scroll to see full command (it is one line due to fitting in the crontab)
*/5 * * * * app=Rescuetime; ps aux | grep -v grep | grep -ci $app &amp;gt; /dev/null || open --hide --background /Applications/$app.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we break this down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app=Rescuetime;&lt;/code&gt; sets a variable of what application we&amp;rsquo;re trying to keep open.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux | grep -v grep | grep -ci $app &amp;gt; /dev/null&lt;/code&gt; lists all running processes, excluding the &lt;code&gt;grep&lt;/code&gt; process, and finally counting the found lines while &lt;code&gt;grep&lt;/code&gt;ing for the application&amp;rsquo;s name. This ends up being a 0 or 1. The STDOUT output is directed to the void so that it doesn&amp;rsquo;t create new &lt;code&gt;mail&lt;/code&gt; entries.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;||&lt;/code&gt; will conditionally run the next statement if the previous was falsey (i.e., no application was found running)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open --hide --background /Applications/$app.app&lt;/code&gt; opens the specified application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now this works as expected! I no longer have to worry about RescueTime not running. I might do this for other menubar applications that I like to have active, but are hidden.&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t tried this on Linux but I suspect you could do something similar (assuming there is an equivalent to &lt;code&gt;open&lt;/code&gt;).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AppleScript that Mirrors iPhone to QuickTime</title>
    <link rel="alternate" href="https://kevinjalbert.com/applescript-that-mirrors-iphone-to-quicktime/"/>
    <id>https://kevinjalbert.com/applescript-that-mirrors-iphone-to-quicktime/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2021-04-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I automated seven manual steps to mirror my iPhone to QuickTime using AppleScript. Read about some of the challenges I encountered and see the finalized script being trigged by Alfred.</description>
    <content type="html">&lt;p&gt;Like many, I&amp;rsquo;m guilty of playing mobile games on my iPhone. For the games that have controller support, I&amp;rsquo;ll stream the video on a larger screen. As mentioned in my &lt;a href="/how-i-keep-active-at-home"&gt;previous article&lt;/a&gt;, I&amp;rsquo;ll sometimes play on my exercise bike. In this situation, I&amp;rsquo;ll &lt;em&gt;mirror&lt;/em&gt; my iOS device through QuickTime so that I can play on a larger screen with a controller.&lt;/p&gt;

&lt;h1&gt;Manual Steps&lt;/h1&gt;

&lt;p&gt;There are a number of steps that I have to complete to mirror my iPhone to QuickTime:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enable &lt;a href="https://keepingyouawake.app/"&gt;KeepingYouAwake&lt;/a&gt; (so monitor doesn&amp;rsquo;t go to sleep with no inputs)&lt;/li&gt;
&lt;li&gt;Open QuickTime&lt;/li&gt;
&lt;li&gt;Make a new &lt;em&gt;Movie Recording&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Select my iPhone for video input&lt;/li&gt;
&lt;li&gt;Select my iPhone for audio input&lt;/li&gt;
&lt;li&gt;Drag the volume slider to 100%.&lt;/li&gt;
&lt;li&gt;Maximize Quicktime window&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Sweet Automation&lt;/h1&gt;

&lt;p&gt;This GIF demonstrates the automation that covers all seven manual steps. I launch it using &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Mirror ios alfred" width="854" height="591" src="/images/2021-04-30-applescript-that-mirrors-iphone-to-quicktime/mirror-ios-alfred.gif" /&gt;&lt;/p&gt;

&lt;h1&gt;The Code&lt;/h1&gt;

&lt;p&gt;I may be biased, but the source code is organized quite well in my opinion. The first eight lines cover all necessary customization needs as they are just function calls. If you need to, you can always dive into the functions themselves. The following is the code hosted on a &lt;a href="https://gist.github.com/kevinjalbert/d7661a6a34c1d66dccf701f64eb09be4"&gt;Public Gist&lt;/a&gt;.&lt;/p&gt;

&lt;script src="https://gist.github.com/kevinjalbert/d7661a6a34c1d66dccf701f64eb09be4.js"&gt;&lt;/script&gt;

&lt;h1&gt;Challenges&lt;/h1&gt;

&lt;h2&gt;Selecting a video input&lt;/h2&gt;

&lt;p&gt;I had to select my iPhone for the video/audio inputs in QuickTime using AppleScript. A quick search turned up this &lt;a href="https://stackoverflow.com/q/45228743/583592"&gt;Stack Overflow question&lt;/a&gt;. It turns out that you &lt;em&gt;should&lt;/em&gt; be able to do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight applescript"&gt;&lt;code&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"QuickTime Player"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;newMovieRecording&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;movie&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;recording&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;newMovieRecording&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;camera&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;newMovieRecording&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Kevin's iPhone"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;microphone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;newMovieRecording&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Kevin's iPhone"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, it doesn&amp;rsquo;t work as you get hit with &lt;code&gt;Can’t make &amp;quot;Kevin&amp;#39;s iPhone&amp;quot; into type video recording device&lt;/code&gt;. This would have made things &lt;em&gt;much easier&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Instead, we have to click the button to open the inputs list and then make the selections via AppleScript. This wasn&amp;rsquo;t too bad initially, as it was just iterating the list of menu items and clicking the one which matched my device&amp;rsquo;s name.&lt;/p&gt;

&lt;h2&gt;Same name for audio/video inputs&lt;/h2&gt;

&lt;p&gt;After I was able to select the video input, the next problem is selecting the audio input. The problem now is that the audio and video input share the same name and are within the same list. I would have to &lt;em&gt;skip&lt;/em&gt; the first one (video input) to select the audio input. This wasn&amp;rsquo;t too hard but was just another hurdle to get over. Ideally, the list of inputs would have been separated by video/audio, or somehow have a different key to reference them by.&lt;/p&gt;

&lt;h2&gt;Inputs menu was slow to close&lt;/h2&gt;

&lt;p&gt;I had noticed earlier that when the inputs menu was opened it would stay open for 7-8 seconds before making the menu item selection. I wasn&amp;rsquo;t too concerned at the time, but after the whole automation was done it took just under 20 seconds to mirror my device.&lt;/p&gt;

&lt;p&gt;It took a lot of digging but I found a &lt;a href="https://apple.stackexchange.com/a/400163/228446"&gt;Stack Overflow answer&lt;/a&gt; that provided the solution.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight applescript"&gt;&lt;code&gt;&lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;openInputMenu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;ignoring &lt;/span&gt;&lt;span class="nb"&gt;application responses&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"System Events"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;process&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"QuickTime Player"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nv"&gt;click&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;button&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ignoring&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nb"&gt;do shell script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"killall 'System Events'"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;openDeviceMenu&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function for opening the menu is explicitly telling it to ignore the application responses (i.e., don&amp;rsquo;t wait for feedback). A manual delay of a second is injected to give time for the menu to open up. It also kills the &lt;code&gt;System Events&lt;/code&gt;, which ends up forcing the script to continue execution to future actions. I&amp;rsquo;ll be honest, I&amp;rsquo;m not 100% on the specifics but it worked &amp;ndash; the menu opens and the selections are made in just over a second now.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How I Keep Active At Home</title>
    <link rel="alternate" href="https://kevinjalbert.com/how-i-keep-active-at-home/"/>
    <id>https://kevinjalbert.com/how-i-keep-active-at-home/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2021-03-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">If you're not one to exercise but you like to play games or watch shows/movies, make it a point to not sit still. Get a stationary bike, an inexpensive treadmill, or other types of exercise equipment and bundle what you want to do with physical activity.</description>
    <content type="html">&lt;p&gt;At this point in my life, I live a pretty sedentary lifestyle. I&amp;rsquo;ve been working remotely for just over two years and so I&amp;rsquo;ve lost the &lt;em&gt;walk&lt;/em&gt; my old commute would provide me. The commute walk amounted to about 30 minutes of brisk walking each day. I&amp;rsquo;m not one to go to a gym for a workout, and I&amp;rsquo;m satisfied with at-home exercises. I have two young kids and it can be challenging to find time to exercise.&lt;/p&gt;

&lt;p&gt;I picked up an inexpensive folding &lt;a href="https://www.amazon.ca/gp/product/B007595TKU"&gt;exercise bike&lt;/a&gt; to keep in my office a few years back to help with at-home exercising (cardio). I didn&amp;rsquo;t use it all that much until I started working remotely. The bike helped keep my Apple Watch &lt;em&gt;rings&lt;/em&gt; happy.&lt;/p&gt;

&lt;p&gt;I had also discovered the joy of playing video games while cycling. As the exercise bike was light enough, I could drag it outside my office to where the video game consoles were. I also would sometimes just raise my desk into its standing position and play something on Steam.&lt;/p&gt;

&lt;p&gt;I mostly play Action/Adventure and RPG games and these tend to work out well for me while cycling. Playing video games while biking can be a bit challenging at times, depending on what the game&amp;rsquo;s task is. I sometimes find myself slowing down for &lt;em&gt;tricky&lt;/em&gt; platforming, even completely stopping to complete a difficult boss battle.&lt;/p&gt;

&lt;p&gt;In addition to playing video games, I will mix it up by watching videos. I generally stay to YouTube in which I&amp;rsquo;ll watch some videos on technical content (i.e., conference talks), or videos on random stuff. I have, on occasion, exercised through a movie, however that usually means splitting the &lt;em&gt;movie experience&lt;/em&gt; over multiple sessions.&lt;/p&gt;

&lt;p&gt;I normally end up doing 30-45 minutes of cycling a day (depending on how sad my Apple rings are at the end of the day) while watching/playing something, and it is enough to work up a bit of sweat. I aim to keep my pace within a set range - nothing too intense, just enough to get the heart pumping faster than normal.&lt;/p&gt;

&lt;p&gt;I recently purchased a &lt;a href="https://www.amazon.ca/gp/product/B08423CNCR"&gt;treadmill&lt;/a&gt; as well that I&amp;rsquo;ve tried gaming with. I personally found it much harder than being on a stationary bicycle. You cannot easily slow down for those &lt;em&gt;harder&lt;/em&gt; moments in a game (think flying off the back of the treadmill), and I found that my stride was a lot more clumsy. Watching a video while on a treadmill is better though, as you don&amp;rsquo;t have to work the controller and perform input commands.&lt;/p&gt;

&lt;p&gt;This approach works for me and allows me to combine two things together - I can exercise and play at the same time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; If you&amp;rsquo;re not one to exercise but you like to play games or watch shows/movies, make it a point to not sit still. Get a stationary bike, an inexpensive treadmill, or other types of exercise equipment and bundle what you want to do with physical activity.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Wrapping Shell Commands and Keep the Original Name</title>
    <link rel="alternate" href="https://kevinjalbert.com/wrapping-shell-commands-and-keep-the-original-name/"/>
    <id>https://kevinjalbert.com/wrapping-shell-commands-and-keep-the-original-name/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2021-02-26T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">In this post, I present two ways to wrap a shell command and keep its original name. This allows you to run additional statements before and after the execution of a command that you don't own.</description>
    <content type="html">&lt;p&gt;I wanted to wrap a shell command (that I had no ownership of) so that I could execute additional statements around the original command. In the following sections, I present two scenarios for wrapping shell commands.&lt;/p&gt;

&lt;p&gt;I do want to say there is a possibility that the wrapped command &lt;em&gt;could&lt;/em&gt; potentially cause some issues down the road, however, I have not encountered any as of yet with my limited testing.&lt;/p&gt;

&lt;h1&gt;Wrapping an Executable&lt;/h1&gt;

&lt;p&gt;You can create a new function with the name of the executable that you wish to wrap. This works because the function lookup occurs before the executable lookup on your PATH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In .zshrc or .bashrc&lt;/span&gt;
ping&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"before"&lt;/span&gt;

  /sbin/ping &lt;span class="nv"&gt;$@&lt;/span&gt;
  &lt;span class="nb"&gt;local &lt;/span&gt;&lt;span class="nv"&gt;exit_code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;

  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"after"&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$exit_code&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function itself uses the original executable (&lt;code&gt;/sbin/ping&lt;/code&gt;) by specifying the full-path along with the original parameters (via &lt;code&gt;$@&lt;/code&gt;). We grab the &lt;em&gt;exit code&lt;/em&gt; (via &lt;code&gt;$?&lt;/code&gt;) and store it to be returned at the ending. This ensures that the new function still operates as it did before.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ ping google.com &lt;span class="nt"&gt;-c&lt;/span&gt; 1
before
PING google.com &lt;span class="o"&gt;(&lt;/span&gt;172.217.0.238&lt;span class="o"&gt;)&lt;/span&gt;: 56 data bytes
64 bytes from 172.217.0.238: &lt;span class="nv"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;115 &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;25.484 ms

&lt;span class="nt"&gt;---&lt;/span&gt; google.com ping statistics &lt;span class="nt"&gt;---&lt;/span&gt;
1 packets transmitted, 1 packets received, 0.0% packet loss
round-trip min/avg/max/stddev &lt;span class="o"&gt;=&lt;/span&gt; 25.484/25.484/25.484/0.000 ms
after
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see that that the &lt;code&gt;ping&lt;/code&gt; command still works as expected, but we also now have additional statements around it.&lt;/p&gt;

&lt;h1&gt;Wrapping a Function&lt;/h1&gt;

&lt;p&gt;The approaches for dealing with a function were mostly borrowed from this &lt;a href="https://unix.stackexchange.com/questions/102595/is-there-a-hook-like-system-for-shell/102626#102626"&gt;Unix StackExchange answer&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Not a function I have defined (i.e., defined in a library I sourced)&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;example&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"inside example function (&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# In .zshrc or .bashrc&lt;/span&gt;
&lt;span class="nb"&gt;eval &lt;/span&gt;_&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;declare&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; example&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
example&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"before function"&lt;/span&gt;

  _example &lt;span class="nv"&gt;$@&lt;/span&gt;
  &lt;span class="nb"&gt;local &lt;/span&gt;&lt;span class="nv"&gt;exit_code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;

  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"after function"&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$exit_code&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;eval&lt;/code&gt; is essentially renaming the original function (&lt;code&gt;example&lt;/code&gt;) to have a leading underscore (&lt;code&gt;_example)&lt;/code&gt;. A new function is then defined that overrides &lt;code&gt;example&lt;/code&gt;, and actually uses the original&amp;rsquo;s function (now called &lt;code&gt;_example&lt;/code&gt;). You define additional statements before and after the wrapped function, in a similar fashion to how it was handled with wrapping an executable. The exit code is also preserved from the wrapped function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ example 5
before
inside example &lt;span class="k"&gt;function &lt;/span&gt;5
after
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One downside to the above approach is that the &lt;em&gt;old&lt;/em&gt; function is still present (&lt;code&gt;_example&lt;/code&gt;). While the following only works in ZSH, it is possible to directly override the original function by using the original&amp;rsquo;s definition when creating the new function. To note, I do find the former approach simpler.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# .zshrc&lt;/span&gt;
functions[example]&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'
  (){
    echo "before"

    '&lt;/span&gt;&lt;span class="nv"&gt;$functions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;example]&lt;span class="s1"&gt;';
    } "$@";
  local exit_code=$?

  echo "after"

  return $exit_code'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Reflecting on Five Years of Monthly Blogging</title>
    <link rel="alternate" href="https://kevinjalbert.com/reflecting-on-five-years-of-monthly-blogging/"/>
    <id>https://kevinjalbert.com/reflecting-on-five-years-of-monthly-blogging/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2021-01-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">In 2016, I made a New Year's resolution to blog about something of substance every month. In this post, I'll reflect on this five-year journey.</description>
    <content type="html">&lt;p&gt;Just over five years ago, I decided to dive into the technical blogging sphere. Since then, I have consistently produced a blog post every month. There are a couple of reasons why I blog and why I wanted to keep the monthly cadence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sharing Knowledge&lt;/li&gt;
&lt;li&gt;Improving my Writing&lt;/li&gt;
&lt;li&gt;Online Presence&lt;/li&gt;
&lt;li&gt;Recognition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the last five years, I&amp;rsquo;ve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Published 63 blog posts.&lt;/li&gt;
&lt;li&gt;Wrote 53,017 words (includes a bit of markup here and there).&lt;/li&gt;
&lt;li&gt;Created content that would take 263 minutes to read (assuming 180 words per minute).&lt;/li&gt;
&lt;li&gt;Reached 78,121 people with my writing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post, I want to reflect on this journey &amp;ndash; goals, challenges, rewards.&lt;/p&gt;

&lt;h1&gt;Challenges with Blogging&lt;/h1&gt;

&lt;h2&gt;Time Commitment&lt;/h2&gt;

&lt;p&gt;This is my biggest struggle with blogging. I procrastinate until the last possible moment and usually post within the last few days of the month.&lt;/p&gt;

&lt;p&gt;The time commitment for each blog post varies depending on its content. The technical ones normally require a lot of upfront work (building the project and writing the code), while the non-technical posts are typically shorter to write.&lt;/p&gt;

&lt;p&gt;Overall, I try to work on the posts in the evenings, but it sometimes bleeds into the weekend. Having a family makes it a bit challenging, but not impossible as my wife is a rockstar. A post can be &lt;em&gt;chipped away&lt;/em&gt; at instead of just writing the whole thing in one go, which is something I want to do more consistently.&lt;/p&gt;

&lt;h2&gt;Blogging Platform&lt;/h2&gt;

&lt;p&gt;I built my blog using &lt;a href="https://middlemanapp.com/"&gt;Middleman&lt;/a&gt;. If you&amp;rsquo;re interested, you can look at the &lt;a href="https://github.com/kevinjalbert/kevinjalbert.github.io"&gt;GitHub repository for the website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Early on, I put a decent amount of work into making the site. It still serves its purpose but isn&amp;rsquo;t aging well. I almost always hit some local development issue when I spin it up as the technology stack/dependencies are old.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m torn &amp;ndash; I want a simple platform for writing, but I want customization capabilities. I&amp;rsquo;ll likely move to a new platform in the future, but it&amp;rsquo;s such a daunting task. I&amp;rsquo;ll also plan to investigate using an off-the-shelf solution for blogging. The idea is to spend less time on the platform and more time on creating content.&lt;/p&gt;

&lt;h2&gt;Driving Traffic&lt;/h2&gt;

&lt;p&gt;Getting traffic to my website is something I don&amp;rsquo;t really enjoy, and for the most part, I really depend on organic traffic and just the general SEO (Search Engine Optimization) that my website provides.&lt;/p&gt;

&lt;p&gt;At one point, I decided to add a newsletter (which has just surpassed 100 subscribers). I&amp;rsquo;m currently using &lt;a href="https://mailchimp.com/"&gt;Mailchimp&lt;/a&gt; as it has an option to consume an RSS feed that pushes emails out to subscribers.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also done some posting here and there on &lt;a href="https://www.reddit.com/"&gt;Reddit&lt;/a&gt;. When the subreddit matches the blog post topic it can drive some traffic. I saw this best when I was writing Notion related posts.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve cross-posted a few times on &lt;a href="https://dev.to/kevinjalbert"&gt;Dev.to&lt;/a&gt; and &lt;a href="https://medium.com/@kevinjalbert"&gt;Medium&lt;/a&gt;, but haven&amp;rsquo;t done so in a while. I&amp;rsquo;m still not 100% sure about the measurable benefits of cross-posting and whether it&amp;rsquo;s worth the time.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve occasionally promoted my posts on social media. Similar to the above point, do the benefits outweigh the time invested. I have seen some traction when tagging companies or topics to widen the reach.&lt;/p&gt;

&lt;h1&gt;Rewards of Blogging&lt;/h1&gt;

&lt;h2&gt;Reaching Many&lt;/h2&gt;

&lt;p&gt;The following image is a snapshot of the five years in Google Analytics. I take pride that so many people have seen my content. The growth is a nice nod as well in keeping the monthly cadence up.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Blog stats" width="1912" height="1318" src="/images/2021-01-30-reflecting-on-five-years-of-monthly-blogging/blog-stats.png" /&gt;&lt;/p&gt;

&lt;h2&gt;Following Referrals&lt;/h2&gt;

&lt;p&gt;It is nice to see &lt;em&gt;where&lt;/em&gt; my content is reaching, and the following image shows how users are finding my content from a referral perspective. When drilling into specifics, it&amp;rsquo;s rewarding to see one of my blog posts ending up in a &lt;a href="https://github.com/chatwoot/chatwoot/pull/1134#issue-466028793"&gt;GitHub issue&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/7298088/def-block-in-rake-task"&gt;StackOverflow answer&lt;/a&gt;, or &lt;a href="https://tshaped.io/zapier-and-notion/"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Blog referrals" width="1958" height="1728" src="/images/2021-01-30-reflecting-on-five-years-of-monthly-blogging/blog-referrals.png" /&gt;&lt;/p&gt;

&lt;h2&gt;Ability to Refer to own Posts&lt;/h2&gt;

&lt;p&gt;At times during my work, I am able to refer a colleague to a post of my own. I&amp;rsquo;ve had colleagues mention that they had found my posts when searching for a topic as well. I&amp;rsquo;ve even caught myself stumbling upon my own post when Googling.&lt;/p&gt;

&lt;p&gt;By writing down some information as a post, I don&amp;rsquo;t have to reiterate it again if it is relevant &amp;ndash; I can simply link to it.&lt;/p&gt;

&lt;h1&gt;The Future&lt;/h1&gt;

&lt;p&gt;I see myself continuing with my monthly blog post for the foreseeable future. It&amp;rsquo;s worth my time investment.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve recently made posts that have a YouTube video embedded in them. Normally these are for demos from a side project. I&amp;rsquo;ll likely continue these tactics, and experiment how I can incorporate them into a variety of other post topics. &lt;a href="https://www.youtube.com/channel/UCFWPd8rky_tD4B4Qqq99i4Q"&gt;My YouTube channel&lt;/a&gt; is very much in its infancy, and the quality of the videos could use some improvement.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Youtube stats" width="1384" height="874" src="/images/2021-01-30-reflecting-on-five-years-of-monthly-blogging/youtube-stats.png" /&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the challenges section, I have dabbled in other services and platforms to broadcast my content. I would like to further explore this as it has the potential to drive more traffic to my content and improve the SEO.&lt;/p&gt;

&lt;p&gt;My current blogging set up is aging, and I would really like to improve it. I plan to look into using a more modern &lt;a href="https://jamstack.org/"&gt;Jamstack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you for reading my content over the past five years. I look forward to creating new content that sparks interest.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using URL Scheme Links in Notion</title>
    <link rel="alternate" href="https://kevinjalbert.com/using-url-scheme-links-in-notion/"/>
    <id>https://kevinjalbert.com/using-url-scheme-links-in-notion/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2020-12-21T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">URL Schemes provide powerful ways to integrate applications together in the Apple Ecosystem. Notion, unfortunately, doesn't allow these URL Scheme links, as they are not 'valid' URLs. We can work around this by using a URL shortener to do some redirection.</description>
    <content type="html">&lt;h1&gt;Context &amp;ndash; the Integrations from Notion&lt;/h1&gt;

&lt;p&gt;I want to have the ability to link from &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; to other applications in the Apple ecosystem (e.g., &lt;a href="https://culturedcode.com/things/"&gt;Things&lt;/a&gt;). If the application itself doesn&amp;rsquo;t offer the integration, you can usually &lt;em&gt;hack&lt;/em&gt; something together using &lt;em&gt;URL Scheme links&lt;/em&gt; (also called &lt;a href="https://support.apple.com/en-ca/guide/shortcuts/apdcd7f20a6f/ios"&gt;&lt;em&gt;x-callback-url&lt;/em&gt;&lt;/a&gt;), which are defined by an application. For example, Things has an &lt;a href="https://culturedcode.com/things/support/articles/2803573/"&gt;excellent article&lt;/a&gt; on how you can use URL Scheme links to interface with it.&lt;/p&gt;

&lt;h1&gt;Problem &amp;ndash; the Invalid URL&lt;/h1&gt;

&lt;p&gt;Unfortunately, Notion doesn&amp;rsquo;t recognize URL Scheme links (e.g., show &lt;em&gt;today&lt;/em&gt; in Things using &lt;code&gt;things:///show?id=today&lt;/code&gt;) as valid URLs. Even if you try to edit an existing URL in Notion, it won&amp;rsquo;t work.&lt;/p&gt;

&lt;p&gt;This has come up as an issue in the &lt;a href="https://www.reddit.com/r/Notion"&gt;Notion subreddit&lt;/a&gt; &lt;a href="https://www.reddit.com/r/Notion/comments/azfnef/urlscheme_plz/"&gt;numerous&lt;/a&gt; &lt;a href="https://www.reddit.com/r/Notion/comments/gcx4nw/links_to_other_apps_xcallbackurl/"&gt;times&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Solution &amp;ndash; the URL Shortner&lt;/h1&gt;

&lt;p&gt;By using a URL shortener service (in this case &lt;a href="https://tinyurl.com/"&gt;TinyURL&lt;/a&gt;), we can create valid URLs that Notion will let us use. These URLs will open the browser and the redirection will then trigger the URL Scheme.&lt;/p&gt;

&lt;p&gt;For a full demo of how this all works, you can watch the following short video I recorded.&lt;/p&gt;

&lt;iframe class="youtube-embed" src="https://www.youtube.com/embed/cQvTnq9m_gg" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;To make the generation of these TinyURLs easier, I created an &lt;a href="https://support.apple.com/en-ca/guide/shortcuts/welcome/ios"&gt;iOS Shortcut&lt;/a&gt; that simplifies it by using the TinyURL&amp;rsquo;s API. You can grab the shortcut &lt;a href="https://www.icloud.com/shortcuts/ab01776c15a442938fe18f1e5f786586"&gt;here&lt;/a&gt;, or just recreate it yourself using the following template:&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2020-12-22-using-url-scheme-links-in-notion/shortcut.jpeg" style="width: 49%; height: 100%"/&gt;
&lt;/div&gt;

&lt;h1&gt;Future &amp;ndash; the Endless Possibilities&lt;/h1&gt;

&lt;p&gt;I do hope that Notion eventually &lt;em&gt;allows&lt;/em&gt; for URL Scheme links to be used without any URL redirection needed. For the time being, however, this workaround does the trick.&lt;/p&gt;

&lt;p&gt;With iOS Shortcuts, there are countless possibilities available to you. You can initiate &lt;em&gt;anything&lt;/em&gt; from a URL link in Notion now.&lt;/p&gt;

&lt;p&gt;Imagine using this technique in Notion databases &amp;ndash; having a URL column that does something on your device when you open it.&lt;/p&gt;

&lt;p&gt;Creating a crude integration starting from Notion leading into another iOS Applications is entirely doable, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Things to specific project pages&lt;/li&gt;
&lt;li&gt;Link to an external artifact (e.g., Email from &lt;a href="https://sparkmailapp.com/"&gt;Spark&lt;/a&gt;, Note from &lt;a href="https://bear.app/"&gt;Bear&lt;/a&gt;, etc&amp;hellip;)&lt;/li&gt;
&lt;li&gt;A &lt;a href="/daily-review-using-ios-shortcuts-and-scriptable"&gt;Shortcut that kicks off a daily review&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A Shortcut that fires off an HTTP request that triggers an external API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each application provides its own URL Scheme, although this &lt;a href="http://x-callback-url.com/apps/"&gt;site&lt;/a&gt; does a decent job cataloging URL Schemes of popular applications.&lt;/p&gt;

&lt;p&gt;The possibilities are truly endless.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Custom Notion iOS Widget</title>
    <link rel="alternate" href="https://kevinjalbert.com/custom-notion-ios-widget/"/>
    <id>https://kevinjalbert.com/custom-notion-ios-widget/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2020-11-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Notion has recently released iOS widgets, however, they are limited in functionality. In this article, I present my custom Notion iOS widget that has a unique set of features. This widget is built using iOS Shortcuts, the Scriptable application, and a notion-py server.</description>
    <content type="html">&lt;h1&gt;The Offical Notion Widget&lt;/h1&gt;

&lt;p&gt;On &lt;a href="https://www.notion.so/What-s-New-157765353f2c4705bd45474e5ba8b46c#a2dc9af353a746cabaf436fdfaeca4a7"&gt;November 22 of 2020, Notion released their iOS widgets&lt;/a&gt;. This was a great step forward for the &lt;a href="https://apps.apple.com/app/notion-notes-tasks-wikis/id1232780281"&gt;Notion iOS application&lt;/a&gt; as iOS 14 had just released support for widgets in September.&lt;/p&gt;

&lt;p&gt;They offered the following three widgets (as quoted from their widget descriptions):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Page: Get quick access to one of your Notion pages&lt;/li&gt;
&lt;li&gt;Favorites: Get quick access to your Notion favorites&lt;/li&gt;
&lt;li&gt;Recents: Get quick access to recently viewed pages in Notion&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;My Unofficial Notion Widget&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve been working on my own custom Notion iOS widget since October before it was known that official widgets were coming out. I was pleasantly surprised that their widgets haven&amp;rsquo;t made my custom widget obsolete, as the functionality is unique.&lt;/p&gt;

&lt;p&gt;The following video provides a demo of my widget in action, as well as explaining a bit about how it was made.&lt;/p&gt;

&lt;iframe class="youtube-embed" src="https://www.youtube.com/embed/atq6u7Le1JE" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;The following technologies were used to make this all possible:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API server using &lt;a href="https://github.com/jamalex/notion-py"&gt;&lt;code&gt;notion-py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.apple.com/en-ca/guide/shortcuts/welcome/ios"&gt;iOS Shortcuts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scriptable.app/"&gt;Scriptable&lt;/a&gt; iOS application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are more interested in the technicals or would like to set up your own widget, you can look at the &lt;a href="https://github.com/kevinjalbert/notion-toolbox/tree/master/ios_widget"&gt;&lt;code&gt;ios_widget&lt;/code&gt; tool&lt;/a&gt; within my &lt;a href="https://github.com/kevinjalbert/notion-toolbox"&gt;&lt;code&gt;notion-toolbox&lt;/code&gt; GitHub Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s worth noting that there are plenty of rough edges in this implementation as of its initial release, and it does require a lot of setup investment. In addition, if/when Notion decides to up their widget game, my custom solution might become obsolete. There are also concerns surrounding the upcoming offical Notion API, as I&amp;rsquo;m currently using the unofficial one (which can, in theory, break without notice). I&amp;rsquo;ll be curious how I can adapt my widget to use the official API in the future.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Guided Access on iOS - A Hidden Gem</title>
    <link rel="alternate" href="https://kevinjalbert.com/guided-access-on-ios-a-hidden-gem/"/>
    <id>https://kevinjalbert.com/guided-access-on-ios-a-hidden-gem/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2020-10-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Guided Access is a great feature in iOS that limits the device to only show a single application with customizable restrictions. The ease of enabling/disabling a Guided Access session, opens up a lot of easy use cases that you might want to try it.</description>
    <content type="html">&lt;p&gt;This will be a short post that serves more as a reminder to iOS users that you have access to the &lt;em&gt;Guided Access&lt;/em&gt; feature. This is a feature that is tucked away under &lt;em&gt;Settings &amp;gt; Accessibility&lt;/em&gt;, although its uses might fall a bit out of the typical realm of &lt;em&gt;accessibility&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;What does Guided Access do?&lt;/h1&gt;

&lt;p&gt;To quote &lt;a href="https://support.apple.com/en-ca/HT202612"&gt;Apple&amp;rsquo;s Support page&lt;/a&gt; on Guided Access:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Guided Access limits your device to a single app and lets you control which features are available. You can turn on Guided Access when you let a child use your device, or when accidental gestures might distract you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The main draw is that it allows you to lock down your device by allowing only a single application to run. This means that without the passcode (or your touch/face ID), people cannot navigate away from where you enabled Guided Access. You also have the ability to disable regions of the screen and various device features (e.g., touch, keyboard, buttons, motion). It&amp;rsquo;s worth noting that banner notifications no longer show up while in a session.&lt;/p&gt;

&lt;p&gt;You can enter a Guided Access session with a triple-click of the side/home button, and you exit with a double-click (if you have touch/face ID enabled). No need for the passcode if it is you trying to exit.&lt;/p&gt;

&lt;h1&gt;Where to use Guided Access?&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve outlined some use cases here, but I&amp;rsquo;m certain that there are other creative uses that I&amp;rsquo;m missing.&lt;/p&gt;

&lt;h2&gt;When handing your device over&lt;/h2&gt;

&lt;p&gt;For those with children, this is a great feature to leverage when you hand your child your device. You can lock down the device to the point where you don&amp;rsquo;t have to fear them getting into things they shouldn&amp;rsquo;t. You can also set time limits if needed so that a passcode pops up, ending their fun.&lt;/p&gt;

&lt;p&gt;In a similar capacity to using it with children, this feature is useful when handing your phone to another person to show them something specific on your device. For example, you can enable a session and disable the touch feature so they can only &lt;em&gt;look&lt;/em&gt; at what you have on the screen. There is also no chance of embarrassment/privacy concerns as banner notifications don&amp;rsquo;t show up when you are in a session.&lt;/p&gt;

&lt;p&gt;In situations when you are using a device for surveys or as a kiosk to complete forms, Guided Access would work well. As a side note, there is a better way to handle this using the &lt;a href="https://support.apple.com/en-ca/guide/apple-configurator-2/cadbf9c172/mac"&gt;Single App Mode via the Apple Configurator&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;When gaming&lt;/h2&gt;

&lt;p&gt;iOS doesn&amp;rsquo;t have a &lt;em&gt;gaming mode&lt;/em&gt;, unlike some Android phones. This would be a mode that disables notifications and some touch gestures. Well, Guided Access on iOS is pretty much that without being labelled as such. &lt;a href="https://www.reddit.com/r/ios/comments/jh8co3/pro_tip_if_you_turn_on_guided_access_gaming_gets"&gt;This Reddit post&lt;/a&gt; does a great job outlining the benefits of gaming in a Guided Access session. TL;DR:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No notifications.&lt;/li&gt;
&lt;li&gt;No accidental swipe gestures opening the notifications or control center.&lt;/li&gt;
&lt;li&gt;No home bar indicator if you don&amp;rsquo;t have a home button.&lt;/li&gt;
&lt;li&gt;No redirection if you touch an ad.&lt;/li&gt;
&lt;li&gt;No accidental &lt;em&gt;Back Tap&lt;/em&gt; (if you have them set up).&lt;/li&gt;
&lt;li&gt;Change/disable Auto-Lock&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would like to add that you can still get notifications on your Apple Watch even when in a Guided Access session.&lt;/p&gt;

&lt;p&gt;You can automate some of this if you plan to always play certain games in Guided Access by using an iOS Shortcut. You would create an &lt;em&gt;Automation&lt;/em&gt; that, when your game application, would start the Guided Access session automatically.&lt;/p&gt;

&lt;h1&gt;Tl;DR&lt;/h1&gt;

&lt;p&gt;Guided Access is powerful and quick to enable/disable. It can really help when you have to hand your device over to someone without fearing what they might get into. As mobile devices are nearly full-fledged gaming devices as well, the usage in a gaming scenario can also prove useful.&lt;/p&gt;

&lt;p&gt;Did you know about this iOS feature? Have you used it before, and if so in what capacity?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Daily Review Using iOS Shortcuts and Scriptable</title>
    <link rel="alternate" href="https://kevinjalbert.com/daily-review-using-ios-shortcuts-and-scriptable/"/>
    <id>https://kevinjalbert.com/daily-review-using-ios-shortcuts-and-scriptable/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2020-09-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read how I orchestrate my daily review that consists of multiple applications using iOS Shortcuts. I create a notification-based workflow as a workaround to Shortcut's time limit when switching between applications.</description>
    <content type="html">&lt;p&gt;Doing daily and weekly reviews are generally considered a good habit, as it can help with organizing life and making sure you focus on the important things. Reviews are tailored to the individual and depend a lot on the individual&amp;rsquo;s goals and systems.&lt;/p&gt;

&lt;h1&gt;My Frustrations Doing Daily Reviews&lt;/h1&gt;

&lt;p&gt;Doing daily reviews for me has raised some frustrations:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I have several steps in my daily review, which I haven&amp;rsquo;t properly formalized.&lt;/li&gt;
&lt;li&gt;I sometimes don&amp;rsquo;t have a solid block of time to process each step of my review.&lt;/li&gt;
&lt;li&gt;I like using my laptop that resides in my home office, which has caused me to delay/miss reviews if I cannot make time to get to my laptop.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Using my iPhone for Daily Reviews&lt;/h1&gt;

&lt;p&gt;Upon looking at the frustrations, I came up with a better solution that uses my iPhone for my daily reviews. I always have my iPhone near me, and the individual steps of my review use applications that are web-based or within the Apple ecosystem. I&amp;rsquo;m giving up a physical keyboard by using my iPhone, but I&amp;rsquo;m willing to make that trade-off for accessibility.&lt;/p&gt;

&lt;p&gt;When iOS 12 was released, it came with &lt;em&gt;Shortcuts&lt;/em&gt;. This was a new feature that allowed you to string together a bunch of tasks to create workflows. The Shortcuts functionality is my best bet in creating a formalized process that allows me to work through various applications as part of my daily review.&lt;/p&gt;

&lt;h1&gt;iOS Shortcuts and its Limitations&lt;/h1&gt;

&lt;p&gt;My strategy includes a &lt;em&gt;Review&lt;/em&gt; Shortcuts folder that contains the individual steps of my review process. I&amp;rsquo;ll have a single shortcut which then orchestrates my review using all those individual steps. I take advantage of the &lt;code&gt;Wait to return&lt;/code&gt; scripting action, which allows me to interact with an application (e.g., &lt;em&gt;Things&lt;/em&gt;) and then continue to the next step when I return to the Shortcuts application.&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/review-folder.png" style="width: 33%; height: 100%"/&gt;
  &lt;img src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/review-shortcut.png" style="width: 33%; height: 100%"/&gt;
  &lt;img src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/things-shortcut.png" style="width: 33%; height: 100%"/&gt;
&lt;/div&gt;

&lt;p&gt;This worked out well when I was creating the workflow, but I hit a limitation in iOS Shortcuts. A running shortcut will only stay active for a short period of time when you are away from the Shortcuts application. From my experience, this is around 3 minutes. This means that if one step of my daily review takes longer than 3 minutes, the whole thing breaks down.&lt;/p&gt;

&lt;h1&gt;Actionable Notifications via Scriptable&lt;/h1&gt;

&lt;p&gt;To be honest, I was a bit disheartened with the time limitation in Shortcuts. I looked around for another solution. Instead of using the &lt;code&gt;Wait to return&lt;/code&gt; scripting action, I could use actionable notifications to open a URL that triggers the shortcut via the &lt;code&gt;shortcuts://run-shortcut?name=shortcutname&lt;/code&gt; URL scheme. Unfortunately, iOS Shortcuts does not have that capability when creating notifications as they can only show text.&lt;/p&gt;

&lt;p&gt;I did some searching online and found &lt;a href="https://scriptable.app/"&gt;Scriptable&lt;/a&gt;, a powerful iOS automation application that uses JavaScript. With this, I could create notifications that, when interacted with, could open a specified URL.&lt;/p&gt;

&lt;h2&gt;Putting it Together&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ll try my best to explain how I used iOS Shortcuts and Scriptables together to make everything work, as this just got a bit more complicated.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Daily Review&lt;/em&gt; shortcut grabs the text of each shortcut of my review process (within the &lt;em&gt;Review&lt;/em&gt; folder) and turns it into a single string separated by commas. This string looks like &lt;code&gt;Things,Journal,Habits,Drafts&lt;/code&gt; and we pass that into a Scriptable action.&lt;/p&gt;

&lt;p&gt;Our individual steps of the review process are still fairly simple shortcuts, although now they take the &lt;em&gt;Shortcut Input&lt;/em&gt; and push that into the same Scriptable action as mentioned above.&lt;/p&gt;

&lt;p&gt;It is worth noting that there are a few other small things happening in these shortcuts, but I&amp;rsquo;ve omitted them for the sake of brevity.&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/revised-review-shortcut.jpeg" style="width: 49%; height: 100%"/&gt;
  &lt;img src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/revised-things-shortcut.png" style="width: 49%; height: 100%"/&gt;
&lt;/div&gt;

&lt;p&gt;My approach pushes all state of &lt;em&gt;where I am in the review process&lt;/em&gt; into the shortcut input, which is the string of shortcut steps to run. To see how we connect these shortcuts together, we&amp;rsquo;ll look at the Scriptable code that uses that string of shortcut steps.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Variables used by Scriptable.&lt;/span&gt;
&lt;span class="c1"&gt;// These must be at the very top of the file. Do not edit.&lt;/span&gt;
&lt;span class="c1"&gt;// icon-color: deep-green; icon-glyph: user-md;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createNotification&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;openURL&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notification&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;
  &lt;span class="nx"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;openURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;openURL&lt;/span&gt;
  &lt;span class="nx"&gt;notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shortcutParameter&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createNotification&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Done after this!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;openURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shortcuts://run-shortcut?name=Homescreen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shortcuts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shortcutParameter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nextShortcut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shortcuts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;remainingShortcuts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shortcuts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createNotification&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Next step is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;decodeURI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nextShortcut&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;openURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`shortcuts://run-shortcut?name=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;nextShortcut&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;input=text&amp;amp;text=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;remainingShortcuts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setShortcutOutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remainingShortcuts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ll walk through key steps of what happens when we trigger the &lt;em&gt;Daily Review&lt;/em&gt; shortcut:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Grab all shortcuts from the &lt;em&gt;Review&lt;/em&gt; folder and combine them into a single string (e.g., &lt;code&gt;Things,Journal,Habits,Drafts&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;This string is passed as input to the Scriptable action.&lt;/li&gt;
&lt;li&gt;The script identifies &lt;code&gt;nextShortcut = &amp;quot;Things&amp;quot;&lt;/code&gt; and &lt;code&gt;remainingShortcuts = &amp;quot;Journal,Habits,Drafts&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A notification is created that has the URL of &lt;code&gt;shortcuts://run-shortcut?name=Things&amp;amp;input=text&amp;amp;text=Journal,Habits,Drafts&lt;/code&gt; that says &amp;ldquo;Next step is Things&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Daily Review&lt;/em&gt; Shortcut has finished running.&lt;/li&gt;
&lt;li&gt;Tapping the notification will run the &lt;code&gt;Things&lt;/code&gt; shortcut and pass in the inputs of &lt;code&gt;Journal,Habits,Drafts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The Things application is opened, and the shortcut&amp;rsquo;s input is passed along to the same Scriptable action as before.&lt;/li&gt;
&lt;li&gt;A new notification is created for the next step while removing that step from the string of remaining shortcuts.&lt;/li&gt;
&lt;li&gt;Eventually all shortcuts are run using steps 6-8, and a &amp;ldquo;Done after this!&amp;rdquo; notification finally shows. This will open the user&amp;rsquo;s homescreen.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Daily Review With No Time Limits&lt;/h1&gt;

&lt;p&gt;This new approach using Scriptable along with Shortcuts, while complicated, allows me to circumvent the time limit of Shortcuts. The workflow is actually pretty nice as I can move along entirely following notifications as the triggers for the next steps. All the state of the whole process is encoded in the string of shortcuts that have to run. The Review folder approach also makes it easy to add a new step in my review process, should the need arise.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Demo" width="414" height="896" src="/images/2020-09-28-daily-review-using-ios-shortcuts-and-scriptable/demo.gif" /&gt;&lt;/p&gt;

&lt;p&gt;If the above gif isn&amp;rsquo;t doing it for you, you can get a better sense of the whole thing by watching the following video I recorded.&lt;/p&gt;

&lt;iframe class="youtube-embed" src="https://www.youtube.com/embed/CjTzhPxfz8Q" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>My Dam Broke - Revisiting Content Consumption</title>
    <link rel="alternate" href="https://kevinjalbert.com/my-dam-broke-revisiting-content-consumption/"/>
    <id>https://kevinjalbert.com/my-dam-broke-revisiting-content-consumption/</id>
    <updated>2021-05-28T22:01:39-04:00</updated>
    <published>2020-08-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">In this post I revisit the topic of content consumption, adding new criteria to my selection process. I also discuss using a new tool (spoiler...it's Notion) to hold the content.</description>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve previously talked about &lt;a href="/consuming-content-and-managing-the-flood"&gt;managing your content consumption&lt;/a&gt; using metaphors such as a dam, the flow of water, a reservoir, and a spillway. I highly recommend reading through if you are looking for some techniques to tame information overload. In case you don&amp;rsquo;t want to read the above article, the main point is to focus on high-quality sources and don&amp;rsquo;t consume everything.&lt;/p&gt;

&lt;p&gt;Spoiler alert! Even though I wrote the above article, I have to revisit the topic as my metaphorical dam is broken. I&amp;rsquo;m finding myself facing the flood with 300+ articles in the reservoir. In this article, I will revisit content consumption management.&lt;/p&gt;

&lt;h1&gt;System Check&lt;/h1&gt;

&lt;p&gt;I took a look at my content consumption from a system&amp;rsquo;s perspective. There are four factors at play that determine the backlog of content to consume.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The pace at which I can consume content from my reservoir&lt;/li&gt;
&lt;li&gt;The flow of content from sources making it to my dam&lt;/li&gt;
&lt;li&gt;The effectiveness of my dam (i.e., the filter)&lt;/li&gt;
&lt;li&gt;The effective removal of content that is no longer valuable.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Improving the pace at which I can consume content is tricky as it depends a lot on the amount of free time I can devote to it. I decided to focus on the other three factors instead as a way to distil the content down to the most valuable.&lt;/p&gt;

&lt;h2&gt;Reducing the Flow&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The flow of content from sources making it to my dam&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;em&gt;flow of water&lt;/em&gt; was the analogy I used in my dam metaphor for the rate of content coming in. This is tunable and can be controlled. I had advocated highly for the use of newsletters as they are narrow in focus and are filtered for good calibre pieces.&lt;/p&gt;

&lt;p&gt;I want to keep tabs on where the good pieces of content are coming from. The importance and value of consumed content will change over time based on projects and interests. This means that I can remove specific content sources if they are underdelivering in value.&lt;/p&gt;

&lt;p&gt;This is something I have done organically (i.e., &lt;em&gt;&amp;ldquo;I&amp;rsquo;ll unsubscribe from this newsletter as I don&amp;rsquo;t care about YYYY much anymore&amp;rdquo;&lt;/em&gt;), but I want to put more of an objective system in place. To do this, I want to track the volume and perceived value gain from my content sources. I&amp;rsquo;ll then routinely be able to revisit and see what is feeding into my content consumption pipeline and what is not.&lt;/p&gt;

&lt;h2&gt;Effectiveness of Dam&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The effectiveness of my dam (i.e., the filter)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My goal of consuming content is to extract information and turn that into knowledge, ultimately being able to use that to produce results. With that in mind, the following are three guiding principles I&amp;rsquo;ve decided to use before committing to consuming a piece of content:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is the information valuable in the long-term?

&lt;ul&gt;
&lt;li&gt;Prioritizing long-term knowledge will lead to &lt;a href="https://fs.blog/2019/02/compounding-knowledge/"&gt;compounding knowledge&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the information relevant to immediate projects?

&lt;ul&gt;
&lt;li&gt;Short-term knowledge is needed for the current situation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the information uniquely valuable?

&lt;ul&gt;
&lt;li&gt;There are diminishing returns from consuming more content on the same topic.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Overall, I want to maximize the effectiveness and efficiency of knowledge extraction. The first two principles I&amp;rsquo;m carrying over from the previous system of content consumption. The third principle is new and should help improve the effectiveness of my dam.&lt;/p&gt;

&lt;p&gt;Essentially I want the content to make it through the dam filter if &lt;code&gt;(content is long-term || content is relevant) &amp;amp;&amp;amp; content is unique&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Either of the first two principles must be true for the content to be of any value. It is worth noting that having both being true is the best scenario &amp;ndash; the information is relevant and long-term knowledge. The relevancy principle is important to have as I want to make sure that I&amp;rsquo;m not losing short-term gains on the projects and problems I&amp;rsquo;m working on.&lt;/p&gt;

&lt;h3&gt;Filtering Examples&lt;/h3&gt;

&lt;p&gt;An example of something that would be filtered out is an article on &lt;em&gt;upgrading from Rails 5.x to 6.x&lt;/em&gt;. I wouldn&amp;rsquo;t consider this long-term knowledge as eventually, Rails will progress past these versions. There is no relevance for this article based on my current projects, and thus it should be filtered out. If afterwards I now have a project that would have benefited from this information, not all is lost as I would just &lt;em&gt;seek&lt;/em&gt; it, embracing &lt;em&gt;Just In Time&lt;/em&gt; learning.&lt;/p&gt;

&lt;p&gt;Another example would be pieces of content around &lt;em&gt;empathy in code reviews&lt;/em&gt;. This is great long-term knowledge, as well as relevant to my work. The problem is, I&amp;rsquo;ve already consumed something like this and have extracted and internalized the knowledge. This fails the third principle of being uniquely valuable, and thus I would filter these out. If at a later date, I&amp;rsquo;m doing a presentation or article on empathy in code reviews, I would employ &lt;em&gt;Just In Time&lt;/em&gt; learning to find all relevant information.&lt;/p&gt;

&lt;h2&gt;Effectiveness of Spillway&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The effective removal of content that is no longer valuable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right before consuming a piece of content from the reservoir, I&amp;rsquo;ll revisit the three principles. A piece of content may have lost relevancy, or is no longer going to provide unique value. This is a quick way of removing content.&lt;/p&gt;

&lt;p&gt;With hopefully a smaller number of content sitting in the reservoir, this mechanism will be enough. In the event that the reservoir is overflowing, you can quickly sweep through everything and reevaluate. The key is to be ruthless, as important information will likely find its way back to you.&lt;/p&gt;

&lt;h1&gt;Notion: The New System&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve previously used a mixture of applications to store consumable content. The main application I have used for articles is &lt;a href="https://www.instapaper.com"&gt;Instapaper&lt;/a&gt;. The new system demands more metadata and so I&amp;rsquo;ve made the switch to entirely use &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt;. I&amp;rsquo;ll continue to use separate applications for podcasts and books, but they&amp;rsquo;ll likely have &lt;em&gt;entries&lt;/em&gt; within Notion.&lt;/p&gt;

&lt;h2&gt;The Reservoir&lt;/h2&gt;

&lt;p&gt;Everything is in a single database within Notion, these are the following fields.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;A default text field that holds the name of the piece of content.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt; (e.g., article, video, podcast, book, twitter thread, etc&amp;hellip;)

&lt;ul&gt;
&lt;li&gt;A select field that specifies what medium the content resides in.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Origin&lt;/strong&gt; (e.g., XXXX Newsletter, XXXX Podcast, friend, etc&amp;hellip;)

&lt;ul&gt;
&lt;li&gt;A select field that specifies how I discovered the piece of content.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;URL&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;A URL field that holds the link to the content, which in some cases might be blank depending on the content&amp;rsquo;s type.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Criteria&lt;/strong&gt; (Long-Term, Relevant, and Unique)

&lt;ul&gt;
&lt;li&gt;A multi-select field that indicates the criterion that holds true for the piece of content&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt; (None, Low, Medium, and High)

&lt;ul&gt;
&lt;li&gt;A select field that indicates the value gained after consuming the piece of content.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Created At&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;A timestamp field of when the piece of content was added.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These fields address the three principles within the &lt;em&gt;Criteria&lt;/em&gt; field, as well as metadata on how to reduce the flow of content via the &lt;em&gt;Origin&lt;/em&gt; and &lt;em&gt;Value&lt;/em&gt; fields.&lt;/p&gt;

&lt;p&gt;Within desktop usage, I make use of the &lt;a href="https://chrome.google.com/webstore/detail/save-to-notion/ldmmifpegigmeammaeckplhnjbbpccmm"&gt;Save to Notion&lt;/a&gt; extension as I can fill in more of the metadata from the browser. Within mobile usage, saving content takes another step as I have to go into Notion and add the metadata. For the most part, I try to make use of my desktop when adding content to the Notion database.&lt;/p&gt;

&lt;h1&gt;Iterate and Evolve&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ll keep making changes and iterate on my content consumption system, hopefully making it better each time. The goal is still to turn pieces of content into information that I can use as knowledge.&lt;/p&gt;

&lt;p&gt;The next thing I&amp;rsquo;m planning to tackle is the actual consumption part of the system and having a process for knowledge retention.&lt;/p&gt;
</content>
  </entry>
</feed>
