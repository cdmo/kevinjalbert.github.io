<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jalbert</title>
  <link href="https://kevinjalbert.com"/>
  <updated>2022-07-30T20:00:00-04:00</updated>
  <author>
    <name>Kevin Jalbert</name>
  </author>
  <id>https://kevinjalbert.com</id>
  <entry>
    <title>Digging through Git History for Removed Text</title>
    <link rel="alternate" href="https://kevinjalbert.com/digging-through-git-history-for-removed-text/"/>
    <id>https://kevinjalbert.com/digging-through-git-history-for-removed-text/</id>
    <updated>2022-07-31T23:49:17-04:00</updated>
    <published>2022-07-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">The text you are looking for isn't in the current revision anymore, and so you'll have to dig through the Git history somehow, looking for when it was removed/introduced. Read about how I approached this from a CLI perspective, using a script to simplify these searches for me.</description>
    <content type="html">&lt;h1&gt;Deleted files in Git&lt;/h1&gt;

&lt;p&gt;Git keeps a history of practically &lt;em&gt;everything&lt;/em&gt; for your repository. I cannot state how powerful a tool it is, and has helped me immensely as I try to understand the &lt;em&gt;why&lt;/em&gt; of some code.&lt;/p&gt;

&lt;p&gt;There are times when I&amp;rsquo;ve tried to &lt;em&gt;find&lt;/em&gt; something that doesn&amp;rsquo;t exist in the current revision but was in a previous version. I&amp;rsquo;ve always struggled with this, and I wanted a &lt;em&gt;simpler&lt;/em&gt; and (hopefully) &lt;em&gt;quicker&lt;/em&gt; way to conduct this search.&lt;/p&gt;

&lt;p&gt;I decided to script my way to a solution that I feel happy about for now.&lt;/p&gt;

&lt;h1&gt;Let&amp;rsquo;s go Digging&lt;/h1&gt;

&lt;p&gt;This script ends up doing the following to search through Git history for matching text:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Search for any commits with any &amp;lsquo;additions/removals&amp;rsquo; of the search query.&lt;/li&gt;
&lt;li&gt;For each commit, get the list of files that contain the search query.&lt;/li&gt;
&lt;li&gt;For each file, &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;git&lt;/code&gt; patch and print the lines that match the search query (with the match highlighted).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A lot of the &lt;code&gt;git&lt;/code&gt; commands are leveraging the &lt;code&gt;--pickaxe-regex -S&amp;lt;query&amp;gt;&lt;/code&gt; flags to search changes with regex powers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-S&amp;lt;string&amp;gt;
  Look for differences that change the number of occurrences of the specified string (i.e. addition/deletion) in a file.

--pickaxe-regex
  Treat the &amp;lt;string&amp;gt; given to -S as an extended POSIX regular expression to match.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would allow for the search query to leverage regular expressions. The following is an example of looking through my &lt;a href="https://github.com/kevinjalbert/dotfiles"&gt;dotfiles repo&lt;/a&gt; for &lt;code&gt;zgen&lt;/code&gt; (which is something I don&amp;rsquo;t use anymore).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;❯ git dig "\szgen"
Searching for any commits with any 'additions/removals'
  Matching regex: "\szgen"

commit bd5dc58e9f94b7b62013a1378fbe7d101ccc70ec
Author: Kevin Jalbert &amp;lt;kevin.j.jalbert@gmail.com&amp;gt;
Date:   Fri Jan 6 17:42:44 2017 -0500

    Update zsh.rake to install zplug instead of zgen

FILE -&amp;gt; tasks/zsh.rake
-  desc "Install zgen"
-    section "Installing zgen"

# Plus a few more commits
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The git-dig Script&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://gist.github.com/kevinjalbert/b390e2d22efa1c55a46c52d1f7ff3cde"&gt;GitHub Gist&lt;/a&gt; will be the canonical reference of the &lt;code&gt;git-dig&lt;/code&gt; script (and will see updates as needed).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'optparse'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'open3'&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;files_with_search_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="sb"&gt;`git show --format="" --name-only &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; -i --pickaxe-regex -S &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;grep_over_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;git_show_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git show --format='' -p &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -- '&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;
  &lt;span class="n"&gt;grep_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"grep -i --color=always -E &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;git_show_cmd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; | &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;grep_cmd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;git_pickaxe_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git log --no-merges --format=%h"&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" --after=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" --before=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" -i --pickaxe-regex -S &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

  &lt;span class="no"&gt;Open3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;popen3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;git_log_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;git_commit_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="sb"&gt;`git show --no-patch &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_root_dir&lt;/span&gt;
  &lt;span class="n"&gt;current_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pwd&lt;/span&gt;

  &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exist?&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;current_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;".git"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;parent_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;parent_dir&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;current_dir&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"No .git repo found in path (or parent paths)."&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;current_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parent_dir&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;current_dir&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# Handle options&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="no"&gt;OptionParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;banner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Usage: git-dig [options] [regex query]"&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--after=DATE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Only searches commits more recent than the specific date."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--before=DATE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Only searches commits older recent than the specific date."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"-h"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"--help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Prints this help"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse!&lt;/span&gt;

&lt;span class="c1"&gt;# Get search query&lt;/span&gt;
&lt;span class="n"&gt;search_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'""'&lt;/span&gt; &lt;span class="c1"&gt;# empty search as it would just be a pair of quotes&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"You need to pass a search term as input."&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Searching for any commits with any 'additions/removals'"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"  Matching regex: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"  With search options: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c1"&gt;# Get SHAs of all commits which had some 'addition/removal' of the search term&lt;/span&gt;
&lt;span class="n"&gt;git_pickaxe_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gets&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;

    &lt;span class="n"&gt;sha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;git_commit_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;

    &lt;span class="c1"&gt;# Print diff of files which have search term&lt;/span&gt;
    &lt;span class="n"&gt;files_with_search_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"FILE -&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;grep_over_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Alternative Solutions&lt;/h1&gt;

&lt;p&gt;To note, most Git GUIs have some search functionality in place which can satisfy the majority of this. Using the Git CLI is still a nice thing to be able to leverage though, which is why I went this route.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Import Raindrop.io Highlights into Readwise</title>
    <link rel="alternate" href="https://kevinjalbert.com/import-raindrop-io-highlights-into-readwise/"/>
    <id>https://kevinjalbert.com/import-raindrop-io-highlights-into-readwise/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-06-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I really like how Raindrop.io handles highlights and bookmarking in general. As of the time of writing, there isn't any official solution to import Raindrop.io highlights into Readwise. Check out my script that bridges this gap until an official integration exists.</description>
    <content type="html">&lt;h1&gt;Raindrop.io&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve recently discovered &lt;a href="https://raindrop.io/"&gt;Raindrop.io&lt;/a&gt; as a bookmarking/highlighting service. It has been refreshing to use as it exudes polish. The browser extension is nice as it indicates if you&amp;rsquo;ve bookmarked the page already, shows you highlights on the page, and allows you to highlight the content of the page. The iOS client is also great and does everything I need. The cherry-on-top is that the &lt;em&gt;free&lt;/em&gt; plan is very capable and has unlimited highlights per article.&lt;/p&gt;

&lt;h1&gt;Readwise&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve been a user of &lt;a href="https://readwise.io/"&gt;Readwise&lt;/a&gt; for over two years at this point. It&amp;rsquo;s an important service for me as it allows me to revisit article&amp;rsquo;s key points that I&amp;rsquo;ve highlighted. Readwise has many integrations to import highlights into it. I&amp;rsquo;ve been using &lt;a href="https://web.hypothes.is/"&gt;Hypothesis&lt;/a&gt; for a while, which has an official Readwise integration.&lt;/p&gt;

&lt;h1&gt;No Official Integration&lt;/h1&gt;

&lt;p&gt;As I moved over to Raindrop.io, it dawned on me that Readwise doesn&amp;rsquo;t yet have any official integration with Raindrop.io. I&amp;rsquo;ve emailed Readwise about this and got the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You&amp;rsquo;re actually one of the first to request an integration with Raindrop.io. I&amp;rsquo;ve noted your request in our system, so as more users request the integration then it&amp;rsquo;ll move up in the queue to develop.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I didn&amp;rsquo;t want to wait around and I noticed that both services have an API&amp;hellip;&lt;/p&gt;

&lt;h1&gt;Import Raindrop.io Highlights into Readwise&lt;/h1&gt;

&lt;p&gt;Looking at both the &lt;a href="https://readwise.io/api_deets"&gt;Readwise API&lt;/a&gt; and &lt;a href="https://developer.raindrop.io/"&gt;Raindrop.io API&lt;/a&gt;, it seemed fairly straight-forward to connect them up.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iterate highlights in Raindrop&lt;/li&gt;
&lt;li&gt;Import highlights to Readwise&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was noted that Readwise &lt;em&gt;de-dupe highlights by title/author/text/source&lt;/em&gt;url_, so the API was idempotent if I send the same highlights.&lt;/p&gt;

&lt;p&gt;I did hit a couple of snags in building my solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highlights didn&amp;rsquo;t have the title or author of the article

&lt;ul&gt;
&lt;li&gt;I used &lt;code&gt;nokogiri&lt;/code&gt; to fetch these from the article&amp;rsquo;s URL&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;How to know when I&amp;rsquo;ve already processed a highlight

&lt;ul&gt;
&lt;li&gt;Highlights were ordered by last created.&lt;/li&gt;
&lt;li&gt;I keep track of the last uploaded highlight&amp;rsquo;s ID from Readwise, this acts as the marker to know when I&amp;rsquo;ve caught up with the last import.&lt;/li&gt;
&lt;li&gt;The marker ID is automatically recorded in the script for future executions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Waiting for the Future Official Integration&lt;/h1&gt;

&lt;p&gt;My approach works and only requires to be run periodically. I&amp;rsquo;ve been toying around with the idea of just having a &lt;code&gt;cron&lt;/code&gt; run it for me hourly.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t put in annotations from Raindrop.io (as I&amp;rsquo;m using the free plan for now), but it wouldn&amp;rsquo;t be hard to add that.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t bother removing highlights from Readwise when highlights are &lt;em&gt;deleted&lt;/em&gt; on Raindrop.io. I noted that this is the &lt;a href="https://help.readwise.io/article/95-will-deleting-a-highlight-in-readwise-delete-the-original-or-vice-versa"&gt;default behaviour with Readwise according to their FAQ&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if you delete the highlight in the original source, the highlight will not be deleted in Readwise.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An official integration would be nice, but until then this does the trick.&lt;/p&gt;

&lt;h1&gt;The Import Script&lt;/h1&gt;

&lt;p&gt;The following is the Ruby script for importing Raindrop.io highlights into Readwise. You need to acquire your API tokens for both services and substitute them into the placeholders.&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://gist.github.com/kevinjalbert/1d77add23d9bdaa615a5bd5c05328678"&gt;GitHub Gist&lt;/a&gt; will be the canonical reference of the import script (and will see updates as needed).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"httparty"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"nokogiri"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"open-uri"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"uri"&lt;/span&gt;

&lt;span class="no"&gt;RAINDROP_AUTH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"&lt;/span&gt;
&lt;span class="no"&gt;READWISE_AUTH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"&lt;/span&gt;
&lt;span class="no"&gt;LAST_SAVED_HIGHLIGHT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;000000000&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;- Keeps track of import position (Updates automatically)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Nokogiri&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;at_css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;domain_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^www\./i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;request_raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;HTTParty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://api.raindrop.io/rest/v1/highlights?page=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;perpage=50"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"Authorization"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Bearer &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;RAINDROP_AUTH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"Content-Type"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"application/json"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_highlight_to_readwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;HTTParty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://readwise.io/api/v2/highlights/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"Authorization"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Token &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;READWISE_AUTH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"Content-Type"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"application/json"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;highlights: &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="n"&gt;title_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
          &lt;span class="ss"&gt;author: &lt;/span&gt;&lt;span class="n"&gt;domain_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
          &lt;span class="ss"&gt;source_url: &lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"articles"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;highlighted_at: &lt;/span&gt;&lt;span class="no"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"created"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nf"&gt;iso8601&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;to_json&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Updating last saved highlight value to &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;updated_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/LAST_SAVED_HIGHLIGHT=\d+/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"LAST_SAVED_HIGHLIGHT=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;updated_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;first_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Processing Raindrop.io highlights from page &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request_raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s2"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;empty?&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"No more highlights to process"&lt;/span&gt;
    &lt;span class="n"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"-&amp;gt; Importing highlight into Readwise (&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'created'&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;

    &lt;span class="n"&gt;saved_highlight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;save_highlight_to_readwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;

    &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;saved_highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"modified_highlights"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;first_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;LAST_SAVED_HIGHLIGHT&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Reached last saved highlight"&lt;/span&gt;
      &lt;span class="n"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Improvised Portable Smart Speaker</title>
    <link rel="alternate" href="https://kevinjalbert.com/improvised-portable-smart-speaker/"/>
    <id>https://kevinjalbert.com/improvised-portable-smart-speaker/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-05-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about my improvised solution that lets me enjoy having a smart speaker outside on my backyard patio for family and friends to enjoy.</description>
    <content type="html">&lt;p&gt;This is a quick post, but I feel that it&amp;rsquo;s worth sharing. This &lt;em&gt;hack&lt;/em&gt; might be super obvious, but it didn&amp;rsquo;t come to me until after searching for more &lt;em&gt;conventional&lt;/em&gt; options.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR Connect a USB battery bank to a Google Home Mini and take it outside with you (assuming you have Wifi coverage outside).&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Music in the Backyard&lt;/h2&gt;

&lt;p&gt;At my house, the kids (2 and 5) like playing out in the backyard. We have a patio with seating under a gazebo, so it is overall quite blissful. The only thing missing is some light music to enjoy.&lt;/p&gt;

&lt;p&gt;There are plenty of options to get music into the backyard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Phones&lt;/li&gt;
&lt;li&gt;Portable Bluetooth speakers&lt;/li&gt;
&lt;li&gt;Speakers under the eaves of the roof&lt;/li&gt;
&lt;li&gt;And likely many other options&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our house, we&amp;rsquo;ve gotten pretty used to having many smart speakers (namely Google Home Minis) for music and other random things (timers, weather, questions, etc&amp;hellip;). I had my sights on bringing that technology outside to the backyard patio.&lt;/p&gt;

&lt;h2&gt;Getting Google Assistant Outside&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;To note, if I had used another company smart speaker then this might have gone a different path, but ultimately this approach would still work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I wanted to get Google Assistant outside, as that was the key part of the smart speaker &amp;ndash; responding to voice commands. We&amp;rsquo;re a household of Apple products, except for Google with respect to our house automation aspect. Using our phones wasn&amp;rsquo;t ideal to drive this system &amp;ndash; we&amp;rsquo;d need a dedicated product.&lt;/p&gt;

&lt;p&gt;Looking around led me to the &lt;a href="https://ca.jbl.com/voice-activated-speaker/"&gt;JBL Link series of Voice-Activated Speakers&lt;/a&gt;, which looked perfect&amp;hellip; except for the price ($200+).&lt;/p&gt;

&lt;p&gt;I then realized I had the product in front of me the whole time &amp;ndash; the Google Home Mini.&lt;/p&gt;

&lt;p&gt;The only problem is powering it outside and ensuring it gets a Wifi signal.&lt;/p&gt;

&lt;h2&gt;Power and Wifi&lt;/h2&gt;

&lt;p&gt;I ensured that my backyard patio would get sufficient Wifi (I have a mesh network) so that connectivity was done.&lt;/p&gt;

&lt;p&gt;It looks like it might be possible to use a mobile hotspot to make this work as well, but it looked more involved (I was seeing two phones are needed). Fortunately, I just didn&amp;rsquo;t need to do that.&lt;/p&gt;

&lt;p&gt;Powering was pretty simple as well&amp;hellip; I just pulled out one of my many USB battery banks. I then connected it to the Google Home Mini with a USB micro cable (to note &amp;ndash; the 1st Generation of Google Home Minis use USB micro, while the 2nd Generations use a barrel-style connection). Simple solution and I get enough power for my usage. In the worse case, I just get a second battery bank. I also considered just using an outdoor outlet, but for my house, it wasn&amp;rsquo;t positioned in a good location, and then the likelihood of it being forgotten outside increases.&lt;/p&gt;

&lt;h2&gt;Results&lt;/h2&gt;

&lt;p&gt;Overall, I&amp;rsquo;m quite pleased with the solution even though it looks fairly hacky. I keep the USB cable and battery bank next to the Google Home Mini closest to the patio, making it easy to unplug and move outside as needed.&lt;/p&gt;

&lt;p&gt;There are third-party products that seamlessly add this portability to your smart speaker, but it was just another thing to buy (and the availability wasn&amp;rsquo;t there in Canada).&lt;/p&gt;

&lt;p&gt;One concern I have is with respect to weather resistance (i.e., rain or splashes of water from the kids), but it&amp;rsquo;s something that I&amp;rsquo;m willing to gamble with for how much it costs ;).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Access Local Docker Containers by Domain Names instead of Ports</title>
    <link rel="alternate" href="https://kevinjalbert.com/access-local-docker-containers-by-domain-names-instead-of-ports/"/>
    <id>https://kevinjalbert.com/access-local-docker-containers-by-domain-names-instead-of-ports/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-04-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read how to use domain names instead for your containers during development. You'll have an easier time remembering the container names instead of their ports.</description>
    <content type="html">&lt;h2&gt;Avoiding Ports when Accessing Local Docker Containers&lt;/h2&gt;

&lt;p&gt;When using &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; during development, you&amp;rsquo;ll expose your application on localhost. Typically, you simply forward the exposed port from the application to the host machine. This allows you to access it via &lt;code&gt;localhost:8080&lt;/code&gt; (based on whatever port you specified in the configuration).&lt;/p&gt;

&lt;p&gt;I like to have nice &lt;em&gt;vanity&lt;/em&gt; URLs for my local applications like &lt;code&gt;whoami-one.localhost&lt;/code&gt; and avoid using ports. I&amp;rsquo;ll demonstrate an easy way to get them using &lt;a href="https://github.com/nginx-proxy/nginx-proxy"&gt;&lt;code&gt;nginxproxy/nginx-proxy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2022-04-30-access-local-docker-containers-by-domain-names-instead-of-ports/with-port.png" style="width: 49%; height: 80%"/&gt;
  &lt;img src="/images/2022-04-30-access-local-docker-containers-by-domain-names-instead-of-ports/with-domain-name.png" style="width: 49%; height: 80%"/&gt;
&lt;/div&gt;

&lt;p&gt;It can be error-prone remembering what port corresponds to what application during development.&lt;/p&gt;

&lt;h2&gt;The Setup&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m using &lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt;, but in theory, you can do this with just &lt;code&gt;docker&lt;/code&gt; commands as well.&lt;/p&gt;

&lt;p&gt;The core of the solution involves using &lt;code&gt;nginxproxy/nginx-proxy&lt;/code&gt;, which generates reverse proxy configurations for &lt;a href="https://www.nginx.com/"&gt;nginx&lt;/a&gt; (and reloads it) when containers are started/stopped.&lt;/p&gt;

&lt;p&gt;In the following snippet, you&amp;rsquo;ll see how I&amp;rsquo;m specifying two services: &lt;code&gt;nginx-proxy&lt;/code&gt; and &lt;code&gt;whoami-one&lt;/code&gt;. The &lt;code&gt;whoami-one&lt;/code&gt; service is just for demonstration purposes, but ideally is an application you are developing. The &lt;code&gt;VIRTUAL_HOST&lt;/code&gt; environment variable specifies the domain name that you will use to reach that service.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx-proxy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginxproxy/nginx-proxy&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;80:80'&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/tmp/docker.sock:ro&lt;/span&gt;

  &lt;span class="na"&gt;whoami-one&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;containous/whoami&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;VIRTUAL_HOST=whoami-one.localhost&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go and visit &lt;code&gt;whoami-one.localhost&lt;/code&gt; and you should see it all work!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I&amp;rsquo;ve used &lt;a href="https://en.wikipedia.org/wiki/.localhost"&gt;&lt;code&gt;localhost&lt;/code&gt; as the Top-Level-Domain (TLD)&lt;/a&gt; as it is reserved and avoids conflicts. I also use Chrome as my browser, which I believe automatically directs &lt;code&gt;.localhost&lt;/code&gt; domains to localhost &amp;ndash; otherwise you&amp;rsquo;d have to do a bit more work to get that TLD to work.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Multiple Services and Projects&lt;/h2&gt;

&lt;p&gt;One issue with the above solution is that it doesn&amp;rsquo;t work &lt;em&gt;across&lt;/em&gt; services between different projects. Each &lt;code&gt;docker compose&lt;/code&gt; sets up a default network that includes the name of the current directory. We can instead specify a consistent docker network to work around this limitation.&lt;/p&gt;

&lt;p&gt;First, we&amp;rsquo;ll specify just the &lt;code&gt;nginx-proxy&lt;/code&gt; container, but with a &lt;em&gt;default named&lt;/em&gt; network. This makes it so all containers on this network can communicate.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;nginx-proxy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginxproxy/nginx-proxy&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;80:80'&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/tmp/docker.sock:ro&lt;/span&gt;

&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local-network&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we can make a new &lt;code&gt;whoami&lt;/code&gt; project (in a different directory) belonging to the same network that we defined for the &lt;code&gt;nginx-proxy&lt;/code&gt;. This allows the two containers to see each other and we can visit &lt;code&gt;whoami.localhost&lt;/code&gt; with no problems&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;whoami&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;containous/whoami&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;VIRTUAL_HOST=whoami.localhost&lt;/span&gt;

&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local-network&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Overall, I enjoy using this to help differentiate local Docker containers using domain names instead of ports.&lt;/p&gt;

&lt;h2&gt;Other Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;There are plenty of other options that &lt;a href="https://github.com/nginx-proxy/nginx-proxy"&gt;&lt;code&gt;nginx-proxy&lt;/code&gt;&lt;/a&gt; has, like SSL support.&lt;/li&gt;
&lt;li&gt;This also isn&amp;rsquo;t a unique solution, as &lt;a href="https://github.com/traefik/traefik"&gt;Traefik&lt;/a&gt; can also be used in a similar fashion.&lt;/li&gt;
&lt;li&gt;A throwback to an older project I made is &lt;a href="/docker-compose-dns-consistency-dcdc/"&gt;Docker Compose DNS Consistency (DCDC)&lt;/a&gt;, which provides consistent DNS resolution for services (not only for HTTP) internal and external to the Docker network.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Quickly Toggle Fonts in Google Docs</title>
    <link rel="alternate" href="https://kevinjalbert.com/quickly-toggle-fonts-in-google-docs/"/>
    <id>https://kevinjalbert.com/quickly-toggle-fonts-in-google-docs/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-03-26T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">If you use two fonts in Google Docs often (i.e., like using mono fonts for code keywords) then read my approach to toggling between two fonts quickly using AppleScript on MacOS.</description>
    <content type="html">&lt;p&gt;I spend a fair amount working in technical documents within &lt;a href="https://www.google.ca/docs/about/"&gt;Google Docs&lt;/a&gt; at work. Due to the content of these documents, there will be parts of them that visually resonate with a monospaced font (i.e., name of a class/module/method). Unfortunately, Google Docs does not natively support &lt;a href="https://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; for &lt;code&gt;code spans&lt;/code&gt; by surrounding text with backtick quotes.&lt;/p&gt;

&lt;h2&gt;Ways to Toggle Fonts in Google Docs&lt;/h2&gt;

&lt;h3&gt;Option 1 – Using the Mouse&lt;/h3&gt;

&lt;p&gt;Mouse to the Font select and pick one
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font mouse" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-mouse.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h3&gt;Option 2 – Keyboard using the Menu Search&lt;/h3&gt;

&lt;p&gt;Use the menu search option via the keyboard Option+/ (or Alt+/) and type the font name, then push enter
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font keyboard menu" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-keyboard-menu.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h3&gt;Option 3 - Global Hotkey Triggering AppleScript&lt;/h3&gt;

&lt;p&gt;Use a global hotkey &lt;a href="/global-hotkeys-using-the-hyper-key/"&gt;Hyper&lt;/a&gt;+C to automate Option 2 (and let you toggle between two fonts)
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font keyboard applescript" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-keyboard-applescript.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h2&gt;The AppleScript Code&lt;/h2&gt;

&lt;p&gt;The following is the dump of the AppleScript I&amp;rsquo;m using. It has some guards in place to ensure that it only works when your focus is in Google Chrome and the current tab is a Google Doc (or Sheet/Slide).&lt;/p&gt;

&lt;p&gt;The fonts will toggle between Arial and Roboto Mono (although easy enough to modify to your own preference). The Font &lt;em&gt;selector&lt;/em&gt; works for me&amp;hellip; however Google could change it at anytime, breaking this flow.&lt;/p&gt;

&lt;p&gt;This code can then be put into a global hotkey (using something like &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; or &lt;a href="https://www.raycast.com/"&gt;Raycast&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight applescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Check to make sure we are focused on Google Chrome&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"System Events"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeApp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;process&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;whose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;frontmost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeApp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome isn't active application"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# Check to make sure we are in a https://docs.google.com/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;tab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;does not contain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://docs.google.com/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"URL is not under https://docs.google.com"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;tab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;front&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;javascript&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"document.querySelector('#docs-font-family &amp;gt; div &amp;gt; div &amp;gt; div.goog-toolbar-menu-button-caption.goog-inline-block').innerHTML;"&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;missing value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"No Font Found"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"System Events"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;down&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Roboto Mono"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Arial"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Roboto Mono"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Releasing github_contributions Ruby Gem</title>
    <link rel="alternate" href="https://kevinjalbert.com/releasing-github-contributions-ruby-gem/"/>
    <id>https://kevinjalbert.com/releasing-github-contributions-ruby-gem/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-02-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">A post about releasing my new Ruby gem github_contributions! This is a tool that I've been using to track my GitHub contributions.</description>
    <content type="html">&lt;p&gt;This post is more of an announcement of my new &lt;a href="https://rubygems.org/gems/github_contributions"&gt;Ruby gem &lt;code&gt;github_contributions&lt;/code&gt;&lt;/a&gt;. It is a tool that I&amp;rsquo;ve been using to track my GitHub contributions. I&amp;rsquo;ve put the contents of the &lt;a href="https://github.com/kevinjalbert/github_contributions"&gt;README.md from the repository&lt;/a&gt; here as it does a good job describing the tool.&lt;/p&gt;

&lt;h2&gt;GitHub Contributions&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Ever wanted to know where you (or someone else) are making contributions on GitHub?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Your GitHub profile shows you the &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar"&gt;Contributions Calendar&lt;/a&gt; and &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contribution-activity"&gt;Contribution activity&lt;/a&gt;, which both provide great visualizations and details covering contributions of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;creating/closing issues&lt;/li&gt;
&lt;li&gt;creating/closing/merging/reviewing pull requests&lt;/li&gt;
&lt;li&gt;creating repositories&lt;/li&gt;
&lt;li&gt;authoring commits on the main branch of repositories&lt;/li&gt;
&lt;li&gt;starting/answering discussions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally wanted to track comments on issues and pull requests as I felt they were a good indication of contributions. It sometimes isn&amp;rsquo;t uncommon for a lot of discussions to happen on issues or even a pull request.&lt;/p&gt;

&lt;p&gt;I am a fan of &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt; right now to track my day at work. Recording these contributions in GitHub makes it simple to recall what I did in previous days/weeks. This is even more important if you have a &lt;a href="https://jvns.ca/blog/brag-documents/"&gt;&lt;em&gt;BragDoc&lt;/em&gt;&lt;/a&gt;. As Obsidian uses Markdown, that is the primary format that this tool is built for.&lt;/p&gt;

&lt;h3&gt;Install&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;github_contributions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need a GitHub Personal Access Token in your ENVs as &lt;code&gt;GITHUB_ACCESS_TOKEN&lt;/code&gt; for this gem to work.&lt;/p&gt;

&lt;h3&gt;Usage&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for today&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for today only in the 'shopify' org&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"shopify"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' in the last week&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"last week"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for the week before last&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"two weeks ago"&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"one week ago"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for only yesterday&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"yesterday"&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"yesterday"&lt;/span&gt;

&lt;span class="c"&gt;# Help&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Contributions are grouped by their pull request or issue in order of creation time. This ends up producing a rather detailed list of where contributions were made in the specified time frame. Links are present to easily allow you to jump directly to the contribution. Everything is displayed in Markdown, ready to be copy/pasted where desired. The following is an example of what the output looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978"&gt;Support function in &lt;code&gt;message&lt;/code&gt; expectation in &lt;code&gt;t.throws&lt;/code&gt; / &lt;code&gt;t.throwsAsync&lt;/code&gt;&lt;/a&gt; by &lt;a href="https://github.com/sindresorhus"&gt;sindresorhus&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978"&gt;Issue Opened at 2022-02-26 08:42:19 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978#issuecomment-1051842838"&gt;IssueComment Created at 2022-02-26 08:43:12 UTC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40"&gt;Use &lt;code&gt;for..of&lt;/code&gt; loop&lt;/a&gt; by &lt;a href="https://github.com/fisker"&gt;fisker&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#discussion_r815662489"&gt;PullRequestReviewComment Created at 2022-02-28 08:18:52 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#pullrequestreview-894766255"&gt;PullRequestReview Created at 2022-02-28 08:18:52 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40"&gt;PullRequest Closed at 2022-02-28 08:20:12 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#issuecomment-1054001902"&gt;IssueComment Created at 2022-02-28 08:20:16 UTC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Gamifying my Son's Physiotherapy</title>
    <link rel="alternate" href="https://kevinjalbert.com/gamifying-my-sons-physiotherapy/"/>
    <id>https://kevinjalbert.com/gamifying-my-sons-physiotherapy/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2022-01-30T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about how I use Habitica to help motivate my son (age 5) to complete his at-home physiotherapy.</description>
    <content type="html">&lt;h2&gt;Context&lt;/h2&gt;

&lt;p&gt;My oldest son is 5 years old at the time of writing this post. He has &lt;a href="https://www.cdc.gov/ncbddd/cp/facts.html"&gt;Cerebral Palsy&lt;/a&gt; (fairly mild, but still affects motor control of his legs). To ensure he strengthens and improves his mobility, we are constantly doing physiotherapy. Between physiotherapy appointments, we supplement with daily at-home stretches and exercises.&lt;/p&gt;

&lt;p&gt;Trying to explain and motivate a young child on the benefits of physiotherapy is challenging. He doesn&amp;rsquo;t quite understand the long-term benefits and implications of it. The other aspect is that there are &lt;em&gt;always&lt;/em&gt; more fun and interesting things to be doing other than stretches and exercises.&lt;/p&gt;

&lt;p&gt;As my son loves to play video games with me and loves the idea of having &lt;em&gt;missions/quests&lt;/em&gt;. We decided to try and &lt;em&gt;gamify&lt;/em&gt; things to help motivate him to complete at-home physiotherapy.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: We&amp;rsquo;ve only been using this approach for about two weeks. We&amp;rsquo;re still figuring out the best tactics and whether this will work long-term for us. Early results are promising.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://habitica.com/"&gt;Habitica&lt;/a&gt;! It&amp;rsquo;s a web/mobile application that gamifies habits and tasks. You are represented by an avatar that can level up, go on quests, gain money, and purchase rewards/equipment/pets.&lt;/p&gt;

&lt;p&gt;Due to my son&amp;rsquo;s age, this is something that only my wife and I have access to on our mobile devices. Habitica operates on grounds of trust and discipline to ensure you don&amp;rsquo;t &lt;em&gt;cheat&lt;/em&gt; the gamification as you have to set your own rewards. We all discussed the habits and tasks together and ensured that the &lt;em&gt;difficulties&lt;/em&gt; are valid (as rewards are based on the level of difficulty).&lt;/p&gt;

&lt;h2&gt;How we use Habitica&lt;/h2&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2022-01-31-gamifying-my-sons-physiotherapy/habitica-habits.png" style="width: 49%; height: 80%"/&gt;
  &lt;img src="/images/2022-01-31-gamifying-my-sons-physiotherapy/habitica-dailies.png" style="width: 49%; height: 80%"/&gt;
&lt;/div&gt;

&lt;h3&gt;Habits&lt;/h3&gt;

&lt;p&gt;Habits are core to Habitica and are the most &lt;em&gt;flexible&lt;/em&gt; tool available. You are able to specify multiple habits and their respective difficulty. A habit can offer positive or negative reinforcement (via the +/- buttons).&lt;/p&gt;

&lt;p&gt;Entries in this section are for things that happen on an irregular basis (i.e., behaviours), or things that are recurrent but not necessarily daily.&lt;/p&gt;

&lt;p&gt;I found that breaking the habits up by a section is a nice hack. By using a habit with no positive/negative reinforcement, this is easily achievable (see above image).&lt;/p&gt;

&lt;h3&gt;Dailies&lt;/h3&gt;

&lt;p&gt;These are tasks that &lt;em&gt;have&lt;/em&gt; to be done each day, which is where our exercises and stretches end up fitting in. The notes help us as well, giving us some numeric goals to hit for each one.&lt;/p&gt;

&lt;p&gt;The novel aspect with dailies is that if they are not completed by the end of the day, then the avatar takes damage and loses some health. The dailies also help out by providing positive rewards in the form of quest progression, money, and experience.&lt;/p&gt;

&lt;p&gt;You can &lt;em&gt;pause&lt;/em&gt; the damage though, which can be good if the dailies cannot be completed due to specific circumstances (i.e., spending the day at grandparents, illness, etc.).&lt;/p&gt;

&lt;h3&gt;Tasks&lt;/h3&gt;

&lt;p&gt;To be honest, we haven&amp;rsquo;t used much of this section, but it is a basic to-do list. One-off tasks would fit in here, but from a chore/behaviour/exercise perspective, those tasks would fit better under habits or dailies.&lt;/p&gt;

&lt;h3&gt;Rewards&lt;/h3&gt;

&lt;p&gt;Every action in Habitica provides some level of reward in the form of experience points, gold, or random item drops. The experience points end up leveling up the avatar (which also provides a full health recovery). Items are either equipment or mechanics surrounding pets.&lt;/p&gt;

&lt;p&gt;You can use gold to buy items like equipment, health potions, and pet-related items. The interesting aspect of gold is you can buy custom rewards that you&amp;rsquo;ve created. For example, for 10 gold my son can buy 15 more minutes on his iPad (or video game console). These custom rewards provide real-world motivation.&lt;/p&gt;

&lt;h3&gt;Party Quests&lt;/h3&gt;

&lt;p&gt;This is a nice piece in Habitica that my son enjoys. You are able to embark on &lt;em&gt;quests&lt;/em&gt; with a group (although we just go solo &amp;ndash; but could be fun with family/friends). These quests can be things like battling a monster or finding items. The progress is based on the completion of the dailies and habits. When you complete a quest you gain extra rewards.&lt;/p&gt;

&lt;h3&gt;Items/Pets/Equipments/Classes/Skills&lt;/h3&gt;

&lt;p&gt;You are able to buy and equip new equipment for your avatar (which changes their appearance) and raise pets. These are all little things, but they add to the element of progression and personalization.&lt;/p&gt;

&lt;p&gt;We haven&amp;rsquo;t really gotten far enough yet to figure out the minor nuances with these features, but they can only add to the experience.&lt;/p&gt;

&lt;h2&gt;Results Thus Far&lt;/h2&gt;

&lt;p&gt;The results have been good so far, although it is likely too early to tell if my son&amp;rsquo;s enthusiasm will wane as time goes on. He likes to do his exercises as he enjoys &lt;em&gt;checking&lt;/em&gt; off the dailies and seeing how much progress he&amp;rsquo;ll make in the current quest. He looks forward to seeing how much experience he needs to achieve the next level, and the little cosmetics on equipment and pets are also a nice touch.&lt;/p&gt;

&lt;p&gt;The habits section is nice, although I feel like it can become unwieldy depending on how many things get slotted in there. I feel that this is a section I&amp;rsquo;ll likely cap at 10~ things total. My son has done &lt;em&gt;good&lt;/em&gt; things and he would say, &lt;em&gt;&amp;ldquo;Can we put that in Habitica?&amp;rdquo;&lt;/em&gt; which makes me chuckle. The negative habits are hit or miss in my opinion as in the moment it isn&amp;rsquo;t the greatest to pull your phone out to do it.&lt;/p&gt;

&lt;p&gt;Overall, Habitica is a nice tool we have at our disposal. Like all things, we&amp;rsquo;ll keep an eye on it and see if it is fulfilling its purpose &amp;ndash; motivation for daily exercises, stretches, and chores.&lt;/p&gt;

&lt;p&gt;As we&amp;rsquo;re working on reading, a lot of the direction and usage is completely guided by us, the parents. I am curious to see how this plays out when he can read more.&lt;/p&gt;

&lt;p&gt;One last thing for anyone who wants to let their child have their own account, Habitica has a policy for those under 13. It requires their &lt;a href="https://habitica.fandom.com/wiki/Children_Using_Habitica"&gt;parent or guardian to provide permission&lt;/a&gt; and makes it so the public social aspects get locked down.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Steam Remote Play is Amazing</title>
    <link rel="alternate" href="https://kevinjalbert.com/steam-remote-play-is-amazing/"/>
    <id>https://kevinjalbert.com/steam-remote-play-is-amazing/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2021-12-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">If you have a gaming PC and are not taking advantage of Steam Remote Play, then you are missing out on some comfy gaming. Read about what Steam Remote Play is if you aren't familiar with it, as well as some additional tips to make the most of it.</description>
    <content type="html">&lt;p&gt;I&amp;rsquo;m keeping this post fairly short due to the holiday season (I also just moved houses at the end of November, so it has been a bit hectic the last month). This post can be seen more as an informative tip for gamers who use &lt;a href="https://store.steampowered.com/"&gt;Steam&lt;/a&gt;, which they might not know about.&lt;/p&gt;

&lt;h2&gt;Steam Remote Play&lt;/h2&gt;

&lt;p&gt;If you do any form of PC gaming, you likely know about Steam. It&amp;rsquo;s a great service that has been around for a while. Fun fact &amp;ndash; I found out that my Steam account is 17 years old! Steam has a wide selection of games, and over the years many new features have been added. I want to talk about one such feature &amp;ndash; &lt;a href="https://store.steampowered.com/remoteplay"&gt;Steam Remote Play&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Steam Remote Play blew my mind when I first tried it out. It lets you stream a game from a  system running Steam to a compatible client (e.g., an iPhone/iPad, Apple TV, etc.). The inputs and outputs work seamlessly and you are able to fully experience the game without being confined to where your gaming PC is located.&lt;/p&gt;

&lt;p&gt;I personally use the &lt;a href="https://apps.apple.com/us/app/steam-link/id1246969117"&gt;Steam Link&lt;/a&gt; app on my iPhone and Apple TV. Apple&amp;rsquo;s ecosystem can use Bluetooth controllers (e.g., Xbox Controller) as an input, so this allows me to play games from a comfy couch like a console gamer. For those times that I need a keyboard or mouse, Steam Remote Play can also stream to another Steam Desktop client on my MacBook.&lt;/p&gt;

&lt;h2&gt;Tips&lt;/h2&gt;

&lt;p&gt;The following are a couple of tips that I&amp;rsquo;ve found useful during my time using Steam Remote Play.&lt;/p&gt;

&lt;h3&gt;Wired Network Connection&lt;/h3&gt;

&lt;p&gt;The best thing you can do to improve your experience with Steam Remote Play is a strong LAN connection between the gaming PC and the clients you want to play on. A bad network connection increases input lag and graphical artifacts (pixelated look). It took a bit of work, but I was able to get a direct-wired ethernet connection from my router between my Apple TV and my gaming PC. The connection is such that I can&amp;rsquo;t tell whether I&amp;rsquo;m streaming or playing locally.&lt;/p&gt;

&lt;h3&gt;Wake-on-LAN&lt;/h3&gt;

&lt;p&gt;I didn&amp;rsquo;t want to keep my gaming PC on all the time from a power consumption perspective. I only use it when I want to play games, however, it resides in another room different from where I&amp;rsquo;m playing.&lt;/p&gt;

&lt;p&gt;I take advantage of &lt;a href="https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/wake-on-lan-feature"&gt;&lt;em&gt;Wake-on-LAN&lt;/em&gt;&lt;/a&gt; in Windows. This allows the Steam Link app to send a &lt;em&gt;wake-up&lt;/em&gt; packet when it tries to connect to the gaming PC, which powers on the PC for me on-demand. The finishing touch here is that I set a 10 minute &lt;a href="https://support.microsoft.com/en-us/windows/how-to-adjust-power-and-sleep-settings-in-windows-26f623b5-4fcc-4194-863d-b824e5ea7679"&gt;sleep timer in Windows&lt;/a&gt;, which makes it so when you exit a game and stop streaming the PC will go to sleep.&lt;/p&gt;

&lt;h3&gt;Non-Steam Games&lt;/h3&gt;

&lt;p&gt;I also found out you can add &lt;a href="https://help.steampowered.com/en/faqs/view/4B8B-9697-2338-40EC"&gt;Non-Steam games&lt;/a&gt;, which still work via Steam Remote Play. This opens up a lot of opportunities as Steam is essentially opening/closing an executable. You could have games from another store (e.g., &lt;a href="https://www.[epicgames.com/store"&gt;Epic Games&lt;/a&gt;), stand-alone games, or even ROMs if you are into that (via &lt;a href="https://steamgriddb.github.io/steam-rom-manager/"&gt;Steam ROM Manager&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;Dedicated Controller&lt;/h3&gt;

&lt;p&gt;The whole point of this setup is to increase comfort when playing games by not being tied to a desk (assuming the game can be played with a controller). Having a dedicated controller just lowers the friction of &lt;em&gt;getting into a game&lt;/em&gt;. With my Apple TV setup, I just turn the Xbox Controller and Apple TV on, start up Steam Link and I&amp;rsquo;m playing within a minute or less.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Global Hotkeys using the Hyper Key</title>
    <link rel="alternate" href="https://kevinjalbert.com/global-hotkeys-using-the-hyper-key/"/>
    <id>https://kevinjalbert.com/global-hotkeys-using-the-hyper-key/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2021-11-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Set up a hyper key and global hotkeys to quickly perform actions regardless of where you are. This will save you keystrokes and/or time spent moving the mouse cursor.</description>
    <content type="html">&lt;p&gt;My keyboard sees a lot of use, and where possible I try not to reach for the mouse/trackpad. I find I can work more efficiently by keeping my hands on the keyboard, which is a great thing as a developer.&lt;/p&gt;

&lt;p&gt;My primary usage of the hyper key is to open/hide applications with global hotkeys. The hyper key is great because no application expects you to hold all modifier keys at the same time, which sets it up perfectly for a global hotkey.&lt;/p&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;This does require a bit of setup to make it work, but the payoff is pretty nice as you&amp;rsquo;ll be saving keystrokes and/or mouse/trackpad movements.&lt;/p&gt;

&lt;p&gt;This is tailored to a MacOS system&amp;hellip;although I wouldn&amp;rsquo;t be surprised if you could find alternatives for a Linux or Windows environment.&lt;/p&gt;

&lt;h2&gt;The Hyper Key&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A Hyper Key is a magical key that automatically presses all the standard modifiers (ctrl+shift+cmd+opt).&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href="https://docs.folivora.ai/docs/1004_hyper_key.html"&gt;BetterTouchTool&amp;rsquo;s documentation on the hyper key&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I first heard about the &lt;em&gt;hyper key&lt;/em&gt; from an &lt;a href="https://stevelosh.com/blog/2012/10/a-modern-space-cadet/#s14-hyper"&gt;article Steve Losh wrote&lt;/a&gt; which touched on the subject. This inspired me to look at how I could use this new modifier key.&lt;/p&gt;

&lt;p&gt;I personally use Karabiner-Elements to enable a hyper key, but any of the following should do the trick.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://karabiner-elements.pqrs.org/"&gt;Karabiner-Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.folivora.ai/"&gt;BetterTouchTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperkey.app/"&gt;Hyperkey App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kalis.me/setup-hyper-key-hammerspoon-macos/"&gt;Hammerspoon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Global Hotkeys in Alfred&lt;/h2&gt;

&lt;p&gt;I use &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; extensively. I made a new workflow that has multiple hotkey triggers that use the hyper key in combination with a single character. This allows the hotkey triggers to perform an action.&lt;/p&gt;

&lt;p&gt;The one thing that you &lt;em&gt;need&lt;/em&gt; to do is ensure that the trigger&amp;rsquo;s behaviour is set to &lt;em&gt;&amp;ldquo;Pass through modifier keys (Fastest)&amp;rdquo;&lt;/em&gt; (as illustrated in the following image), otherwise, there will be a slight delay in the action being performed.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Alfred trigger config" width="1676" height="842" src="/images/2021-11-28-global-hotkeys-using-the-hyper-key/alfred-trigger-config.png" /&gt;&lt;/p&gt;

&lt;p&gt;I have several combinations which open/hide various applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hyper + space&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://iterm2.com/"&gt;iTerm2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + o&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + c&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + s&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://sparkmailapp.com/"&gt;Spark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + b&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://www.google.com/chrome/"&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Global Hotkeys in other Applications&lt;/h2&gt;

&lt;p&gt;Hyper key shortcuts work well to access other applications in a global context. I even use them to open the quick add modal for &lt;a href="https://goodtaskapp.com/"&gt;GoodTask&lt;/a&gt; via &lt;code&gt;hyper + &amp;#39;&lt;/code&gt;. Another example of where I use it is with &lt;a href="http://www.hammerspoon.org/"&gt;Hammerspoon&lt;/a&gt; via &lt;code&gt;hyper + \&lt;/code&gt; to open &lt;em&gt;&lt;a href="https://github.com/nathancahill/Anycomplete"&gt;anycomplete&lt;/a&gt;&lt;/em&gt; to help with spelling complicated words.&lt;/p&gt;

&lt;p&gt;When you have the hyper key, anything can be globally reachable via a simple key combination!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Apple Watch's Walkie Talkie...? Nah, Just Call Me</title>
    <link rel="alternate" href="https://kevinjalbert.com/apple-watchs-walkie-talkie-nah-just-call-me/"/>
    <id>https://kevinjalbert.com/apple-watchs-walkie-talkie-nah-just-call-me/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2021-10-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I tried Apple Watch's Walkie Talkie feature and found it pretty much useless compared to just calling someone. Read to find out the reasons behind my opinion, and why calling on the Apple Watch is just better overall.</description>
    <content type="html">&lt;p&gt;The first thing to note &amp;ndash; this post is purely my opinion on Apple Watch&amp;rsquo;s &lt;a href="https://support.apple.com/en-us/HT208917"&gt;Walkie Talkie&lt;/a&gt; feature based on my usage. While I feel that this can generalize to the broader public, I&amp;rsquo;m sure there are plenty of people who appreciate this feature.&lt;/p&gt;

&lt;p&gt;This feature debuted in watchOS 5 (released Sept 2018). I&amp;rsquo;m a little late to the party in terms of talking about it, but it&amp;rsquo;s only recently that I&amp;rsquo;ve formed strong opinions on it.&lt;/p&gt;

&lt;h2&gt;Communication at Home&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve used the Walkie Talkie feature occasionally with my wife over the years, mostly as a novel thing to try. With the whole &lt;em&gt;working from home&lt;/em&gt; and just being at home with our young children (ages 2 and 5) our ability to communicate within the house is more important than before.&lt;/p&gt;

&lt;p&gt;We would often message each other via Facebook Messenger (our preferred chat application) if it wasn&amp;rsquo;t urgent. This works well as the Apple Watch would allow us to dictate a message back, or the preferred &lt;em&gt;thumbs up&lt;/em&gt; acknowledgment. In times when we&amp;rsquo;d want a little more throughput in our communication, we&amp;rsquo;d turn to &lt;a href="https://support.apple.com/en-ca/HT204380"&gt;FaceTime on our iPhone&lt;/a&gt;. At times though, we wouldn&amp;rsquo;t have our iPhones within reach and we would answer the call on our Apple Watch. This realization eventually led us to just leverage the Apple Watch for our high-throughput communication at home.&lt;/p&gt;

&lt;h2&gt;Gripes with Walkie Talkie&lt;/h2&gt;

&lt;p&gt;We experimented with using the Walkie Talkie application at first and came up with the following issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initial communication is interruptive, and hard to block due to the nature of Walkie Talkie.

&lt;ul&gt;
&lt;li&gt;There is an &lt;em&gt;on/off&lt;/em&gt; status, and you will receive a notification if someone tries to reach you. It could be easily missed.&lt;/li&gt;
&lt;li&gt;The initial beep doesn&amp;rsquo;t give you a lot of time to prepare for the incoming voice. When your watch is open you can &lt;em&gt;palm your watch&lt;/em&gt; to end the conversation though. If the watch is not active, you have to tap to activate then palm to mute, so it is possible for some of the initial voice messages to come through (hopefully not at an undesirable time).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;push to talk&lt;/em&gt; aspect of the application is nice for a quick one-shot message, but not so much if a longer conversation is needed.

&lt;ul&gt;
&lt;li&gt;You need to keep a hand free to push/release the application&amp;rsquo;s button.&lt;/li&gt;
&lt;li&gt;Can be tiresome if you need to communicate multiple sentences.&lt;/li&gt;
&lt;li&gt;Can be tricky to coordinate the &lt;em&gt;one talking at a time&lt;/em&gt; restriction.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s dependant on both parties having their watch on their person (unlocked and not in &lt;em&gt;Do not Disturb&lt;/em&gt;).

&lt;ul&gt;
&lt;li&gt;Sometimes we remove our watches throughout the day (i.e., charging).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a bit cumbersome to quickly communicate with an individual.

&lt;ul&gt;
&lt;li&gt;Open the Walkie Talkie application, find a person, press the person, check if the person is online, push to talk. You could use &lt;a href="https://www.apple.com/ca/siri/"&gt;Siri&lt;/a&gt; to &amp;ldquo;Walkie Talkie &amp;lt;person_name&amp;gt;&amp;rdquo; to immediately jump to the part where it checks if the person is online.&lt;/li&gt;
&lt;li&gt;Separate from an individual&amp;rsquo;s contact card (on the iPhone&amp;rsquo;s contacts)&lt;/li&gt;
&lt;li&gt;The Walkie Talkie &lt;a href="https://developer.apple.com/design/human-interface-guidelines/watchos/overview/complications/"&gt;complication&lt;/a&gt; on the watch only opens the application &amp;ndash; you still need to find the person (however it might be cached on the right person if you recently used it).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Occasionally seeing the Walkie Talkie&amp;rsquo;s status icon on the top of the watch&amp;rsquo;s screen was just annoying.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Just Call Me&lt;/h2&gt;

&lt;p&gt;We found that the shortcomings of the Walkie Talkie application quickly led us to just &lt;em&gt;calling&lt;/em&gt; each other using the Apple Watch itself. We&amp;rsquo;d have the option of using FaceTime Audio or even just calling via our talk mobile plan. Overall, calling each other addressed many of the shortcomings of Walkie Talkie:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You would receive an incoming call notification on the watch, allowing you to take the call or not.

&lt;ul&gt;
&lt;li&gt;No awkward moments if a call comes through when you are not in the right situation to take the call.&lt;/li&gt;
&lt;li&gt;The idea of calling sets the expectation that a conversation is needed. If you cannot take the call, then you are able to shoot back a quick message of acknowledgment.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You can carry a conversation and still have both hands free (no need to push to talk).&lt;/li&gt;
&lt;li&gt;If you aren&amp;rsquo;t wearing the watch, the call will still come through on your iPhone.

&lt;ul&gt;
&lt;li&gt;This is a huge benefit for us, as it is frustrating to try and use Walkie Talkie and find out the person is unavailable.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The watch&amp;rsquo;s complication for a Contact is superior to the Walkie Talkie&amp;rsquo;s complication, as one tap takes you directly to the contact.

&lt;ul&gt;
&lt;li&gt;You can tap the phone then FaceTime Audio to initiate it.&lt;/li&gt;
&lt;li&gt;You have the option to use alternative means of communication as well from the complication (traditional voice plan or SMS).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You can use Siri to place a call for you completely hands-free using &amp;ldquo;Call &amp;lt;person_name&amp;gt;&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Fluid conversations happen are possible because there is no push to talk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, we both have each other as a complication on our Apple Watches for quick high-throughput communication.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Document Storage: Migrating Evernote to Google Drive</title>
    <link rel="alternate" href="https://kevinjalbert.com/document-storage-migrating-evernote-to-google-drive/"/>
    <id>https://kevinjalbert.com/document-storage-migrating-evernote-to-google-drive/</id>
    <updated>2022-06-28T16:32:05-04:00</updated>
    <published>2021-09-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about my document storage journey to understand the reasons why I'm moving from Evernote to Google Drive and ditching my Doxie Go for Genius Scan (a mobile scanner application). Included are steps for exporting out of Evernote and into Google Drive.</description>
    <content type="html">&lt;p&gt;I only really embraced a document storage solution when I acquired a &lt;a href="https://www.getdoxie.com/"&gt;Doxie Go&lt;/a&gt; back in 2013. I was able to scan documents with &lt;a href="https://en.wikipedia.org/wiki/Optical_character_recognition"&gt;OCR&lt;/a&gt; so that I could search their contents. I even paired it with an &lt;a href="https://en.wikipedia.org/wiki/Eye-Fi"&gt;Eye-Fi SD card&lt;/a&gt; so that I could upload scans wirelessly to my Macbook Air. It was great. I embraced &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt; as my document storage solution, as it hit everything and was highly recommended.&lt;/p&gt;

&lt;p&gt;The times have changed. My Doxie Go has lost its battery capacity and dies after a few scans (you cannot scan when it&amp;rsquo;s charging). The Eye-Fi company doesn&amp;rsquo;t exist anymore, and my SD card is useless (trust me I tried to make it work). Evernote&amp;rsquo;s software isn&amp;rsquo;t looking so great anymore, and there is wavering hope around the company. On the flip side, mobile phones and their applications have greatly advanced in the last 8 years.&lt;/p&gt;

&lt;p&gt;I decided to switch from using my Doxie with Evernote to using &lt;a href="https://thegrizzlylabs.com/genius-scan/"&gt;Genius Scan&lt;/a&gt; with &lt;a href="https://drive.google.com/"&gt;Google Drive&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Why Genius Scan&lt;/h2&gt;

&lt;p&gt;In my experimentation, Genius Scan performed exceedingly well against others with respect to the quality and speed of scans. In contrast to many other document scanning applications out there, you don&amp;rsquo;t need a subscription to unlock the extra functionality &amp;ndash; it&amp;rsquo;s a one-time purchase of approximately $10. You gain the ability to export automatically to a document storage solution of your choice &amp;ndash; I selected Google Drive.&lt;/p&gt;

&lt;h2&gt;Why Google Drive&lt;/h2&gt;

&lt;p&gt;There are a number of reasons for picking Google Drive over Evernote:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Storage isn&amp;rsquo;t a concern. You get 15 GB for free (which is a lot for documents), or you&amp;rsquo;re likly already paying for additional storage anyways.&lt;/li&gt;
&lt;li&gt;Evernote now requires me to pay ($90/year) for a subscription to search text inside documents&lt;/li&gt;
&lt;li&gt;Evernote has all these other features that it has accumulated over the years that I don&amp;rsquo;t utilize (feature bloat).&lt;/li&gt;
&lt;li&gt;I share the account with my wife and so she&amp;rsquo;ll have easy access as well.&lt;/li&gt;
&lt;li&gt;Google Drive search is fairly powerful (it will search the content even without OCR)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only issue I have is that the Google Drive search results interface is lacking compared to Evernote. Evernote provides a view containing a snippet of the search results in the context of the file. Evernote also has a preview of the selected note when navigating notes. In Google Drive, you just see the file names of the matches, forcing you to individually preview each file until you find what you need. That being said, the amount of times I&amp;rsquo;ve needed that level of precision in searching is infrequent.&lt;/p&gt;

&lt;h2&gt;Migrating to Google Drive&lt;/h2&gt;

&lt;p&gt;I recently made the migration over to Google Drive &amp;ndash; overall, it wasn&amp;rsquo;t too bad. The following outlines the steps I took:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select each notebook from Evernote containing documents. I had multiple notebooks which acted as categories (e.g., Receipts, Bills, Taxes, etc&amp;hellip;).&lt;/li&gt;
&lt;li&gt;Right-click and open the export modal. Export using the &amp;lsquo;Multiple web pages (.html)&amp;rsquo; file format.&lt;/li&gt;
&lt;li&gt;Put these in a &lt;code&gt;Notebooks&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Put the following Ruby script (&lt;code&gt;transform.rb&lt;/code&gt;) in the same directory level as &lt;code&gt;Notebooks&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'fileutils'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'securerandom'&lt;/span&gt;

&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Notebooks/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Processing &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

  &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# Only interested in directories as they hold PDFs, .html files exist here&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;file?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"=&amp;gt; Processing &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# Getting each file, renaming it and moving it to notebook directory&lt;/span&gt;
    &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;SecureRandom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;alphanumeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;extname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;mv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# Cleaning up empty note directories&lt;/span&gt;
    &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rmdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run &lt;code&gt;ruby transform.rb&lt;/code&gt;, which leaves only resources (e.g., PDFs, images) in their respected notebook directory. The resources are also named after the note in Evernote (using a random suffix in case multiple resources existed in a note).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Import the whole &lt;code&gt;Notebooks&lt;/code&gt; directory into Google Drive where you want it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;rsquo;ll see how this new document storage solution works long-term, but I have high hopes. An added bonus with the mobile application approach is that it allows me (or my wife!) to scan stuff without needing to be in my home office.&lt;/p&gt;
</content>
  </entry>
</feed>
