<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jalbert</title>
  <link href="https://kevinjalbert.com"/>
  <updated>2020-03-30T20:00:00-04:00</updated>
  <author>
    <name>Kevin Jalbert</name>
  </author>
  <id>https://kevinjalbert.com</id>
  <entry>
    <title>Improve Your Home Office</title>
    <link rel="alternate" href="https://kevinjalbert.com/improve-your-home-office/"/>
    <id>https://kevinjalbert.com/improve-your-home-office/</id>
    <updated>2020-03-31T23:20:41-04:00</updated>
    <published>2020-03-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Due to COVID-19 (Coronavirus), self-isolation brought on a wave of new people working from home, with varying states of home offices. This is the first of a multi-part series on improving your home office. In this part, we focus on evaluating your current setup.</description>
    <content type="html">&lt;p&gt;At the time of publishing (March 31, 2020), &lt;a href="https://www.who.int/emergencies/diseases/novel-coronavirus-2019"&gt;COVID-19 (Coronavirus)&lt;/a&gt; is a global pandemic and affecting much of the world. Most places are practicing social distancing and self-isolation. Some companies have switched to remote work by having their employees work from home during this time. As such, an influx of home office interest (&lt;a href="https://trends.google.com/trends/explore?date=2020-01-01%202020-03-31&amp;amp;q=home%20office,working%20from%20home"&gt;Google Trends shows a huge spike&lt;/a&gt;) has surfaced.&lt;/p&gt;

&lt;p&gt;I am writing a multi-part article on the topic of improving your home office. This first one is to serve as a public service announcement given how many people are working from home due to COVID-19, and that they should evaluate and explore options to improve their setup to make work more effective and ergonomic. Subsequent parts will focus on different aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The physical aspect (e.g., room/space, desk, and chair)&lt;/li&gt;
&lt;li&gt;The input/output aspects (e.g., monitor, keyboard, mouse/trackpad, audio, and video)&lt;/li&gt;
&lt;li&gt;The miscellaneous aspects (e.g., lighting, organization, climate, and personalizations)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Evaluate your Home Office&lt;/h1&gt;

&lt;p&gt;If you are fortunate enough to be able to work from home in these times (or you normally work remotely), you should take a few minutes to evaluate your current setup. Within a typical office, there will be fewer opportunities to modify your workspace to best conform to your specific needs. Changing your work setup can result in productivity gains and added comfort.&lt;/p&gt;

&lt;p&gt;Look at your home office. Are you working at the kitchen table, or maybe from the couch? You might laugh, but in those first few days when people were making the switch to working from home, this might have been their reality. Ideally, you&amp;rsquo;d have a dedicated space for your work with a multitude of ergonomic features.&lt;/p&gt;

&lt;p&gt;Creating an amazing home office can be a time and money sink as there are numerous items and options to furnish your setup. Fortunately, you can &lt;em&gt;chip&lt;/em&gt; away at the setup and slowly make additions over time as needed. Figure out what is causing discomfort and slight changes or upgrades may remedy the problem.&lt;/p&gt;

&lt;h2&gt;Return on Investment&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll want to think of how much the home office and the individual pieces will be used. There&amp;rsquo;s no point in going overboard with something that you would rarely use, in which case a cheaper or alternative solution might be best. With the COVID-19 situation, this warps the &lt;em&gt;how much am I going to use this afterwards&lt;/em&gt; question, just something to keep in mind.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Invest in where you spend your time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is advice to avoid wasting resources in improving specific areas of your home office. You can always incrementally improve your office (i.e., improve the weakest, missing, or most used aspects of your space). There will be some items and changes that you can do to your home office that will have huge returns on investment in areas such as comfort, ergonomics, and productivity. Before making changes, be mindful of the return on your investment (i.e., you take a lot of meetings and so you&amp;rsquo;ll gain a lot from a great audio/video setup).&lt;/p&gt;

&lt;h1&gt;Wirecutter is Awesome&lt;/h1&gt;

&lt;p&gt;There are many articles circulating around the Internet on the subject of remote work and home offices. I did find that &lt;a href="https://thewirecutter.com/"&gt;Wirecutter&lt;/a&gt; has several great articles on the subject and they all link to their amazing &lt;em&gt;&amp;ldquo;The Best xxxx&amp;rdquo;&lt;/em&gt; reviews. For some quick wins, I highly recommend skimming the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thewirecutter.com/lists/how-to-create-a-full-time-work-space-at-home/"&gt;How to Create a Full-Time Work Space at Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thewirecutter.com/blog/work-from-home-starter-kit/"&gt;The WFH Starter Kit: What Companies Should Provide You With When You Work From Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thewirecutter.com/blog/productivity-home-office-upgrades/"&gt;4 Small Home Office Upgrades That Can Give a Big Boost to Your Productivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thewirecutter.com/lists/the-essential-ergonomic-gear-for-your-home-office/"&gt;The Essential Ergonomic Gear for Your Home Office&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Moving from RSS Feeds to Email</title>
    <link rel="alternate" href="https://kevinjalbert.com/moving-from-rss-to-email/"/>
    <id>https://kevinjalbert.com/moving-from-rss-to-email/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2020-02-28T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about how I moved away from RSS Feeds to emails to consume content. I take advantage of newsletters and IFTTT to ensure that everything moved over to email.</description>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve briefly mentioned using RSS to email in &lt;a href="/consuming-content-and-managing-the-flood/"&gt;Consuming Content and Managing the Flood&lt;/a&gt;. In this post, I want to further describe this approach and how I&amp;rsquo;ve effectively moved away from RSS Feeds towards emails.&lt;/p&gt;

&lt;h1&gt;RSS Readers&lt;/h1&gt;

&lt;p&gt;Back in the day, Google Reader was one of the most popular RSS reading services. I ended up using it and thoroughly enjoyed it. I was heavily invested in using RSS feeds and piped all the content I wanted through it.&lt;/p&gt;

&lt;p&gt;Eventually, Google Reader was shut down and I made the move to &lt;a href="https://feedly.com"&gt;Feedly&lt;/a&gt;. I was not 100% happy with that service and decided to try a new approach with respect to consuming content from sites with RSS feeds.&lt;/p&gt;

&lt;h1&gt;RSS Reader to Email (via Newsletters)&lt;/h1&gt;

&lt;p&gt;My goal was to see how I could achieve the same content consumption but without using RSS readers. My idea was to see if I could consolidate the services that I used daily.&lt;/p&gt;

&lt;p&gt;I noticed that a lot of the content I was following via RSS had email newsletters. Newsletters worked out well for me, as they contained generally the same information. This also fit in with the whole &lt;em&gt;Inbox Zero&lt;/em&gt; movement, as I treated my email inbox as a list of &lt;em&gt;actionable items&lt;/em&gt; that I needed to address. I could work through these emails at my own pace, and if needed I could defer an item by pushing it into &lt;a href="https://www.instapaper.com"&gt;Instapaper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately, there were still some RSS feeds that didn&amp;rsquo;t have an email newsletter option. In most cases, these feeds were for different content (e.g., screencasts, comics, music).&lt;/p&gt;

&lt;h1&gt;RSS Reader to Email (via IFTTT)&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve been a big fan of &lt;a href="https://ifttt.com/"&gt;IFTTT&lt;/a&gt; since it came out. Once again, I reached for this tool to help me with migrating the remaining RSS feeds to email.&lt;/p&gt;

&lt;p&gt;The approach is quite simple as we&amp;rsquo;re taking advantage of the &lt;a href="https://ifttt.com/feed"&gt;New Feed Item Trigger from the RSS Feed Service&lt;/a&gt; and the &lt;a href="https://ifttt.com/email"&gt;Send me an email using the Email Service&lt;/a&gt;. When setting up a new applet, you just have to put in the RSS feed URL and that&amp;rsquo;s pretty much it.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Ifttt applets" width="1978" height="1038" src="/images/2020-02-29-moving-from-rss-to-email/ifttt-applets.png" /&gt;&lt;/p&gt;

&lt;p&gt;The applets check and execute within seconds of when a new RSS item arrives. This results in rich-text emails being sent containing the content of the feed item.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Email" width="1484" height="814" src="/images/2020-02-29-moving-from-rss-to-email/email.png" /&gt;&lt;/p&gt;

&lt;h2&gt;Alternatives to IFTTT&lt;/h2&gt;

&lt;p&gt;I did find other alternatives to IFTTT that would accomplish the same end goal of getting RSS feed items into my email inbox.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zapier.com/"&gt;Zapier&lt;/a&gt; - you will have to pay if you want more tasks (&amp;gt; 100) and zaps (&amp;gt; 5).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogtrottr.com/"&gt;Blogtrottr&lt;/a&gt; - has ads incorporated in the emails unless you pay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://feedrabbit.com/"&gt;Feedrabbit&lt;/a&gt; - only allowed 10 subscriptions before you have to pay.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall, I found IFTTT to be a scalable and free solution that fits my needs.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Testing the Use of Rails Caching</title>
    <link rel="alternate" href="https://kevinjalbert.com/testing-the-use-of-rails-caching/"/>
    <id>https://kevinjalbert.com/testing-the-use-of-rails-caching/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2020-01-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">There is a strong test culture for Rubyist using Rails. Caching can be rewarding in performance, yet can introduce cache complexities. Read about how I approach testing low-level caching.</description>
    <content type="html">&lt;p&gt;I was doing some performance work within a Rails application where expensive (computationally) data was being generated on each request. It was quick to implement the low-level caching that wrapped the expensive data generation. In this particular case, I wanted to ensure that the caching logic was valid as there were numerous conditions at play. I normally wouldn&amp;rsquo;t test caching if the cache key was something trivial (or automatic like using &lt;code&gt;ActiveRecord#cache_key&lt;/code&gt;).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are only two hard things in Computer Science: cache invalidation and naming things.&lt;/p&gt;

&lt;p&gt;&amp;ndash; Phil Karlton (&lt;a href="https://martinfowler.com/bliki/TwoHardThings.html"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Peering into the Cache&lt;/h1&gt;

&lt;p&gt;This Rails application had the &lt;code&gt;cache_store&lt;/code&gt; set to &lt;code&gt;:memory_store&lt;/code&gt; in the test environment. We wanted to make sure that our tests were still going through the same code paths as would happen in production.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# config/environments/test.rb:&lt;/span&gt;
&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cache_store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:memory_store&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The inner data structure of &lt;code&gt;ActiveSupport::Cache::MemoryStore&lt;/code&gt; is not publically accessible.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[1] pry(main)&amp;gt; Rails.cache.write('my-cache-key', 'my-value')
=&amp;gt; true
[2] pry(main)&amp;gt; Rails.cache
=&amp;gt; &amp;lt;#ActiveSupport::Cache::MemoryStore entries=1, size=260, options={}&amp;gt;
[3] pry(main)&amp;gt; ls Rails.cache
ActiveSupport::ToJsonWithActiveSupportEncoder#methods: to_json
ActiveSupport::Dependencies::ZeitwerkIntegration::RequireDependency#methods: require_dependency
ActiveSupport::Cache::Store#methods: delete  exist?  fetch  fetch_multi  logger  logger=  mute  options  read  read_multi  silence  silence!  silence?  write  write_multi
ActiveSupport::Cache::MemoryStore#methods: cleanup  clear  decrement  delete_matched  increment  inspect  prune  pruning?  synchronize
instance variables: @cache_size  @data  @key_access  @max_prune_time  @max_size  @monitor  @options  @pruning
class variables: @@logger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;raw&lt;/em&gt; data is held in the instance variable &lt;code&gt;@data&lt;/code&gt;. We can &lt;em&gt;reach in&lt;/em&gt; and grab that to perform some inspections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[4] pry(main)&amp;gt; Rails.cache.instance_variable_get(:@data)
=&amp;gt; {"my-cache-key"=&amp;gt;#&amp;lt;ActiveSupport::Cache::Entry:0x00007f8ade4da858 @created_at=1580064434.3177679, @expires_in=nil, @value="my-value", @version=nil&amp;gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The caveat of this approach is clear, as we&amp;rsquo;re reaching into the private space of the Rails cache.&lt;/p&gt;

&lt;h1&gt;Creating the Helper&lt;/h1&gt;

&lt;p&gt;I wanted to make it easier for myself and others to test Rails caching in this project. Creating a test helper is ideal as all the tests can reach for the built utilities when testing code related to caching.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll create a new test helper, that can be included in our &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# test/support/rails_cache_helper.rb:&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;RailsCacheHelper&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_clean_caching&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clear&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;

  &lt;span class="k"&gt;ensure&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clear&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cache_has_value?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cache_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;any?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;key_for_cached_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cache_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cache_data&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;instance_variable_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:@data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This helper gives us three utilities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;with_clean_caching&lt;/code&gt; method, which purges the cache before and after the &lt;em&gt;block&lt;/em&gt; is executed. It is worth noting that the &lt;code&gt;:memory_store&lt;/code&gt; is only purged at the end of the test suite.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;cache_has_value?(value)&lt;/code&gt; method, which returns a &lt;em&gt;boolean&lt;/em&gt; if the cache has the specified &lt;em&gt;value&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;key_for_cached_value(value)&lt;/code&gt; method, which returns the &lt;em&gt;key&lt;/em&gt; that can be used to look up the specified &lt;em&gt;value&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With these new methods, it was much easier to test the caching code. There was no need to do any fancy stubbing and/or using mock objects.&lt;/p&gt;

&lt;p&gt;Note: there are more features that can be expanded upon in this helper:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Working with the meta-data on cache entries (e.g., &lt;code&gt;expires_in&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Custom assertions (e.g., &lt;code&gt;assert_cached(value)&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Testing Rails Caching&lt;/h1&gt;

&lt;p&gt;Now I was able to test the caching specifically. I wrapped my tests in &lt;code&gt;with_clean_caching&lt;/code&gt; as these tests were specific about using caching. I could have also approached this by making it so the cache is purged before each test (e.g., &lt;code&gt;setup()&lt;/code&gt;, &lt;code&gt;before(:each)&lt;/code&gt;), but I didn&amp;rsquo;t opt for that right now.&lt;/p&gt;

&lt;p&gt;The following is a contrived example, but you could imagine that the &lt;em&gt;cache key&lt;/em&gt; is generated much deeper in the application code. This makes it difficult to &lt;em&gt;get&lt;/em&gt; the cache key to then inspect and make assertions about the cached data.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;RailsCacheHelper&lt;/code&gt; (that we created above), we can make use of &lt;code&gt;#cache_has_value?&lt;/code&gt; and &lt;code&gt;#key_for_cached_value&lt;/code&gt; to make assertions based on the returned value without needing to know the &lt;em&gt;cache key&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# test/caching_test.rb&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CachingTest&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;TestCase&lt;/span&gt;
  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'caching works'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_clean_caching&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="c1"&gt;# bunch of test setup ...&lt;/span&gt;

      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Caching&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expensive_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cache_has_value?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'caching is not used if request header specifies caching=false'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_clean_caching&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="c1"&gt;# bunch of test setup, and adding caching=false in request_data ...&lt;/span&gt;

      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Caching&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expensive_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cache_has_value?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'cache varies correctly based on object'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_clean_caching&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="c1"&gt;# bunch of test setup ...&lt;/span&gt;

      &lt;span class="n"&gt;original_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Caching&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expensive_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;original_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key_for_cached_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="c1"&gt;# setup different_object&lt;/span&gt;

      &lt;span class="n"&gt;changed_object_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Caching&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expensive_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;different_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;changed_object_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key_for_cached_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changed_object_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;rufute_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;original_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;changed_object_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'cache varies correctly based on data structure'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_clean_caching&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="c1"&gt;# pretty much same as the last test but varying the data structure&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'cache varies correctly based on request data'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_clean_caching&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="c1"&gt;# pretty much same as the last test but varying the request_data&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this approach worked for me, however, there are many different ways to test Rails caching. For example, this &lt;a href="https://stackoverflow.com/a/9603083/583592"&gt;StackOverflow answer&lt;/a&gt; suggests making an &lt;code&gt;InspectableMemoryStore&lt;/code&gt; which subclasses &lt;code&gt;ActiveSupport::Cache::MemoryStore&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Consolidating Notion Projects into notion-toolbox</title>
    <link rel="alternate" href="https://kevinjalbert.com/consolidating-notion-projects-into-notion-toolbox/"/>
    <id>https://kevinjalbert.com/consolidating-notion-projects-into-notion-toolbox/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-12-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I made the decision to consolidate all my Notion related projects into a single repository. The goal is to increase cohesion to allow the tools to better interact with each other. Read more about how I did it and why.</description>
    <content type="html">&lt;p&gt;For a good part of 2019, I focused heavily on my &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion[Referral]&lt;/a&gt; setup. I personally feel that this was time well invested, akin to a craftsman refining his tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I created a &lt;a href="https://kevinjalbert.com/my-weekly-notion-setup/"&gt;specific weekly/daily template&lt;/a&gt; to satisfy some of my needs and give structure to Notion.&lt;/li&gt;
&lt;li&gt;I created an integration with &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; called &lt;a href="https://github.com/kevinjalbert/alfred-notion"&gt;&lt;code&gt;alfred-notion&lt;/code&gt;&lt;/a&gt; (&lt;a href="https://kevinjalbert.com/integrating-notion-with-alfred/"&gt;blog post&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;I created a server web application called &lt;a href="https://github.com/kevinjalbert/notion-heroku"&gt;&lt;code&gt;notion-heroku&lt;/code&gt;&lt;/a&gt; that interacts with &lt;a href="https://ifttt.com/"&gt;IFTTT&lt;/a&gt; and Google Assistant (&lt;a href="https://kevinjalbert.com/integrating-notion-with-google-assistant/"&gt;blog post&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;I created a shared repository called &lt;a href="https://github.com/kevinjalbert/notion-scripts"&gt;&lt;code&gt;notion-scripts&lt;/code&gt;&lt;/a&gt; to further help the development of my tooling for Notion (&lt;a href="https://kevinjalbert.com/introducing-notion-scripts/"&gt;blog post&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I recently made the decision to consolidate all my Notion related projects into a single repository. The goal is to increase cohesion to allow the tools to better interact with each other. It also puts everything in one place instead of spreading it out over multiple repositories. This approach does increase the size of the repository and the deployment/usage complexity for certain tools, but overall I feel that this decision will result in an easier way to use and develop with the Notion tools found there.&lt;/p&gt;

&lt;h1&gt;The Great Merge&lt;/h1&gt;

&lt;p&gt;The great merge happened on December 27, 2019. On GitHub, &lt;code&gt;notion-heroku&lt;/code&gt; and &lt;code&gt;notion-scripts&lt;/code&gt; were merged into &lt;code&gt;alfred-notion&lt;/code&gt;. I decided for &lt;code&gt;alfred-notion&lt;/code&gt; to be the main repository as it had the most &lt;em&gt;stars&lt;/em&gt; on GitHub and was the longest-tenured repository I have for Notion tools. I did rename the repository to &lt;a href="https://github.com/kevinjalbert/notion-toolbox"&gt;&lt;code&gt;notion-toolbox&lt;/code&gt;&lt;/a&gt; to better represent the mission and contents of this project. Fortunately, GitHub automatically handles the redirects from &lt;code&gt;alfred-notion&lt;/code&gt; to &lt;code&gt;notion-toolbox&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I was able to retain the commit history of each project by following the approach mentioned in this article on &lt;em&gt;&lt;a href="https://medium.com/altcampus/how-to-merge-two-or-multiple-git-repositories-into-one-9f8a5209913f"&gt;How to merge two or multiple git repositories into one&lt;/a&gt;&lt;/em&gt;. This approach worked flawlessly for me, and was rather straightforward. The only thing I had to do was move each project&amp;rsquo;s contents into subdirectories.&lt;/p&gt;

&lt;p&gt;As for the merged repositories, I archived them following my approach listed in &lt;em&gt;&lt;a href="https://kevinjalbert.com/archive-unused-repositories/"&gt;Archive Unused Repositories&lt;/a&gt;&lt;/em&gt; that I blogged about last year.&lt;/p&gt;

&lt;p&gt;The only issue that I&amp;rsquo;ve hit right now is the &lt;em&gt;server&lt;/em&gt; (formerly &lt;code&gt;notion-heroku&lt;/code&gt;) &lt;a href="https://devcenter.heroku.com/articles/procfile#procfile-naming-and-location"&gt;expects certain files in the root directory to be deployable to Heroku&lt;/a&gt;. I&amp;rsquo;ve temporarily restructured the repository so that it works, but it isn&amp;rsquo;t ideal as the tool itself is bleeding outside of its sub-directory. A better solution will be found in the future.&lt;/p&gt;

&lt;h1&gt;The tools in &lt;code&gt;notion-toolbox&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;This is a collection of &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; tools that work in tandem together. All of these tools take advantage of a &lt;a href="https://kevinjalbert.com/my-weekly-notion-setup/"&gt;specific weekly/daily template&lt;/a&gt; that integrates with various tools and solutions present in this repository.&lt;/p&gt;

&lt;p&gt;As of the publish date of this post, the following tools are available. Each tool has a README file present in its corresponding sub-directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinjalbert/notion-toolbox/tree/master/alfred"&gt;Alfred&lt;/a&gt; workflow

&lt;ul&gt;
&lt;li&gt;Enables a handful of ways to interact with the template using shortcuts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinjalbert/notion-toolbox/tree/master/server"&gt;Server&lt;/a&gt; application

&lt;ul&gt;
&lt;li&gt;Enables an online (and backgrounded) interface to interact with the template&lt;/li&gt;
&lt;li&gt;Useful to connect with webhooks (e.g., &lt;a href="https://ifttt.com/maker_webhooks"&gt;IFTTT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Opens integrations with Google Assistant&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I look forward to making more Notion tools in 2020.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Learn More About Yourself Using Personality Types</title>
    <link rel="alternate" href="https://kevinjalbert.com/learn-more-about-yourself-using-personality-types/"/>
    <id>https://kevinjalbert.com/learn-more-about-yourself-using-personality-types/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-11-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I want to present well-known tests that you can take to learn more about yourself from a personality perspective. For one hour of your time, you'll likely come away with a renewed and deeper understanding of who you are.</description>
    <content type="html">&lt;p&gt;I am a firm believer that a comprehensive understanding of one&amp;rsquo;s true inner-self can only lead to better growth and relationships. We&amp;rsquo;re all uniquely different in our own ways, although there are sets of archetypes that we can closely associate with.&lt;/p&gt;

&lt;h1&gt;Tests&lt;/h1&gt;

&lt;p&gt;From what I&amp;rsquo;ve seen, the &lt;a href="https://www.myersbriggs.org/"&gt;Myers Briggs Type&lt;/a&gt; and &lt;a href="https://www.enneagraminstitute.com/"&gt;Enneagram Type&lt;/a&gt; are the leaders in personality archetypes. The differences between these tests are out of the scope of this post. These are established institutions and you can pay for a complete test, although there are free alternatives, such as &lt;a href="https://www.16personalities.com/"&gt;16Personalities&lt;/a&gt; and &lt;a href="https://www.9types.com/"&gt;9Types&lt;/a&gt; respectively. The results from these tests are often distilled down into a digestible format, however, large bodies of material do exist for each type.&lt;/p&gt;

&lt;p&gt;It is likely that you already have a good idea of your underlying personality and some of the inner mechanisms that propel you forward. I would argue that you will still uncover something about yourself if you have not taken these two tests yet. There may be some deeper insights that will resonate with you. It is worth noting that the results shouldn&amp;rsquo;t be taken 100% as truth, but nonetheless it&amp;rsquo;s still worthwhile to know more about yourself.&lt;/p&gt;

&lt;h1&gt;Benefits&lt;/h1&gt;

&lt;p&gt;With the results in hand, you can uncover and understand some of the inner-workings that make you tick. I personally found the information useful and insightful as it reaffirmed certain beliefs and values that I hold. I was pleased to see sections dedicated to relationships with other types, as well as personal growth.&lt;/p&gt;

&lt;p&gt;An additional benefit is that you&amp;rsquo;ll be able to share your type with others (e.g., partner, boss, co-worker, friend), giving them a deeper understanding of &lt;em&gt;who you are&lt;/em&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using iOS Shortcuts to Open Notion Pages</title>
    <link rel="alternate" href="https://kevinjalbert.com/using-ios-shortcuts-to-open-notion-pages/"/>
    <id>https://kevinjalbert.com/using-ios-shortcuts-to-open-notion-pages/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-10-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Learn how to quickly open Notion pages on your iOS device. See how I work around dynamic page links (e.g., current day/week) to open the correct pages from my Notion Weekly Template.</description>
    <content type="html">&lt;p&gt;I recently switched from Android back to iOS for my mobile device. I decided to take a look at &lt;a href="https://support.apple.com/en-ca/guide/shortcuts/welcome/ios"&gt;iOS Shortcuts&lt;/a&gt; as I never really got to play with them before. Given my recent obsession with &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; I decided to see how I can put iOS Shortcuts to use here.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to walk you through two examples of using iOS Shortcuts to open Notion Pages. The first one uses a normal Notion page, and the second one uses the &lt;em&gt;current&lt;/em&gt; day/week pages from my &lt;a href="/my-weekly-notion-setup/"&gt;highly-tailored weekly template&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Open Notion Page from iOS Home Screen&lt;/h1&gt;

&lt;p&gt;The first thing that you can do is create a shortcut on your home screen that opens to a specific page in Notion. For example, you could have a page holding your todos, shopping list, latest project, etc. In my opinion, this is really useful if you frequently use specific pages in Notion on your mobile device.&lt;/p&gt;

&lt;h2&gt;Notion Page Link&lt;/h2&gt;

&lt;p&gt;We need to get the &lt;em&gt;Page Link&lt;/em&gt; from Notion. On iOS, you get this link by clicking the &lt;code&gt;...&lt;/code&gt; on a page in Notion and then &lt;em&gt;Copy Link&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: You can find the current Page Link in the Web interface for Notion as well, although the user interface will be slightly different.&lt;/em&gt;&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2019-10-30-using-ios-shortcuts-to-open-notion-pages/notion-page-step1.jpg" style="width: 49%"/&gt;
  &lt;img src="/images/2019-10-30-using-ios-shortcuts-to-open-notion-pages/notion-page-step2.jpg" style="width: 49%"/&gt;
&lt;/div&gt;

&lt;p&gt;In your clipboard, you will have a link that looks like the following: &lt;code&gt;https://www.notion.so/Example-page-721c581be9734ad09480d0cc16f774fd&lt;/code&gt;. If visit this link, your browser will open the Notion web application to that page. Unfortunately, this will open the page in the web application in your browser.&lt;/p&gt;

&lt;p&gt;The goal is to open the native Notion application. We can accomplish that using a custom URL Schema that Notion provides for iOS/macOS. &lt;strong&gt;Replacing &lt;code&gt;https&lt;/code&gt; with &lt;code&gt;notion&lt;/code&gt; in our link (e.g., &lt;code&gt;notion://www.notion.so/Example-page-721c581be9734ad09480d0cc16f774fd&lt;/code&gt;) will now open the Notion page in the native Notion application (if opened with Safari).&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Shortcut to Open Notion Page&lt;/h2&gt;

&lt;p&gt;Now we can start by creating our iOS Shortcut to open the Notion page. As shown in the images below, our shortcut is just one step to open the &lt;code&gt;notion://&lt;/code&gt; page link with Safari. Finally, we can add this to the home screen, and now we have a single press shortcut that opens directly to the page we want.&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2019-10-30-using-ios-shortcuts-to-open-notion-pages/notion-page-step3.jpg" style="width: 49%"/&gt;
  &lt;img src="/images/2019-10-30-using-ios-shortcuts-to-open-notion-pages/notion-page-step4.jpg" style="width: 49%"/&gt;
&lt;/div&gt;

&lt;h1&gt;Open my Current Day/Week Page&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.icloud.com/shortcuts/575fc46b4e1b486dab30c4ef42cdf180"&gt;Click to get iOS Shortcut to Open Current Day Notion Page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As previously noted, I have a more elaborate Notion setup (more details about &lt;a href="/my-weekly-notion-setup/"&gt;highly-tailored weekly template&lt;/a&gt;) where I have unique Notion pages for each day and week. My goal is to have a &lt;em&gt;&amp;lsquo;Notion Day&amp;rsquo;&lt;/em&gt; and &lt;em&gt;&amp;#39;Notion Week&amp;rsquo;&lt;/em&gt; shortcut on my home screen for quick access. Unfortunately, the page link for the current day and week change daily/weekly, and thus the previous solution doesn&amp;rsquo;t work for me.&lt;/p&gt;

&lt;h2&gt;Fetching the Dynamic URLs&lt;/h2&gt;

&lt;p&gt;I currently have a web application running that exposes an API (&lt;a href="https://github.com/kevinjalbert/notion-heroku"&gt;&lt;code&gt;notion-heroku&lt;/code&gt;&lt;/a&gt;), allowing me to interact with my Notion account through HTTP requests. I&amp;rsquo;ve recently &lt;a href="https://github.com/kevinjalbert/notion-heroku/pull/3"&gt;added a feature&lt;/a&gt; that exposes the &lt;code&gt;notion://&lt;/code&gt; page URLs for the current day/week when I make a request.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ curl https://notion-heroku.herokuapp.com/current_links.json &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"api_token: &lt;/span&gt;&lt;span class="nv"&gt;$API_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; | jq
&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"current_day"&lt;/span&gt;: &lt;span class="s2"&gt;"notion://www.notion.so/YHuWdvUQ8nc5gBgkqHexDToWRzGvuP6e"&lt;/span&gt;,
  &lt;span class="s2"&gt;"current_week"&lt;/span&gt;: &lt;span class="s2"&gt;"notion://www.notion.so/kG7jQamppo4RRGc7voAC7elyGDeg7a70"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The shortcut isn&amp;rsquo;t too hard to create afterwards and ends up as a three-step shortcut:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make the HTTP network call.&lt;/li&gt;
&lt;li&gt;Access the value from the JSON response.&lt;/li&gt;
&lt;li&gt;Open value (Notion page URL) in Safari.&lt;/li&gt;
&lt;/ol&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2019-10-30-using-ios-shortcuts-to-open-notion-pages/notion-current-day.jpg" style="width: 49%"/&gt;
&lt;/div&gt;

&lt;p&gt;This shortcut works well, but it has two drawbacks. It &lt;em&gt;always&lt;/em&gt; has to make the network call to get the page links, it can be slow based on latency and it requires network access.&lt;/p&gt;

&lt;h2&gt;Performance and Robustness&lt;/h2&gt;

&lt;p&gt;To address the drawbacks of the previous shortcut demonstration in the last section, we can cache the response from the &lt;code&gt;notion-heroku&lt;/code&gt; server. Caching the results for a day then makes it so only the first usage of the shortcut requires a network call and all subsequent usage uses a cached file.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.icloud.com/shortcuts/575fc46b4e1b486dab30c4ef42cdf180"&gt;new and improved iOS Shortcut&lt;/a&gt; now contains over 25 steps, although it handles caching, cache invalidation, and a notification if the server didn&amp;rsquo;t respond. Using the shortcut when there is a cached value feels faster to me and it even works while in airplane mode.&lt;/p&gt;

&lt;p&gt;The following video gives a walkthrough of the shortcuts:&lt;/p&gt;

&lt;iframe class="youtube-embed" src="https://www.youtube.com/embed/oGYWF5EpwbQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;The Possibilities with iOS Shortcuts&lt;/h1&gt;

&lt;p&gt;In my opinion, iOS Shortcuts open up a lot of interesting possibilities. The fact that you are able to make and use API calls is very powerful on its own. I can see myself connecting more stuff to &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt;. With respect to Notion, I&amp;rsquo;ll likely continue to expand on my &lt;code&gt;notion-heroku&lt;/code&gt; server and see what I can do with it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Docker Compose DNS Consistency (DCDC)</title>
    <link rel="alternate" href="https://kevinjalbert.com/docker-compose-dns-consistency-dcdc/"/>
    <id>https://kevinjalbert.com/docker-compose-dns-consistency-dcdc/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-09-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Introducing DCDC: a way to work with multiple Docker Compose projects locally with consistent service URLs, internal and external to the Docker network.</description>
    <content type="html">&lt;p&gt;While I&amp;rsquo;m no longer at &lt;a href="https://scoremediaandgaming.com/"&gt;theScore&lt;/a&gt;, I do recall the larger &lt;em&gt;dockerization&lt;/em&gt; efforts that happened near the end of my employment there. It wasn&amp;rsquo;t uncommon to have several services running for the product you were working on. At theScore we used &lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt; for local development as it eased the setup and took care of running dependencies.&lt;/p&gt;

&lt;p&gt;This eventually leads to the overall problem of dealing with Docker Compose networking and DNS resolution. I ended up creating a tool called &lt;em&gt;Docker Compose DNS Consistency&lt;/em&gt;, &lt;a href="https://github.com/scoremedia/dcdc"&gt;&lt;code&gt;dcdc&lt;/code&gt;&lt;/a&gt;, as a way to solve this. The following sections are from the &lt;code&gt;dcdc&lt;/code&gt; README file, and I would highly recommend going there right after for more in-depth details on how &lt;code&gt;dcdc&lt;/code&gt; actually works.&lt;/p&gt;

&lt;h1&gt;Problem&lt;/h1&gt;

&lt;p&gt;We have a project (i.e., &lt;code&gt;proj1&lt;/code&gt;) that contains an API (&lt;code&gt;api&lt;/code&gt;) service. With Docker, we are able to expose the API server&amp;rsquo;s default port (&lt;code&gt;3000&lt;/code&gt;). Thus, &lt;code&gt;localhost:3000&lt;/code&gt; routes to the API of &lt;code&gt;proj1&lt;/code&gt;. We have another project (i.e., &lt;code&gt;proj2&lt;/code&gt;) that also contains an API (&lt;code&gt;api&lt;/code&gt;) service, and is also exposed on the default port of &lt;code&gt;3000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Both projects exist as separate repositories and therefore have different &lt;code&gt;docker-compose.yml&lt;/code&gt; files. In isolation, both projects run without any problem and expose their respective API service on &lt;code&gt;localhost:3000&lt;/code&gt;. The issue is when you want to run both projects at the same time &amp;ndash; which might be needed for the development of a new feature or testing a complete flow.&lt;/p&gt;

&lt;p&gt;The naive solution is to change one of the exposed ports for a project to &lt;code&gt;3001&lt;/code&gt; so that there is no clashing of ports. So for example, &lt;code&gt;proj2&lt;/code&gt;&amp;rsquo;s API is now exposed on port &lt;code&gt;3001&lt;/code&gt; and is reachable at &lt;code&gt;localhost:3001&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are a few problems here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;This process of ensuring we have no conflicting ports on the host can be painful. Even if the projects aren&amp;rsquo;t related, you can have conflicting ports being exposed. As the number of projects grows, this becomes more challenging. It&amp;rsquo;s likely that a document is needed to keep track of used ports (or port ranges).&lt;/li&gt;
&lt;li&gt;If the two projects have to communicate to each other internally (i.e., not via the host&amp;rsquo;s web browser), the projects cannot see each other as they are on a different network (by default).&lt;/li&gt;
&lt;li&gt;Externally to the Docker network, we refer to the APIs as &lt;code&gt;localhost:&amp;lt;port&amp;gt;&lt;/code&gt;, but internally we need to use the &lt;em&gt;service name&lt;/em&gt; like &lt;code&gt;proj1&lt;/code&gt;&amp;rsquo;s &lt;code&gt;api&lt;/code&gt;. There is a disconnect in how we &lt;em&gt;refer&lt;/em&gt; to the services internally and externally to the Docker network.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Solution&lt;/h1&gt;

&lt;p&gt;DCDC&amp;rsquo;s purpose is to provide an easy way to work with multiple Docker Compose projects locally by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Exposing fully qualified domain names for each service (ending in &lt;code&gt;.test&lt;/code&gt;) using DNS and reverse proxy.&lt;/li&gt;
&lt;li&gt;Providing consistent DNS resolution for services internal and external to the Docker network (i.e., &lt;code&gt;db.proj.test&lt;/code&gt; is accessible on the host machine and also from a service&amp;rsquo;s container).&lt;/li&gt;
&lt;li&gt;Requiring as little configuration to projects to make them work with DCDC.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;NOTE: at the time of publication, DCDC only works with macOS. It&amp;rsquo;s likely possible to work for other operating systems, although it will require some rejigging.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The following is the test output of &lt;code&gt;dcdc&lt;/code&gt; that demonstrates accessibility to services external and internal to the Docker network. Not only are HTTP services accessible, but also non-HTTP services (i.e., a database).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Dcdc tests" width="1784" height="968" src="/images/2019-09-29-docker-compose-dns-consistency-dcdc/dcdc-tests.png" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing notion-scripts</title>
    <link rel="alternate" href="https://kevinjalbert.com/introducing-notion-scripts/"/>
    <id>https://kevinjalbert.com/introducing-notion-scripts/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-08-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Building off of my previous Notion work using notion-py, I continue to adjust Notion to fit my needs. In this article, I want to explain how I've been taking my integrations with Notion to the next level.</description>
    <content type="html">&lt;p&gt;My &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; journey started with the creation of my &lt;a href="/my-weekly-notion-setup/"&gt;highly-tailored weekly template&lt;/a&gt;. I then made my first integration, &lt;a href="https://github.com/kevinjalbert/alfred-notion"&gt;&lt;code&gt;alfred-notion&lt;/code&gt;&lt;/a&gt;, an &lt;a href="https://www.alfredapp.com"&gt;Alfred&lt;/a&gt; workflow that allows me to issue quick commands to interact with Notion. Recently, I created &lt;a href="https://github.com/kevinjalbert/notion-heroku"&gt;&lt;code&gt;notion-heroku&lt;/code&gt;&lt;/a&gt;, a web application that integrates Notion and &lt;a href="https://assistant.google.com/"&gt;Google Assistant&lt;/a&gt; via &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Laying the Foundation&lt;/h1&gt;

&lt;p&gt;At this point, both of my Notion integrations share similarities with how I utilize &lt;a href="https://github.com/jamalex/notion-py"&gt;&lt;code&gt;notion-py&lt;/code&gt;&lt;/a&gt;. I decided to lay down some foundational work that will accelerate and open additional capabilities in my existing and future projects with respect to Notion. The initial culmination of this work is &lt;a href="https://github.com/kevinjalbert/notion-scripts"&gt;&lt;code&gt;notion-scripts&lt;/code&gt;&lt;/a&gt;, a Python package. I&amp;rsquo;ve extracted the commonalities between my two projects in an effort to &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY (don&amp;rsquo;t repeat yourself)&lt;/a&gt; the code up for better reuse.&lt;/p&gt;

&lt;p&gt;My gameplan for &lt;code&gt;notion-scripts&lt;/code&gt; is that it holds all the higher-level interactions that I do with Notion (i.e., add a task, find current day, update task status, etc&amp;hellip;), as well as the underlying Notion API interactions via &lt;code&gt;notion-py&lt;/code&gt;. Ultimately, my other applications shouldn&amp;rsquo;t have to interact with &lt;code&gt;notion-py&lt;/code&gt; anymore. If there is an opportunity for some functionality to live in more than one project, it will end up in &lt;code&gt;notion-scripts&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;Background/Reactive Tasks for Notion&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve always wanted a way to run certain &lt;em&gt;processes&lt;/em&gt; reactively in Notion. I took what I have for &lt;code&gt;notion-heroku&lt;/code&gt; and added the capabilities to run &lt;a href="https://github.com/kevinjalbert/notion-heroku/blob/26d3712a2869b699cbcbf7691807dc9b2a5bc4dd/src/api.py#L11-L26"&gt;recurring scheduled tasks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using recurring scheduled tasks, I added the ability to record task status changes reactively. My goal is so that when using Notion on my mobile device, task transitions will record automatically as this functionality is running on a server.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Recorded transitions" width="1480" height="1080" src="/images/2019-08-29-introducing-notion-scripts/recorded-transitions.png" /&gt;&lt;/p&gt;

&lt;p&gt;As mentioned earlier, I plan to continue to build on top of the work I&amp;rsquo;ve done so far. With respect to the transitions of a task, I&amp;rsquo;m hoping to add the ability to track the total time a task spent in each status. I&amp;rsquo;d also like to add email capabilities, so that I can get a daily/weekly email summary of tasks that are stale/stuck/new/completed.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I know that &lt;code&gt;notion-py&lt;/code&gt; has callbacks for &lt;a href="https://github.com/jamalex/notion-py#example-subscribing-to-updates"&gt;subscribing to updates&lt;/a&gt;. For my use case, I have not yet explored this and instead went with polling to watch for changes. For &lt;code&gt;notion-heroku&lt;/code&gt;, it would require a more substantial change, and the current design is stateless (i.e., run task, look at Notion, react) as Notion holds all the state itself. I might revisit this subject if need be.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;What&amp;rsquo;s Next?&lt;/h1&gt;

&lt;p&gt;Having &lt;code&gt;notion-scripts&lt;/code&gt; will help in some regard with the following ideas, as they will touch all my integrations and then some.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Having an interval notification on the desktop that tells me what my current task is.&lt;/li&gt;
&lt;li&gt;Sending myself daily/weekly email reports of tasks/wins/lights from my template.&lt;/li&gt;
&lt;li&gt;An approach to help with time blocking of tasks with my Google Calendar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don&amp;rsquo;t forget to subscribe to the blog as I&amp;rsquo;ll likely have a post with new changes. If you are interested in following the developments, you can also follow my projects on GitHub.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Integrating Notion with Google Assistant</title>
    <link rel="alternate" href="https://kevinjalbert.com/integrating-notion-with-google-assistant/"/>
    <id>https://kevinjalbert.com/integrating-notion-with-google-assistant/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-07-14T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I want to share how I integrate my Weekly Notion Setup with Google Assistant. It provides a ubiquitous way to interact with Notion. In particular, this solution opens up new ways to add notes and tasks in Notion via voice commands.</description>
    <content type="html">&lt;p&gt;Building off two of my previous posts (&lt;a href="/my-weekly-notion-setup/"&gt;My Weekly Notion Setup&lt;/a&gt; and &lt;a href="/integrating-notion-with-alfred/"&gt;Integrating Notion with Alfred&lt;/a&gt;), I decided to further integrate &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; with &lt;a href="https://assistant.google.com/"&gt;Google Assistant&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Google Assistant is never too far away from me. I almost always have my phone within arms reach, and I also have multiple Google devices throughout my house. In the past, I&amp;rsquo;ve used other productivity applications in conjunction with Google Assistant (i.e., &lt;a href="https://help.evernote.com/hc/en-us/articles/360000930107-How-to-use-Google-Assistant-with-Evernote"&gt;Evernote&lt;/a&gt;, and &lt;a href="https://get.todoist.help/hc/en-us/articles/115000056165-How-can-I-use-Todoist-with-Google-Assistant-"&gt;Todoist&lt;/a&gt;) to capture notes and tasks. With my recent commitment to Notion, I&amp;rsquo;ve been missing this integration.&lt;/p&gt;

&lt;h1&gt;The Goal&lt;/h1&gt;

&lt;p&gt;The 2 main requirements I&amp;rsquo;m looking for here are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ability to dictate notes that are appended to my &lt;em&gt;Notes&lt;/em&gt; section under the current day.&lt;/li&gt;
&lt;li&gt;Ability to dictate a new task that gets added to my &lt;em&gt;Tasks&lt;/em&gt; database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would also like the end solution to be one that is extensible and can grow with my template and use cases.&lt;/p&gt;

&lt;h1&gt;The Journey&lt;/h1&gt;

&lt;p&gt;At the time of writing, no official API has been released for Notion. For a previous project, I was able to create &lt;a href="https://github.com/kevinjalbert/alfred-notion"&gt;&lt;code&gt;alfred-notion&lt;/code&gt;&lt;/a&gt; using an unofficial API client called &lt;a href="https://github.com/jamalex/notion-py"&gt;&lt;code&gt;notion-py&lt;/code&gt;&lt;/a&gt; to much success. To be honest, I suspect the official API to likely be restrictive to some degree, although only time will tell. In either case, using this API client gives me great flexibility in what can be done in Notion.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been successful in hooking Google Assistant into other application via the &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt; platform and naturally gravitate to this free solution.&lt;/p&gt;

&lt;p&gt;The next piece of this solution is being able to execute custom code based on an action from the Google Assistant trigger on IFTTT. Fortunately, IFTTT has the capabilities to perform HTTP requests in response to a trigger. Thus, my end-goal solution requires a server to run my custom code, which uses &lt;code&gt;notion-py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I decided to reach for &lt;a href="https://heroku.com/"&gt;Heroku&lt;/a&gt; as they have a pretty offering that allows you to run an application for free (within limits).&lt;/p&gt;

&lt;h1&gt;The Reward&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=z8SgCwrci5I"&gt;Click to watch a video summarizing integration and demonstrating how it works&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve put together &lt;a href="https://github.com/kevinjalbert/notion-heroku"&gt;&lt;code&gt;notion-heroku&lt;/code&gt;&lt;/a&gt;, a GitHub repository, a Heroku application that performs Notion actions based on voice requests via &lt;a href="https://ifttt.com/maker_webhooks"&gt;IFTTT Webhooks&lt;/a&gt; and &lt;a href="https://ifttt.com/google_assistant"&gt;Google Assistant&lt;/a&gt;. I&amp;rsquo;ve put together easy-to-follow instructions that can help others open up integrations like this for themselves.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/kevinjalbert/notion-heroku"&gt;Click to check out &lt;code&gt;notion-heroku&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;a href="https://github.com/kevinjalbert/notion-heroku/tree/v1.0.0"&gt;v1.0.0&lt;/a&gt; is current at the time of publication (July 15, 2019).&lt;/p&gt;

&lt;h1&gt;The Future&lt;/h1&gt;

&lt;p&gt;Running the application on Heroku (or any server to be honest) opens up new opportunities. For example, it would be entirely possible to have something run periodically or on a schedule. I can also continue to iterate and add to and improve the integration with Google Assistant (i.e., new endpoints that run Notion commands on my behalf).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Integrating Notion with Alfred</title>
    <link rel="alternate" href="https://kevinjalbert.com/integrating-notion-with-alfred/"/>
    <id>https://kevinjalbert.com/integrating-notion-with-alfred/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-06-16T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I want to share how I integrate my Weekly Notion Setup with Alfred. It provides a seamless interaction so that I minimize context switching.</description>
    <content type="html">&lt;p&gt;Last month I wrote about &lt;a href="/my-weekly-notion-setup"&gt;My Weekly Notion Setup&lt;/a&gt; and how I use it to help organize my life.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.notion.so/Week-Template-0a7ac4d03082417c929176b5ea1df07e"&gt;Click to get my Weekly Notion Template&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like to use tools that are an extension of my hand and mind. If the tool does not bend to my will then I need to tailor it to do so. I&amp;rsquo;ve done this many times before, to which I normally share the end result (i.e., &lt;a href="/synchronizing-my-dotfiles"&gt;how I synchronize my dotfiles&lt;/a&gt;, &lt;a href="/todoist-with-keyboard-navigation-via-nativefier/"&gt;adding keyboard navigation to Todoist on MacOS&lt;/a&gt;, amongst other examples).&lt;/p&gt;

&lt;p&gt;This month, I want to share how I integrate my &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; setup with &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt;. At the time of publication, Notion has not yet released an official API. I ended up taking advantage of &lt;a href="https://github.com/jamalex/notion-py"&gt;&lt;code&gt;notion-py&lt;/code&gt;&lt;/a&gt; &amp;ndash; an unofficial Python API client for Notion. With various Python scripts, I was able to connect everything together in an Alfred Workflow (as seen in the post&amp;rsquo;s title image).&lt;/p&gt;

&lt;h1&gt;Added Extensions&lt;/h1&gt;

&lt;p&gt;I mainly wanted to bypass the need for direct interaction with Notion, so that I could avoid excessive context switching. I was able to put together the following &lt;em&gt;actions&lt;/em&gt; in Alfred:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:week&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword will open Notion to the current week.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:day&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword will open Notion to the current day.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:note&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword allows me to append a text block at the end of my current day&amp;rsquo;s notes section.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:tag&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword allows me to create a new tag in my tags database.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:win&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword allows me to create a new win in my wins database.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:task&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword allows me to create a new task in my tasks database.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:search&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This keyword allows me to search my current day&amp;rsquo;s tasks, and be able to open it in Notion or change its status.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The end result allows me to do stuff like the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=i_Ce3ogyuTA"&gt;Watch a video with more detail&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="Alfred notion demo" width="817" height="540" src="/images/2019-06-17-integrating-notion-with-alfred/alfred-notion-demo.gif" /&gt;&lt;/p&gt;

&lt;h1&gt;How do I get this?&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve published the Alfred Workflow and Python scripts in a &lt;a href="https://github.com/kevinjalbert/alfred-notion"&gt;repository on GitHub at &lt;code&gt;alfred-notion&lt;/code&gt;&lt;/a&gt;. For the most part, you can follow the instructions laid out in the &lt;code&gt;README.md&lt;/code&gt; as it&amp;rsquo;ll be up to date with new changes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/kevinjalbert/alfred-notion"&gt;Click to check out &lt;code&gt;alfred-notion&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like to remind everyone that this is &lt;em&gt;my tailored solution&lt;/em&gt; on how I&amp;rsquo;ve integrated Notion to fit &lt;em&gt;my needs&lt;/em&gt;. If you want to use my solution as inspiration or as a foundation, everything is open sourced. If you want to use it verbatim, then don&amp;rsquo;t forget to get the weekly template.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;a href="https://github.com/kevinjalbert/alfred-notion/tree/v1.0.0"&gt;v1.0.0&lt;/a&gt; is current at the time of publication (June 16, 2019).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My Weekly Notion Setup</title>
    <link rel="alternate" href="https://kevinjalbert.com/my-weekly-notion-setup/"/>
    <id>https://kevinjalbert.com/my-weekly-notion-setup/</id>
    <updated>2020-02-29T22:31:29-05:00</updated>
    <published>2019-05-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">My note taking, tasks, and self-organization tools and systems have evolved over the years, and I'm feeling pretty confident that Notion is a keeper. It has this incredible range of flexibility that allows you to mould it to fit your needs. I want to showcase how I use Notion to organize and manage my week.</description>
    <content type="html">&lt;p&gt;I started using &lt;a href="https://www.notion.so/?r=6b8d609eb50943419db4d87c67fa558e"&gt;Notion [Referral]&lt;/a&gt; early 2018 in a limited capacity as I was evaluating it as a potential tool to adopt. In a year&amp;rsquo;s time, Notion, as a service, improved a lot and had garnered quite a following. It was at this point that I decided to fully commit to it.&lt;/p&gt;

&lt;p&gt;My note taking, tasks, and self-organization tools and systems have evolved over the years, and I&amp;rsquo;m feeling pretty confident that Notion is a keeper. It has this incredible range of flexibility that allows you to mould it to fit your needs. I want to showcase how I use Notion to organize and manage my week.&lt;/p&gt;

&lt;h1&gt;Features I Needed for my Week&lt;/h1&gt;

&lt;p&gt;I spend many weeks iterating and refining my weekly Notion template and I suspect that I&amp;rsquo;ll continue to do so. I made a point to incorporate the following ideas into my template:&lt;/p&gt;

&lt;h2&gt;Note Taking&lt;/h2&gt;

&lt;p&gt;I wanted my weekly template to have the idea of a daily scratch pad for note-taking. It would be my &lt;em&gt;go-to&lt;/em&gt; notepad when I wanted to jot something down.&lt;/p&gt;

&lt;p&gt;The plan then would be to clean up the raw notes at the end of the day and, if needed, extract them into a proper location.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Have a place for daily note-taking.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Journaling&lt;/h2&gt;

&lt;p&gt;I like the idea of journaling daily as it gives a place to do a quick reflection and analysis of the events that transpired that day. Due to the normal work/life divide, I feel that it might not be a bad idea to split the journaling to individually accommodate both work and personal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Have a place for daily journaling (work/personal).&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Tasks&lt;/h2&gt;

&lt;p&gt;As I wanted to fully commit to Notion, I need to make Notion accommodate a task management system. My tasks in Notion will be backed by a database as this structure will better accommodate searching and organization. I want to be able to capture the following for tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Creation date&lt;/li&gt;
&lt;li&gt;Due date&lt;/li&gt;
&lt;li&gt;Completed date&lt;/li&gt;
&lt;li&gt;Tags&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having a tailored view of the tasks of importance for the day is ideal. This will help me focus on what is next and what is currently on my plate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Have a master database of tasks, with a view to easily see relevant tasks at the current time.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Wins&lt;/h2&gt;

&lt;p&gt;Something that kind of falls in line with journaling is recounting the wins of the day. I want to explicitly call out wins in different areas of my life (i.e., work, family, etc&amp;hellip;). To accomplish this, I&amp;rsquo;d also like the wins to be backed by a database for organization and searching capabilities. I want to be able to capture the following for wins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Creation date&lt;/li&gt;
&lt;li&gt;Tags&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my weekly template, I want to see all the wins for the current week only. This is to simplify the view and keeps it in scope to the week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Have a master database of wins, with a view to easily see wins for the week.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Habits&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve used habit trackers in the past with little success. I recently discovered a technique called &lt;em&gt;&lt;a href="https://www.ultraworking.com/lights"&gt;Lights by Ultraworking&lt;/a&gt;&lt;/em&gt; and it struck a chord with me. For more information, I recommend giving their &lt;a href="https://ultraworking.gitbooks.io/lights/content/"&gt;guide&lt;/a&gt; a quick read.&lt;/p&gt;

&lt;p&gt;In my weekly template, I want a &lt;em&gt;Lights&lt;/em&gt; spreadsheet/database that I can use to track habits and objectives for each day of that week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Replicate &lt;em&gt;Lights Spreadsheet by Ultraworking&lt;/em&gt; in my weekly template&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Weekly Reflection&lt;/h2&gt;

&lt;p&gt;Finally, I wanted to be able to have a place to hold an end-of-the-week reflection. I want to be able to do a retrospective on the progress of my habits for the week. I&amp;rsquo;ve also been passively using &lt;a href="https://www.rescuetime.com/ref/31263"&gt;RescueTime [Referral]&lt;/a&gt; for many years now, and I want to actively pay attention to my productivity and time allocation going forward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goal: Have a place for a weekly reflection on habits and time allocation&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;How it all looks&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ZwZMU5QeWgQ"&gt;Watch a Video that walks through the template&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Given the above features, how does all of this look in practice? The following pages took some time to arrive at due to much tweaking and testing. As mentioned earlier, I fully expect these pages to continue to evolve in structure in the future.&lt;/p&gt;

&lt;h2&gt;Week Page&lt;/h2&gt;

&lt;p&gt;The following is an annotated screenshot of what my week page looks like. Each numbered section is further described under its corresponding subheading. I decided to use the &lt;code&gt;Week ##&lt;/code&gt; format for my page names as it&amp;rsquo;s easy to use the sequential numbering and avoids issues with using specific days and handling crossover weeks (ie., May → June).&lt;/p&gt;

&lt;p&gt;&lt;img alt="Week" width="1650" height="2520" src="/images/2019-05-28-my-weekly-notion-setup/week.png" /&gt;&lt;/p&gt;

&lt;h3&gt;Quick Links (1)&lt;/h3&gt;

&lt;p&gt;This section has links to pages for the previous week and the next week, acting as a quick way to navigate sequentially between weeks. In addition, I have &lt;em&gt;common&lt;/em&gt; pages that I like to keep accessible here as well.&lt;/p&gt;

&lt;h3&gt;Days (2)&lt;/h3&gt;

&lt;p&gt;This section has links to pages for each day within this week. The contents of the &lt;em&gt;day&lt;/em&gt; page is explained further below.&lt;/p&gt;

&lt;h3&gt;Lights (3)&lt;/h3&gt;

&lt;p&gt;This database is essentially my port of &lt;a href="https://www.ultraworking.com/lights"&gt;Lights by Ultraworking&lt;/a&gt;. If you have not read the &lt;a href="https://ultraworking.gitbooks.io/lights/content/"&gt;guide&lt;/a&gt; I recommend it as I&amp;rsquo;m not going to dive into the details of how it works. To make it work with Notion, I had to make some modifications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database is embedded in the page (i.e., this is only for the current week). This is done so that each week can have &lt;em&gt;different&lt;/em&gt; objectives.&lt;/li&gt;
&lt;li&gt;The database&amp;rsquo;s name is formatted as &lt;code&gt;YEAR &amp;gt; WEEK ## &amp;gt; Lights&lt;/code&gt; so that it is easier to find via search.&lt;/li&gt;
&lt;li&gt;I couldn&amp;rsquo;t really build any percentage or success statistics easily, so I just left them out. The colour coding of Yes/No/Half works out pretty well.&lt;/li&gt;
&lt;li&gt;I use an explicit empty row to help separate the different areas.&lt;/li&gt;
&lt;li&gt;I rename the default &lt;em&gt;name&lt;/em&gt; column to &lt;code&gt;.&lt;/code&gt; and push it all the way to the right. This is done so that the objectives don&amp;rsquo;t show up in Notion&amp;rsquo;s search as all row&amp;rsquo;s names are indexed.&lt;/li&gt;
&lt;li&gt;Each day is not dated as this simplifies the reuse of this table for subsequent weeks. I also don&amp;rsquo;t feel I gain much from adding that information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Throughout the day I end up looking at the Lights and updating them as I accomplish them. The presence of it also constantly reminds me of the objectives I want to meet.&lt;/p&gt;

&lt;h3&gt;Wins (4)&lt;/h3&gt;

&lt;p&gt;This is a &lt;em&gt;linked database&lt;/em&gt; of a global database that holds all the &lt;em&gt;wins&lt;/em&gt;. The benefit of this is that this linked database view can be filtered to the specific week. This allows me to look back at any week and see the victories.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Wins filter" width="1492" height="324" src="/images/2019-05-28-my-weekly-notion-setup/wins-filter.png" /&gt;&lt;/p&gt;

&lt;p&gt;The Tags column for Wins (and later for Tasks) is a Notion &lt;em&gt;Relation&lt;/em&gt;. This allows the column to reference other values from another database. The main benefit here is that I wanted to have a global set of tags that could be used in all my tables. I accomplish this using a strategy outlined in the &lt;a href="https://www.reddit.com/r/NotionSo/comments/ayvkcs/notioneers_level_up_your_tagging/"&gt;Notion sub-reddit&lt;/a&gt;, where I have a dedicated &lt;em&gt;Tags&lt;/em&gt; table:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Tags" width="1844" height="440" src="/images/2019-05-28-my-weekly-notion-setup/tags.png" /&gt;&lt;/p&gt;

&lt;h3&gt;Weekly Review (5)&lt;/h3&gt;

&lt;p&gt;This section is where I can reflect at the end of the week. I currently look at the Lights and see what happened — are there any trends or areas to change? I also have a section to put a screenshot of my week recorded by RescueTime.&lt;/p&gt;

&lt;h2&gt;Day Page&lt;/h2&gt;

&lt;p&gt;The following is an annotated screenshot of what my day page looks like. Each numbered section is further described under its corresponding subheading. I decided to use the &lt;code&gt;Month ## (Weekday)&lt;/code&gt; for my page names as I find it easier to use and easier to search.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Day" width="1650" height="2520" src="/images/2019-05-28-my-weekly-notion-setup/day.png" /&gt;&lt;/p&gt;

&lt;h3&gt;Previous/Next Day (1)&lt;/h3&gt;

&lt;p&gt;These two links are present to quickly allow me to pan through the days. When they are all linked properly, it&amp;rsquo;s a pretty seamless way to navigate.&lt;/p&gt;

&lt;h3&gt;Tasks (2)&lt;/h3&gt;

&lt;p&gt;Similar to the Wins linked database, I&amp;rsquo;m using the same approach here. There is a master Tasks database that holds all of my tasks. I end up using filters on the linked database to only show relevant tasks.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Tasks filter" width="1328" height="630" src="/images/2019-05-28-my-weekly-notion-setup/tasks-filter.png" /&gt;&lt;/p&gt;

&lt;p&gt;The tasks have the desired attributes that I mentioned earlier. The Tags column is a &lt;em&gt;Relation&lt;/em&gt;, which is the same approach that was described for the Wins. The Status column helps me track tasks and assists with filtering. Each task also has full capabilities to add notes within the record. To me, this is where Notion excels for task management.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Task record" width="1328" height="888" src="/images/2019-05-28-my-weekly-notion-setup/task-record.png" /&gt;&lt;/p&gt;

&lt;h3&gt;Notes (3)&lt;/h3&gt;

&lt;p&gt;This is just a flexible section to place random notes during the day. At the end of the day, I can clean up the notes and extract them into a larger page in Notion.&lt;/p&gt;

&lt;p&gt;One great aspect of Notion is that you are able to search across all of the text, regardless of where the notes are located.&lt;/p&gt;

&lt;h3&gt;Day Review (4)&lt;/h3&gt;

&lt;p&gt;This section is where the journaling aspect comes in. Again, this is a flexible place to reflect on the day from a personal and work perspective.&lt;/p&gt;

&lt;h1&gt;Setting up the Next Week&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ZwZMU5QeWgQ"&gt;Watch a video on how I setup the next week&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve covered my week/days setups, although this has only been for one week. Manually setting this up for every week would be a pain — fortunately you can &lt;em&gt;duplicate pages&lt;/em&gt; in Notion.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Year" width="1436" height="1134" src="/images/2019-05-28-my-weekly-notion-setup/year.png" /&gt;&lt;/p&gt;

&lt;p&gt;By keeping a template that has mostly everything set up, I&amp;rsquo;m able to generate the next week in about 2 minutes. The days stay linked (even after renaming them), the linked databases are properly duplicated along with their filters, and a fresh Lights database is present. From my perspective, this is a huge win.&lt;/p&gt;

&lt;h1&gt;Get your Own Version!&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.notion.so/Week-Template-0a7ac4d03082417c929176b5ea1df07e"&gt;Click to get my Weekly Notion Template&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notion has the ability to &lt;a href="https://www.notion.so/Duplicate-public-pages-d8a461baeeb54d91b156ff5559192321#d8a461baeeb54d91b156ff5559192321"&gt;duplicate public pages into your own account&lt;/a&gt;. You can use that functionality along with the above link to get my template. It can be a bit overwhelming, but I&amp;rsquo;ve placed some annotations in the template to help you set it up. If you have any questions, feel free to leave a comment on this post. I&amp;rsquo;m planning to keep this public template static even though my own template will evolve over time — this is all for the purpose of this blog post.&lt;/p&gt;

&lt;p&gt;I am loving what this setup has done for me so far and I&amp;rsquo;m planning to keep moving forward with it, further customizing it to fit my needs.&lt;/p&gt;
</content>
  </entry>
</feed>
