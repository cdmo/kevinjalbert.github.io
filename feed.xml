<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jalbert</title>
  <link href="https://kevinjalbert.com"/>
  <updated>2022-03-26T20:00:00-04:00</updated>
  <author>
    <name>Kevin Jalbert</name>
  </author>
  <id>https://kevinjalbert.com</id>
  <entry>
    <title>Quickly Toggle Fonts in Google Docs</title>
    <link rel="alternate" href="https://kevinjalbert.com/quickly-toggle-fonts-in-google-docs/"/>
    <id>https://kevinjalbert.com/quickly-toggle-fonts-in-google-docs/</id>
    <updated>2022-03-27T21:16:54-04:00</updated>
    <published>2022-03-26T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">If you use two fonts in Google Docs often (i.e., like using mono fonts for code keywords) then read my approach to toggling between two fonts quickly using AppleScript on MacOS.</description>
    <content type="html">&lt;p&gt;I spend a fair amount working in technical documents within &lt;a href="https://www.google.ca/docs/about/"&gt;Google Docs&lt;/a&gt; at work. Due to the content of these documents, there will be parts of them that visually resonate with a monospaced font (i.e., name of a class/module/method). Unfortunately, Google Docs does not natively support &lt;a href="https://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; for &lt;code&gt;code spans&lt;/code&gt; by surrounding text with backtick quotes.&lt;/p&gt;

&lt;h2&gt;Ways to Toggle Fonts in Google Docs&lt;/h2&gt;

&lt;h3&gt;Option 1 – Using the Mouse&lt;/h3&gt;

&lt;p&gt;Mouse to the Font select and pick one
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font mouse" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-mouse.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h3&gt;Option 2 – Keyboard using the Menu Search&lt;/h3&gt;

&lt;p&gt;Use the menu search option via the keyboard Option+/ (or Alt+/) and type the font name, then push enter
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font keyboard menu" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-keyboard-menu.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h3&gt;Option 3 - Global Hotkey Triggering AppleScript&lt;/h3&gt;

&lt;p&gt;Use a global hotkey &lt;a href="/global-hotkeys-using-the-hyper-key/"&gt;Hyper&lt;/a&gt;+C to automate Option 2 (and let you toggle between two fonts)
&lt;details&gt;
  &lt;summary&gt;&lt;strong&gt;→ Click to see GIF ←&lt;/strong&gt;&lt;/summary&gt;
&lt;img alt="Toggle font keyboard applescript" width="1320" height="710" src="/images/2022-03-27-quickly-toggle-fonts-in-google-docs/toggle-font-keyboard-applescript.gif" /&gt;
&lt;/details&gt;&lt;/p&gt;

&lt;h2&gt;The AppleScript Code&lt;/h2&gt;

&lt;p&gt;The following is the dump of the AppleScript I&amp;rsquo;m using. It has some guards in place to ensure that it only works when your focus is in Google Chrome and the current tab is a Google Doc (or Sheet/Slide).&lt;/p&gt;

&lt;p&gt;The fonts will toggle between Ariel and Roboto Mono (although easy enough to modify to your own preference). The Font &lt;em&gt;selector&lt;/em&gt; works for me&amp;hellip; however Google could change it at anytime, breaking this flow.&lt;/p&gt;

&lt;p&gt;This code can then be put into a global hotkey (using something like &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; or &lt;a href="https://www.raycast.com/"&gt;Raycast&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight applescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Check to make sure we are focused on Google Chrome&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"System Events"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeApp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;process&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;whose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;frontmost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeApp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome isn't active application"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# Check to make sure we are in a https://docs.google.com/&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;tab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activeURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;does not contain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://docs.google.com/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"URL is not under https://docs.google.com"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Google Chrome"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;tab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;front&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;javascript&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"document.querySelector('#docs-font-family &amp;gt; div &amp;gt; div &amp;gt; div.goog-toolbar-menu-button-caption.goog-inline-block').innerHTML;"&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;missing value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"No Font Found"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;application&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"System Events"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;down&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fontFamily&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Roboto Mono"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Arial"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Roboto Mono"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="nb"&gt;delay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nv"&gt;keystroke&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;tell&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Releasing github_contributions Ruby Gem</title>
    <link rel="alternate" href="https://kevinjalbert.com/releasing-github-contributions-ruby-gem/"/>
    <id>https://kevinjalbert.com/releasing-github-contributions-ruby-gem/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2022-02-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">A post about releasing my new Ruby gem github_contributions! This is a tool that I've been using to track my GitHub contributions.</description>
    <content type="html">&lt;p&gt;This post is more of an announcement of my new &lt;a href="https://rubygems.org/gems/github_contributions"&gt;Ruby gem &lt;code&gt;github_contributions&lt;/code&gt;&lt;/a&gt;. It is a tool that I&amp;rsquo;ve been using to track my GitHub contributions. I&amp;rsquo;ve put the contents of the &lt;a href="https://github.com/kevinjalbert/github_contributions"&gt;README.md from the repository&lt;/a&gt; here as it does a good job describing the tool.&lt;/p&gt;

&lt;h2&gt;GitHub Contributions&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Ever wanted to know where you (or someone else) are making contributions on GitHub?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Your GitHub profile shows you the &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar"&gt;Contributions Calendar&lt;/a&gt; and &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contribution-activity"&gt;Contribution activity&lt;/a&gt;, which both provide great visualizations and details covering contributions of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;creating/closing issues&lt;/li&gt;
&lt;li&gt;creating/closing/merging/reviewing pull requests&lt;/li&gt;
&lt;li&gt;creating repositories&lt;/li&gt;
&lt;li&gt;authoring commits on the main branch of repositories&lt;/li&gt;
&lt;li&gt;starting/answering discussions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally wanted to track comments on issues and pull requests as I felt they were a good indication of contributions. It sometimes isn&amp;rsquo;t uncommon for a lot of discussions to happen on issues or even a pull request.&lt;/p&gt;

&lt;p&gt;I am a fan of &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt; right now to track my day at work. Recording these contributions in GitHub makes it simple to recall what I did in previous days/weeks. This is even more important if you have a &lt;a href="https://jvns.ca/blog/brag-documents/"&gt;&lt;em&gt;BragDoc&lt;/em&gt;&lt;/a&gt;. As Obsidian uses Markdown, that is the primary format that this tool is built for.&lt;/p&gt;

&lt;h3&gt;Install&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;github_contributions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need a GitHub Personal Access Token in your ENVs as &lt;code&gt;GITHUB_ACCESS_TOKEN&lt;/code&gt; for this gem to work.&lt;/p&gt;

&lt;h3&gt;Usage&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for today&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for today only in the 'shopify' org&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="s2"&gt;"shopify"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' in the last week&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"last week"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for the week before last&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"two weeks ago"&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"one week ago"&lt;/span&gt;

&lt;span class="c"&gt;# Show me contributions for 'kevinjalbert' for only yesterday&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="s2"&gt;"kevinjalbert"&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"yesterday"&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"yesterday"&lt;/span&gt;

&lt;span class="c"&gt;# Help&lt;/span&gt;
github_contributions &lt;span class="nt"&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Contributions are grouped by their pull request or issue in order of creation time. This ends up producing a rather detailed list of where contributions were made in the specified time frame. Links are present to easily allow you to jump directly to the contribution. Everything is displayed in Markdown, ready to be copy/pasted where desired. The following is an example of what the output looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978"&gt;Support function in &lt;code&gt;message&lt;/code&gt; expectation in &lt;code&gt;t.throws&lt;/code&gt; / &lt;code&gt;t.throwsAsync&lt;/code&gt;&lt;/a&gt; by &lt;a href="https://github.com/sindresorhus"&gt;sindresorhus&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978"&gt;Issue Opened at 2022-02-26 08:42:19 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/avajs/ava/issues/2978#issuecomment-1051842838"&gt;IssueComment Created at 2022-02-26 08:43:12 UTC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40"&gt;Use &lt;code&gt;for..of&lt;/code&gt; loop&lt;/a&gt; by &lt;a href="https://github.com/fisker"&gt;fisker&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#discussion_r815662489"&gt;PullRequestReviewComment Created at 2022-02-28 08:18:52 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#pullrequestreview-894766255"&gt;PullRequestReview Created at 2022-02-28 08:18:52 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40"&gt;PullRequest Closed at 2022-02-28 08:20:12 UTC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/string-width/pull/40#issuecomment-1054001902"&gt;IssueComment Created at 2022-02-28 08:20:16 UTC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Gamifying my Son's Physiotherapy</title>
    <link rel="alternate" href="https://kevinjalbert.com/gamifying-my-sons-physiotherapy/"/>
    <id>https://kevinjalbert.com/gamifying-my-sons-physiotherapy/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2022-01-30T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about how I use Habitica to help motivate my son (age 5) to complete his at-home physiotherapy.</description>
    <content type="html">&lt;h2&gt;Context&lt;/h2&gt;

&lt;p&gt;My oldest son is 5 years old at the time of writing this post. He has &lt;a href="https://www.cdc.gov/ncbddd/cp/facts.html"&gt;Cerebral Palsy&lt;/a&gt; (fairly mild, but still affects motor control of his legs). To ensure he strengthens and improves his mobility, we are constantly doing physiotherapy. Between physiotherapy appointments, we supplement with daily at-home stretches and exercises.&lt;/p&gt;

&lt;p&gt;Trying to explain and motivate a young child on the benefits of physiotherapy is challenging. He doesn&amp;rsquo;t quite understand the long-term benefits and implications of it. The other aspect is that there are &lt;em&gt;always&lt;/em&gt; more fun and interesting things to be doing other than stretches and exercises.&lt;/p&gt;

&lt;p&gt;As my son loves to play video games with me and loves the idea of having &lt;em&gt;missions/quests&lt;/em&gt;. We decided to try and &lt;em&gt;gamify&lt;/em&gt; things to help motivate him to complete at-home physiotherapy.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: We&amp;rsquo;ve only been using this approach for about two weeks. We&amp;rsquo;re still figuring out the best tactics and whether this will work long-term for us. Early results are promising.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://habitica.com/"&gt;Habitica&lt;/a&gt;! It&amp;rsquo;s a web/mobile application that gamifies habits and tasks. You are represented by an avatar that can level up, go on quests, gain money, and purchase rewards/equipment/pets.&lt;/p&gt;

&lt;p&gt;Due to my son&amp;rsquo;s age, this is something that only my wife and I have access to on our mobile devices. Habitica operates on grounds of trust and discipline to ensure you don&amp;rsquo;t &lt;em&gt;cheat&lt;/em&gt; the gamification as you have to set your own rewards. We all discussed the habits and tasks together and ensured that the &lt;em&gt;difficulties&lt;/em&gt; are valid (as rewards are based on the level of difficulty).&lt;/p&gt;

&lt;h2&gt;How we use Habitica&lt;/h2&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2022-01-31-gamifying-my-sons-physiotherapy/habitica-habits.png" style="width: 49%; height: 80%"/&gt;
  &lt;img src="/images/2022-01-31-gamifying-my-sons-physiotherapy/habitica-dailies.png" style="width: 49%; height: 80%"/&gt;
&lt;/div&gt;

&lt;h3&gt;Habits&lt;/h3&gt;

&lt;p&gt;Habits are core to Habitica and are the most &lt;em&gt;flexible&lt;/em&gt; tool available. You are able to specify multiple habits and their respective difficulty. A habit can offer positive or negative reinforcement (via the +/- buttons).&lt;/p&gt;

&lt;p&gt;Entries in this section are for things that happen on an irregular basis (i.e., behaviours), or things that are recurrent but not necessarily daily.&lt;/p&gt;

&lt;p&gt;I found that breaking the habits up by a section is a nice hack. By using a habit with no positive/negative reinforcement, this is easily achievable (see above image).&lt;/p&gt;

&lt;h3&gt;Dailies&lt;/h3&gt;

&lt;p&gt;These are tasks that &lt;em&gt;have&lt;/em&gt; to be done each day, which is where our exercises and stretches end up fitting in. The notes help us as well, giving us some numeric goals to hit for each one.&lt;/p&gt;

&lt;p&gt;The novel aspect with dailies is that if they are not completed by the end of the day, then the avatar takes damage and loses some health. The dailies also help out by providing positive rewards in the form of quest progression, money, and experience.&lt;/p&gt;

&lt;p&gt;You can &lt;em&gt;pause&lt;/em&gt; the damage though, which can be good if the dailies cannot be completed due to specific circumstances (i.e., spending the day at grandparents, illness, etc.).&lt;/p&gt;

&lt;h3&gt;Tasks&lt;/h3&gt;

&lt;p&gt;To be honest, we haven&amp;rsquo;t used much of this section, but it is a basic to-do list. One-off tasks would fit in here, but from a chore/behaviour/exercise perspective, those tasks would fit better under habits or dailies.&lt;/p&gt;

&lt;h3&gt;Rewards&lt;/h3&gt;

&lt;p&gt;Every action in Habitica provides some level of reward in the form of experience points, gold, or random item drops. The experience points end up leveling up the avatar (which also provides a full health recovery). Items are either equipment or mechanics surrounding pets.&lt;/p&gt;

&lt;p&gt;You can use gold to buy items like equipment, health potions, and pet-related items. The interesting aspect of gold is you can buy custom rewards that you&amp;rsquo;ve created. For example, for 10 gold my son can buy 15 more minutes on his iPad (or video game console). These custom rewards provide real-world motivation.&lt;/p&gt;

&lt;h3&gt;Party Quests&lt;/h3&gt;

&lt;p&gt;This is a nice piece in Habitica that my son enjoys. You are able to embark on &lt;em&gt;quests&lt;/em&gt; with a group (although we just go solo &amp;ndash; but could be fun with family/friends). These quests can be things like battling a monster or finding items. The progress is based on the completion of the dailies and habits. When you complete a quest you gain extra rewards.&lt;/p&gt;

&lt;h3&gt;Items/Pets/Equipments/Classes/Skills&lt;/h3&gt;

&lt;p&gt;You are able to buy and equip new equipment for your avatar (which changes their appearance) and raise pets. These are all little things, but they add to the element of progression and personalization.&lt;/p&gt;

&lt;p&gt;We haven&amp;rsquo;t really gotten far enough yet to figure out the minor nuances with these features, but they can only add to the experience.&lt;/p&gt;

&lt;h2&gt;Results Thus Far&lt;/h2&gt;

&lt;p&gt;The results have been good so far, although it is likely too early to tell if my son&amp;rsquo;s enthusiasm will wane as time goes on. He likes to do his exercises as he enjoys &lt;em&gt;checking&lt;/em&gt; off the dailies and seeing how much progress he&amp;rsquo;ll make in the current quest. He looks forward to seeing how much experience he needs to achieve the next level, and the little cosmetics on equipment and pets are also a nice touch.&lt;/p&gt;

&lt;p&gt;The habits section is nice, although I feel like it can become unwieldy depending on how many things get slotted in there. I feel that this is a section I&amp;rsquo;ll likely cap at 10~ things total. My son has done &lt;em&gt;good&lt;/em&gt; things and he would say, &lt;em&gt;&amp;ldquo;Can we put that in Habitica?&amp;rdquo;&lt;/em&gt; which makes me chuckle. The negative habits are hit or miss in my opinion as in the moment it isn&amp;rsquo;t the greatest to pull your phone out to do it.&lt;/p&gt;

&lt;p&gt;Overall, Habitica is a nice tool we have at our disposal. Like all things, we&amp;rsquo;ll keep an eye on it and see if it is fulfilling its purpose &amp;ndash; motivation for daily exercises, stretches, and chores.&lt;/p&gt;

&lt;p&gt;As we&amp;rsquo;re working on reading, a lot of the direction and usage is completely guided by us, the parents. I am curious to see how this plays out when he can read more.&lt;/p&gt;

&lt;p&gt;One last thing for anyone who wants to let their child have their own account, Habitica has a policy for those under 13. It requires their &lt;a href="https://habitica.fandom.com/wiki/Children_Using_Habitica"&gt;parent or guardian to provide permission&lt;/a&gt; and makes it so the public social aspects get locked down.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Steam Remote Play is Amazing</title>
    <link rel="alternate" href="https://kevinjalbert.com/steam-remote-play-is-amazing/"/>
    <id>https://kevinjalbert.com/steam-remote-play-is-amazing/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-12-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">If you have a gaming PC and are not taking advantage of Steam Remote Play, then you are missing out on some comfy gaming. Read about what Steam Remote Play is if you aren't familiar with it, as well as some additional tips to make the most of it.</description>
    <content type="html">&lt;p&gt;I&amp;rsquo;m keeping this post fairly short due to the holiday season (I also just moved houses at the end of November, so it has been a bit hectic the last month). This post can be seen more as an informative tip for gamers who use &lt;a href="https://store.steampowered.com/"&gt;Steam&lt;/a&gt;, which they might not know about.&lt;/p&gt;

&lt;h2&gt;Steam Remote Play&lt;/h2&gt;

&lt;p&gt;If you do any form of PC gaming, you likely know about Steam. It&amp;rsquo;s a great service that has been around for a while. Fun fact &amp;ndash; I found out that my Steam account is 17 years old! Steam has a wide selection of games, and over the years many new features have been added. I want to talk about one such feature &amp;ndash; &lt;a href="https://store.steampowered.com/remoteplay"&gt;Steam Remote Play&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Steam Remote Play blew my mind when I first tried it out. It lets you stream a game from a  system running Steam to a compatible client (e.g., an iPhone/iPad, Apple TV, etc.). The inputs and outputs work seamlessly and you are able to fully experience the game without being confined to where your gaming PC is located.&lt;/p&gt;

&lt;p&gt;I personally use the &lt;a href="https://apps.apple.com/us/app/steam-link/id1246969117"&gt;Steam Link&lt;/a&gt; app on my iPhone and Apple TV. Apple&amp;rsquo;s ecosystem can use Bluetooth controllers (e.g., Xbox Controller) as an input, so this allows me to play games from a comfy couch like a console gamer. For those times that I need a keyboard or mouse, Steam Remote Play can also stream to another Steam Desktop client on my MacBook.&lt;/p&gt;

&lt;h2&gt;Tips&lt;/h2&gt;

&lt;p&gt;The following are a couple of tips that I&amp;rsquo;ve found useful during my time using Steam Remote Play.&lt;/p&gt;

&lt;h3&gt;Wired Network Connection&lt;/h3&gt;

&lt;p&gt;The best thing you can do to improve your experience with Steam Remote Play is a strong LAN connection between the gaming PC and the clients you want to play on. A bad network connection increases input lag and graphical artifacts (pixelated look). It took a bit of work, but I was able to get a direct-wired ethernet connection from my router between my Apple TV and my gaming PC. The connection is such that I can&amp;rsquo;t tell whether I&amp;rsquo;m streaming or playing locally.&lt;/p&gt;

&lt;h3&gt;Wake-on-LAN&lt;/h3&gt;

&lt;p&gt;I didn&amp;rsquo;t want to keep my gaming PC on all the time from a power consumption perspective. I only use it when I want to play games, however, it resides in another room different from where I&amp;rsquo;m playing.&lt;/p&gt;

&lt;p&gt;I take advantage of &lt;a href="https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/wake-on-lan-feature"&gt;&lt;em&gt;Wake-on-LAN&lt;/em&gt;&lt;/a&gt; in Windows. This allows the Steam Link app to send a &lt;em&gt;wake-up&lt;/em&gt; packet when it tries to connect to the gaming PC, which powers on the PC for me on-demand. The finishing touch here is that I set a 10 minute &lt;a href="https://support.microsoft.com/en-us/windows/how-to-adjust-power-and-sleep-settings-in-windows-26f623b5-4fcc-4194-863d-b824e5ea7679"&gt;sleep timer in Windows&lt;/a&gt;, which makes it so when you exit a game and stop streaming the PC will go to sleep.&lt;/p&gt;

&lt;h3&gt;Non-Steam Games&lt;/h3&gt;

&lt;p&gt;I also found out you can add &lt;a href="https://help.steampowered.com/en/faqs/view/4B8B-9697-2338-40EC"&gt;Non-Steam games&lt;/a&gt;, which still work via Steam Remote Play. This opens up a lot of opportunities as Steam is essentially opening/closing an executable. You could have games from another store (e.g., &lt;a href="https://www.[epicgames.com/store"&gt;Epic Games&lt;/a&gt;), stand-alone games, or even ROMs if you are into that (via &lt;a href="https://steamgriddb.github.io/steam-rom-manager/"&gt;Steam ROM Manager&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;Dedicated Controller&lt;/h3&gt;

&lt;p&gt;The whole point of this setup is to increase comfort when playing games by not being tied to a desk (assuming the game can be played with a controller). Having a dedicated controller just lowers the friction of &lt;em&gt;getting into a game&lt;/em&gt;. With my Apple TV setup, I just turn the Xbox Controller and Apple TV on, start up Steam Link and I&amp;rsquo;m playing within a minute or less.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Global Hotkeys using the Hyper Key</title>
    <link rel="alternate" href="https://kevinjalbert.com/global-hotkeys-using-the-hyper-key/"/>
    <id>https://kevinjalbert.com/global-hotkeys-using-the-hyper-key/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-11-27T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Set up a hyper key and global hotkeys to quickly perform actions regardless of where you are. This will save you keystrokes and/or time spent moving the mouse cursor.</description>
    <content type="html">&lt;p&gt;My keyboard sees a lot of use, and where possible I try not to reach for the mouse/trackpad. I find I can work more efficiently by keeping my hands on the keyboard, which is a great thing as a developer.&lt;/p&gt;

&lt;p&gt;My primary usage of the hyper key is to open/hide applications with global hotkeys. The hyper key is great because no application expects you to hold all modifier keys at the same time, which sets it up perfectly for a global hotkey.&lt;/p&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;This does require a bit of setup to make it work, but the payoff is pretty nice as you&amp;rsquo;ll be saving keystrokes and/or mouse/trackpad movements.&lt;/p&gt;

&lt;p&gt;This is tailored to a MacOS system&amp;hellip;although I wouldn&amp;rsquo;t be surprised if you could find alternatives for a Linux or Windows environment.&lt;/p&gt;

&lt;h2&gt;The Hyper Key&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A Hyper Key is a magical key that automatically presses all the standard modifiers (ctrl+shift+cmd+opt).&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href="https://docs.folivora.ai/docs/1004_hyper_key.html"&gt;BetterTouchTool&amp;rsquo;s documentation on the hyper key&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I first heard about the &lt;em&gt;hyper key&lt;/em&gt; from an &lt;a href="https://stevelosh.com/blog/2012/10/a-modern-space-cadet/#s14-hyper"&gt;article Steve Losh wrote&lt;/a&gt; which touched on the subject. This inspired me to look at how I could use this new modifier key.&lt;/p&gt;

&lt;p&gt;I personally use Karabiner-Elements to enable a hyper key, but any of the following should do the trick.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://karabiner-elements.pqrs.org/"&gt;Karabiner-Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.folivora.ai/"&gt;BetterTouchTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperkey.app/"&gt;Hyperkey App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kalis.me/setup-hyper-key-hammerspoon-macos/"&gt;Hammerspoon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Global Hotkeys in Alfred&lt;/h2&gt;

&lt;p&gt;I use &lt;a href="https://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; extensively. I made a new workflow that has multiple hotkey triggers that use the hyper key in combination with a single character. This allows the hotkey triggers to perform an action.&lt;/p&gt;

&lt;p&gt;The one thing that you &lt;em&gt;need&lt;/em&gt; to do is ensure that the trigger&amp;rsquo;s behaviour is set to &lt;em&gt;&amp;ldquo;Pass through modifier keys (Fastest)&amp;rdquo;&lt;/em&gt; (as illustrated in the following image), otherwise, there will be a slight delay in the action being performed.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Alfred trigger config" width="1676" height="842" src="/images/2021-11-28-global-hotkeys-using-the-hyper-key/alfred-trigger-config.png" /&gt;&lt;/p&gt;

&lt;p&gt;I have several combinations which open/hide various applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hyper + space&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://iterm2.com/"&gt;iTerm2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + o&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + c&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + s&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://sparkmailapp.com/"&gt;Spark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hyper + b&lt;/code&gt; &amp;ndash; Opens &lt;a href="https://www.google.com/chrome/"&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Global Hotkeys in other Applications&lt;/h2&gt;

&lt;p&gt;Hyper key shortcuts work well to access other applications in a global context. I even use them to open the quick add modal for &lt;a href="https://goodtaskapp.com/"&gt;GoodTask&lt;/a&gt; via &lt;code&gt;hyper + &amp;#39;&lt;/code&gt;. Another example of where I use it is with &lt;a href="http://www.hammerspoon.org/"&gt;Hammerspoon&lt;/a&gt; via &lt;code&gt;hyper + \&lt;/code&gt; to open &lt;em&gt;&lt;a href="https://github.com/nathancahill/Anycomplete"&gt;anycomplete&lt;/a&gt;&lt;/em&gt; to help with spelling complicated words.&lt;/p&gt;

&lt;p&gt;When you have the hyper key, anything can be globally reachable via a simple key combination!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Apple Watch's Walkie Talkie...? Nah, Just Call Me</title>
    <link rel="alternate" href="https://kevinjalbert.com/apple-watchs-walkie-talkie-nah-just-call-me/"/>
    <id>https://kevinjalbert.com/apple-watchs-walkie-talkie-nah-just-call-me/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-10-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I tried Apple Watch's Walkie Talkie feature and found it pretty much useless compared to just calling someone. Read to find out the reasons behind my opinion, and why calling on the Apple Watch is just better overall.</description>
    <content type="html">&lt;p&gt;The first thing to note &amp;ndash; this post is purely my opinion on Apple Watch&amp;rsquo;s &lt;a href="https://support.apple.com/en-us/HT208917"&gt;Walkie Talkie&lt;/a&gt; feature based on my usage. While I feel that this can generalize to the broader public, I&amp;rsquo;m sure there are plenty of people who appreciate this feature.&lt;/p&gt;

&lt;p&gt;This feature debuted in watchOS 5 (released Sept 2018). I&amp;rsquo;m a little late to the party in terms of talking about it, but it&amp;rsquo;s only recently that I&amp;rsquo;ve formed strong opinions on it.&lt;/p&gt;

&lt;h2&gt;Communication at Home&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve used the Walkie Talkie feature occasionally with my wife over the years, mostly as a novel thing to try. With the whole &lt;em&gt;working from home&lt;/em&gt; and just being at home with our young children (ages 2 and 5) our ability to communicate within the house is more important than before.&lt;/p&gt;

&lt;p&gt;We would often message each other via Facebook Messenger (our preferred chat application) if it wasn&amp;rsquo;t urgent. This works well as the Apple Watch would allow us to dictate a message back, or the preferred &lt;em&gt;thumbs up&lt;/em&gt; acknowledgment. In times when we&amp;rsquo;d want a little more throughput in our communication, we&amp;rsquo;d turn to &lt;a href="https://support.apple.com/en-ca/HT204380"&gt;FaceTime on our iPhone&lt;/a&gt;. At times though, we wouldn&amp;rsquo;t have our iPhones within reach and we would answer the call on our Apple Watch. This realization eventually led us to just leverage the Apple Watch for our high-throughput communication at home.&lt;/p&gt;

&lt;h2&gt;Gripes with Walkie Talkie&lt;/h2&gt;

&lt;p&gt;We experimented with using the Walkie Talkie application at first and came up with the following issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initial communication is interruptive, and hard to block due to the nature of Walkie Talkie.

&lt;ul&gt;
&lt;li&gt;There is an &lt;em&gt;on/off&lt;/em&gt; status, and you will receive a notification if someone tries to reach you. It could be easily missed.&lt;/li&gt;
&lt;li&gt;The initial beep doesn&amp;rsquo;t give you a lot of time to prepare for the incoming voice. When your watch is open you can &lt;em&gt;palm your watch&lt;/em&gt; to end the conversation though. If the watch is not active, you have to tap to activate then palm to mute, so it is possible for some of the initial voice messages to come through (hopefully not at an undesirable time).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;push to talk&lt;/em&gt; aspect of the application is nice for a quick one-shot message, but not so much if a longer conversation is needed.

&lt;ul&gt;
&lt;li&gt;You need to keep a hand free to push/release the application&amp;rsquo;s button.&lt;/li&gt;
&lt;li&gt;Can be tiresome if you need to communicate multiple sentences.&lt;/li&gt;
&lt;li&gt;Can be tricky to coordinate the &lt;em&gt;one talking at a time&lt;/em&gt; restriction.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s dependant on both parties having their watch on their person (unlocked and not in &lt;em&gt;Do not Disturb&lt;/em&gt;).

&lt;ul&gt;
&lt;li&gt;Sometimes we remove our watches throughout the day (i.e., charging).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a bit cumbersome to quickly communicate with an individual.

&lt;ul&gt;
&lt;li&gt;Open the Walkie Talkie application, find a person, press the person, check if the person is online, push to talk. You could use &lt;a href="https://www.apple.com/ca/siri/"&gt;Siri&lt;/a&gt; to &amp;ldquo;Walkie Talkie &amp;lt;person_name&amp;gt;&amp;rdquo; to immediately jump to the part where it checks if the person is online.&lt;/li&gt;
&lt;li&gt;Separate from an individual&amp;rsquo;s contact card (on the iPhone&amp;rsquo;s contacts)&lt;/li&gt;
&lt;li&gt;The Walkie Talkie &lt;a href="https://developer.apple.com/design/human-interface-guidelines/watchos/overview/complications/"&gt;complication&lt;/a&gt; on the watch only opens the application &amp;ndash; you still need to find the person (however it might be cached on the right person if you recently used it).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Occasionally seeing the Walkie Talkie&amp;rsquo;s status icon on the top of the watch&amp;rsquo;s screen was just annoying.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Just Call Me&lt;/h2&gt;

&lt;p&gt;We found that the shortcomings of the Walkie Talkie application quickly led us to just &lt;em&gt;calling&lt;/em&gt; each other using the Apple Watch itself. We&amp;rsquo;d have the option of using FaceTime Audio or even just calling via our talk mobile plan. Overall, calling each other addressed many of the shortcomings of Walkie Talkie:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You would receive an incoming call notification on the watch, allowing you to take the call or not.

&lt;ul&gt;
&lt;li&gt;No awkward moments if a call comes through when you are not in the right situation to take the call.&lt;/li&gt;
&lt;li&gt;The idea of calling sets the expectation that a conversation is needed. If you cannot take the call, then you are able to shoot back a quick message of acknowledgment.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You can carry a conversation and still have both hands free (no need to push to talk).&lt;/li&gt;
&lt;li&gt;If you aren&amp;rsquo;t wearing the watch, the call will still come through on your iPhone.

&lt;ul&gt;
&lt;li&gt;This is a huge benefit for us, as it is frustrating to try and use Walkie Talkie and find out the person is unavailable.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The watch&amp;rsquo;s complication for a Contact is superior to the Walkie Talkie&amp;rsquo;s complication, as one tap takes you directly to the contact.

&lt;ul&gt;
&lt;li&gt;You can tap the phone then FaceTime Audio to initiate it.&lt;/li&gt;
&lt;li&gt;You have the option to use alternative means of communication as well from the complication (traditional voice plan or SMS).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You can use Siri to place a call for you completely hands-free using &amp;ldquo;Call &amp;lt;person_name&amp;gt;&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Fluid conversations happen are possible because there is no push to talk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, we both have each other as a complication on our Apple Watches for quick high-throughput communication.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Document Storage: Migrating Evernote to Google Drive</title>
    <link rel="alternate" href="https://kevinjalbert.com/document-storage-migrating-evernote-to-google-drive/"/>
    <id>https://kevinjalbert.com/document-storage-migrating-evernote-to-google-drive/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-09-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about my document storage journey to understand the reasons why I'm moving from Evernote to Google Drive and ditching my Doxie Go for Genius Scan (a mobile scanner application). Included are steps for exporting out of Evernote and into Google Drive.</description>
    <content type="html">&lt;p&gt;I only really embraced a document storage solution when I acquired a &lt;a href="https://www.getdoxie.com/"&gt;Doxie Go&lt;/a&gt; back in 2013. I was able to scan documents with &lt;a href="https://en.wikipedia.org/wiki/Optical_character_recognition"&gt;OCR&lt;/a&gt; so that I could search their contents. I even paired it with an &lt;a href="https://en.wikipedia.org/wiki/Eye-Fi"&gt;Eye-Fi SD card&lt;/a&gt; so that I could upload scans wirelessly to my Macbook Air. It was great. I embraced &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt; as my document storage solution, as it hit everything and was highly recommended.&lt;/p&gt;

&lt;p&gt;The times have changed. My Doxie Go has lost its battery capacity and dies after a few scans (you cannot scan when it&amp;rsquo;s charging). The Eye-Fi company doesn&amp;rsquo;t exist anymore, and my SD card is useless (trust me I tried to make it work). Evernote&amp;rsquo;s software isn&amp;rsquo;t looking so great anymore, and there is wavering hope around the company. On the flip side, mobile phones and their applications have greatly advanced in the last 8 years.&lt;/p&gt;

&lt;p&gt;I decided to switch from using my Doxie with Evernote to using &lt;a href="https://thegrizzlylabs.com/genius-scan/"&gt;Genius Scan&lt;/a&gt; with &lt;a href="https://drive.google.com/"&gt;Google Drive&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Why Genius Scan&lt;/h2&gt;

&lt;p&gt;In my experimentation, Genius Scan performed exceedingly well against others with respect to the quality and speed of scans. In contrast to many other document scanning applications out there, you don&amp;rsquo;t need a subscription to unlock the extra functionality &amp;ndash; it&amp;rsquo;s a one-time purchase of approximately $10. You gain the ability to export automatically to a document storage solution of your choice &amp;ndash; I selected Google Drive.&lt;/p&gt;

&lt;h2&gt;Why Google Drive&lt;/h2&gt;

&lt;p&gt;There are a number of reasons for picking Google Drive over Evernote:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Storage isn&amp;rsquo;t a concern. You get 15 GB for free (which is a lot for documents), or you&amp;rsquo;re likly already paying for additional storage anyways.&lt;/li&gt;
&lt;li&gt;Evernote now requires me to pay ($90/year) for a subscription to search text inside documents&lt;/li&gt;
&lt;li&gt;Evernote has all these other features that it has accumulated over the years that I don&amp;rsquo;t utilize (feature bloat).&lt;/li&gt;
&lt;li&gt;I share the account with my wife and so she&amp;rsquo;ll have easy access as well.&lt;/li&gt;
&lt;li&gt;Google Drive search is fairly powerful (it will search the content even without OCR)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only issue I have is that the Google Drive search results interface is lacking compared to Evernote. Evernote provides a view containing a snippet of the search results in the context of the file. Evernote also has a preview of the selected note when navigating notes. In Google Drive, you just see the file names of the matches, forcing you to individually preview each file until you find what you need. That being said, the amount of times I&amp;rsquo;ve needed that level of precision in searching is infrequent.&lt;/p&gt;

&lt;h2&gt;Migrating to Google Drive&lt;/h2&gt;

&lt;p&gt;I recently made the migration over to Google Drive &amp;ndash; overall, it wasn&amp;rsquo;t too bad. The following outlines the steps I took:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select each notebook from Evernote containing documents. I had multiple notebooks which acted as categories (e.g., Receipts, Bills, Taxes, etc&amp;hellip;).&lt;/li&gt;
&lt;li&gt;Right-click and open the export modal. Export using the &amp;lsquo;Multiple web pages (.html)&amp;rsquo; file format.&lt;/li&gt;
&lt;li&gt;Put these in a &lt;code&gt;Notebooks&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Put the following Ruby script (&lt;code&gt;transform.rb&lt;/code&gt;) in the same directory level as &lt;code&gt;Notebooks&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'fileutils'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'securerandom'&lt;/span&gt;

&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Notebooks/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Processing &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

  &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# Only interested in directories as they hold PDFs, .html files exist here&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;file?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"=&amp;gt; Processing &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="c1"&gt;# Getting each file, renaming it and moving it to notebook directory&lt;/span&gt;
    &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/*"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;SecureRandom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;alphanumeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;extname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;mv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;notebook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# Cleaning up empty note directories&lt;/span&gt;
    &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rmdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run &lt;code&gt;ruby transform.rb&lt;/code&gt;, which leaves only resources (e.g., PDFs, images) in their respected notebook directory. The resources are also named after the note in Evernote (using a random suffix in case multiple resources existed in a note).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Import the whole &lt;code&gt;Notebooks&lt;/code&gt; directory into Google Drive where you want it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;rsquo;ll see how this new document storage solution works long-term, but I have high hopes. An added bonus with the mobile application approach is that it allows me (or my wife!) to scan stuff without needing to be in my home office.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Stub Sleeps in Tests</title>
    <link rel="alternate" href="https://kevinjalbert.com/stub-sleeps-in-tests/"/>
    <id>https://kevinjalbert.com/stub-sleeps-in-tests/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-08-28T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">A quick tip - when working with a code base that has sleep/delays in it, where you want to stub them out.</description>
    <content type="html">&lt;p&gt;I&amp;rsquo;m doing another short post here on testing code. I&amp;rsquo;ve observed that sometimes sleeps/delays find their way into production. A quick example of this would be for a retry loop (e.g., HTTP requests). When testing the code concerning these areas, you are taking on the duration of the sleep in your test suite which is slow and undesirable.&lt;/p&gt;

&lt;p&gt;To combat the added delay in sleeps during tests, my recommendation is to stub/mock out the sleep method. Depending on the language, there are many ways to handle this. With Ruby using &lt;a href="https://github.com/seattlerb/minitest"&gt;Minitest&lt;/a&gt; and &lt;a href="https://github.com/freerange/mocha"&gt;Mocha&lt;/a&gt;, you would do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Class that sleeps for five 1 second iterations, building an array of [0..4]&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SleepyObject&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;do_work&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;times&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;
      &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;results&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# Minitest and Mocha are needed for testing/stubbing&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'minitest/autorun'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'mocha'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'mocha/minitest'&lt;/span&gt;

&lt;span class="c1"&gt;# Test class&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SleepyObjectTest&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Minitest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Test&lt;/span&gt;

  &lt;span class="c1"&gt;# Takes 5 seconds to run&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_with_sleeps&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;SleepyObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;do_work&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Takes pretty much 0 seconds to run&lt;/span&gt;
  &lt;span class="c1"&gt;# We are also asserting that five calls to `sleep` do happen&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_without_sleeps&lt;/span&gt;
    &lt;span class="no"&gt;SleepyObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expects&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:sleep&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;times&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;SleepyObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;do_work&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we run the above code, we see the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Run options: -v --seed 14433

# Running:

SleepyObjectTest#test_with_sleeps = 5.02 s = .
SleepyObjectTest#test_without_sleeps = 0.00 s = .

Finished in 5.018095s, 0.3986 runs/s, 0.5978 assertions/s.

2 runs, 3 assertions, 0 failures, 0 errors, 0 skips
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The tests using stubs execute quickly, and we still retain the ability to &lt;em&gt;assert&lt;/em&gt; that &lt;em&gt;sleeps&lt;/em&gt; are happening. This is a &lt;em&gt;win-win&lt;/em&gt; in my books.&lt;/p&gt;

&lt;p&gt;It can be a bit difficult to &lt;em&gt;figure out&lt;/em&gt; what tests in your test suite that is affected by sleep durations. As the test creator, you&amp;rsquo;ll likely have a good idea of any sleep/delays in your test execution as you run them in isolation during development. I did find the following &lt;a href="https://dev.to/joeyschoblaska/make-your-specs-faster-with-sleep-study-1ff"&gt;article&lt;/a&gt; that presents a novel approach to identify which tests have sleeps in their execution path.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails Testing: Reload the Model</title>
    <link rel="alternate" href="https://kevinjalbert.com/rails-testing-reloading-the-model/"/>
    <id>https://kevinjalbert.com/rails-testing-reloading-the-model/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-07-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">A beginner in Rails might find themselves testing a model and not seeing the attributes reflecting the changes they would expect to see. Read about why this problem happens and how you can resolve it by reloading the model.</description>
    <content type="html">&lt;p&gt;Throughout my time using Rails, I&amp;rsquo;ve had the pleasure of working with people who are new to Ruby on Rails. This post is a quick one that outlines a testing issue that comes up every now and then.&lt;/p&gt;

&lt;p&gt;To keep things short, let&amp;rsquo;s jump right into the code!&lt;/p&gt;

&lt;h2&gt;The Setup&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Task&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationRecord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;# Has a bolean database column`archive`&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArchiverService&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;
    &lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;archive: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have an ActiveRecord model and a service class that updates a value on the model. This is very much a contrived example to illustrate the problem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"test_helper"&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArchiverServiceTest&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;TestCase&lt;/span&gt;
  &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s2"&gt;"archives task"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;archive: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="no"&gt;ArchiverService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call&lt;/span&gt;

    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# fails!&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This test fails.&lt;/p&gt;

&lt;h2&gt;Reloading a Stale Model&lt;/h2&gt;

&lt;p&gt;The problem here is that the &lt;code&gt;task&lt;/code&gt; object in the test isn&amp;rsquo;t the same as the one being updated in the &lt;code&gt;ArchiverService&lt;/code&gt;. When a model is instantiated, its attributes are cached. If a value is updated and persisted in the database, the changes aren&amp;rsquo;t propagated to other instances of that model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution here is to add in a &lt;code&gt;task.reload&lt;/code&gt; after the &lt;code&gt;ArchiverService.call&lt;/code&gt;, as we want the task&amp;rsquo;s values to be &lt;em&gt;refreshed&lt;/em&gt; with what the database has at that point&lt;/strong&gt;. If you want to read more into the &lt;code&gt;#reload&lt;/code&gt; method, you can look at its &lt;a href="https://github.com/rails/rails/blob/v6.1.4/activerecord/lib/active_record/persistence.rb#L752-L814"&gt;docs and source&lt;/a&gt;. It&amp;rsquo;s worth noting that the documentation states the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reloads the record from the database.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Reloading is commonly used in test suites to test something is actually written to the database, or when some action modifies the corresponding row in the database but not the object in memory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So be aware of this situation and recall that you do have access to &lt;code&gt;#reload&lt;/code&gt; if you need to freshen up your model&amp;rsquo;s attributes from the database. Rails even provide the ability to &lt;code&gt;#reload_association&lt;/code&gt; if your model has them (&lt;a href="https://guides.rubyonrails.org/v6.1.4/association_basics.html#methods-added-by-belongs-to-association"&gt;see docs here&lt;/a&gt;).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Embrace Active Support without Rails</title>
    <link rel="alternate" href="https://kevinjalbert.com/embrace-active-support-without-rails/"/>
    <id>https://kevinjalbert.com/embrace-active-support-without-rails/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-06-25T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read my opinion on using Active Support without Rails in Ruby-only projects. I think the benefits outweigh the cost. Active Support is a Ruby on Rails component that primarily extends the Ruby language providing, a richer experience to developers.</description>
    <content type="html">&lt;h2&gt;What is Active Support&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Active Support is the Ruby on Rails component responsible for providing Ruby language extensions, utilities, and other transversal stuff.&lt;/p&gt;

&lt;p&gt;It offers a richer bottom-line at the language level, targeted both at the development of Rails applications and at the development of Ruby on Rails itself.&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href="https://guides.rubyonrails.org/active_support_core_extensions.html"&gt;RailsGuides&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a developer using Ruby, it is highly likely that you are using Rails in some projects. During your journey, you&amp;rsquo;ve likely touched aspects of Active Support without knowing it. Ruby, as a language, allows you to &lt;em&gt;redefine&lt;/em&gt; classes easily, almost to a fault. Active Support does exactly this.&lt;/p&gt;

&lt;p&gt;Active Support does &lt;em&gt;a lot&lt;/em&gt; under the hood by modifying core Ruby classes. These core extensions provide more capabilities through new methods. If you are using Rails, Active Support is already there as a dependency. If you spend enough time on a Rails project, you&amp;rsquo;ll reach for these methods from Active Support.&lt;/p&gt;

&lt;h2&gt;Active Support Without Rails&lt;/h2&gt;

&lt;p&gt;The following are my opinions on when to use Active Support without Rails.&lt;/p&gt;

&lt;h3&gt;Projects&lt;/h3&gt;

&lt;p&gt;In Ruby-only projects, you likely already require some gems, and at this point including Active Support just adds another dependency to the project. With Active Support, your project gains all those convenience methods you are used to.&lt;/p&gt;

&lt;p&gt;The reality of the situation is that you are unlikely to use &lt;em&gt;all&lt;/em&gt; the features of Active Support. Yes, this dependency is a large one, although if you want you can be &lt;a href="https://guides.rubyonrails.org/active_support_core_extensions.html#how-to-load-core-extensions"&gt;selective in loading only parts of Active Support&lt;/a&gt;. If you need to optimize your project (i.e., no dependencies for portability, or optimized code for performance), you might be using the wrong language. Active Support does lazy-load parts of itself, so it might not even be as &lt;em&gt;heavy&lt;/em&gt; as you think.&lt;/p&gt;

&lt;p&gt;In my Ruby projects I dislike reaching for something I&amp;rsquo;d typically use in a Rails project only to find out I don&amp;rsquo;t have access to it (i.e., &lt;code&gt;10.days.ago&lt;/code&gt;). Could I take an approach that doesn&amp;rsquo;t require Active Support? Sure, but at what cost (i.e., time/complexity)? I love Ruby for its expressiveness and ease at &lt;em&gt;getting things done&lt;/em&gt;. Active Support helps me do that better and faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Embrace Active Support and add it to your project&amp;rsquo;s dependencies&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Scripts&lt;/h3&gt;

&lt;p&gt;Small Ruby scripts are unique in the sense that they don&amp;rsquo;t always have dependencies. Requiring that first gem in a script can feel &lt;em&gt;wrong&lt;/em&gt;, although in my experience it&amp;rsquo;s worth it. The boost in productivity that a gem provides when you are trying to script something together is immense.&lt;/p&gt;

&lt;p&gt;Dealing with dependencies for scripts is a small inconvenience, as running a script without the required gems usually presents a clear error that is quickly remedied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Embrace Active Support if you already require gems for your script or if you want methods that Active Support offers&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Gems&lt;/h3&gt;

&lt;p&gt;If you are developing a Ruby gem, it would be best to not &lt;em&gt;force&lt;/em&gt; Active Support as a dependency without good reasons. If you absolutely need it, go for it &amp;ndash; ultimately it&amp;rsquo;s your call as the maintainer. Now if your gem is inherently tied to Rails, then it&amp;rsquo;s all good to include it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Opinion: Avoid Active Support unless you absolutely need parts of it, or if the gem is intended to be used in a Rails project&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Keep a macOS Application Running using cron</title>
    <link rel="alternate" href="https://kevinjalbert.com/keep-a-macos-application-running-using-cron/"/>
    <id>https://kevinjalbert.com/keep-a-macos-application-running-using-cron/</id>
    <updated>2022-02-28T23:32:24-05:00</updated>
    <published>2021-05-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read how I use cron to keep the RescueTime Application running. I was frustrated at RescueTime crashing and not recording data for a whole week.</description>
    <content type="html">&lt;p&gt;I have used &lt;a href="https://www.rescuetime.com/ref/31263"&gt;RescueTime (Referral Link)&lt;/a&gt; for many years at this point. It always disappoints me when I get the email saying that no data was recorded in RescueTime for the last week (see image above article title). For reasons unannounced to me, the macOS menu bar application had stopped running. I use the &lt;a href="https://www.macbartender.com/"&gt;Bartender for macOS&lt;/a&gt; to hide certain menu bar applications (as they offer little visual value) &amp;ndash; RescueTime is hidden from my view and I never noticed it wasn&amp;rsquo;t running.&lt;/p&gt;

&lt;p&gt;I needed a way to ensure that the application was kept running if it crashed.&lt;/p&gt;

&lt;h2&gt;Launch Application in Background using &lt;code&gt;cron&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;I know of &lt;code&gt;cron&lt;/code&gt; and how it can run scripts periodically &amp;ndash; I figured this would be the tool to save me here.&lt;/p&gt;

&lt;p&gt;I quickly put together the following (add this using &lt;code&gt;crontab -e&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*/5 * * * * open --hide --background /Applications/RescueTime.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;a href="https://crontab.guru/#*/5_*_*_*_*"&gt;crontab.guru&lt;/a&gt; we can see that this will run the &lt;code&gt;open&lt;/code&gt; for ResuceTime command every 5 minutes. The &lt;code&gt;--hide&lt;/code&gt; and &lt;code&gt;--background&lt;/code&gt; ensure that the application doesn&amp;rsquo;t open in an obtrusive manner (i.e., think applications with a GUI).&lt;/p&gt;

&lt;p&gt;This worked for me &amp;ndash; it opened RescueTime if it was closed out. I even tested this with other applications and it &lt;em&gt;mostly&lt;/em&gt; worked as expected. The &lt;em&gt;hide and background&lt;/em&gt; flags didn&amp;rsquo;t work for some applications (e.g., Evernote always appears in the forefront for whatever reason).&lt;/p&gt;

&lt;p&gt;Done deal then right? Wrong. I noticed every now and then a keystroke or two wouldn&amp;rsquo;t register. When I looked at the time it was always on the minute the &lt;code&gt;cron&lt;/code&gt; would trigger&amp;hellip; If I had to take a guess, the &lt;code&gt;open&lt;/code&gt; was causing focus to switch briefly and would interrupt keystrokes on the current application I was in.&lt;/p&gt;

&lt;p&gt;I could decrease the frequency that the command would run or&amp;hellip;&lt;/p&gt;

&lt;h2&gt;Only &lt;code&gt;open&lt;/code&gt; if Application isn&amp;rsquo;t Running&lt;/h2&gt;

&lt;p&gt;My next approach was to only &lt;em&gt;open&lt;/em&gt; the application if it wasn&amp;rsquo;t already running. This will prevent the &lt;code&gt;open&lt;/code&gt; from triggering multiple times during the day.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Scroll to see full command (it is one line due to fitting in the crontab)
*/5 * * * * app=Rescuetime; ps aux | grep -v grep | grep -ci $app &amp;gt; /dev/null || open --hide --background /Applications/$app.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we break this down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app=Rescuetime;&lt;/code&gt; sets a variable of what application we&amp;rsquo;re trying to keep open.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux | grep -v grep | grep -ci $app &amp;gt; /dev/null&lt;/code&gt; lists all running processes, excluding the &lt;code&gt;grep&lt;/code&gt; process, and finally counting the found lines while &lt;code&gt;grep&lt;/code&gt;ing for the application&amp;rsquo;s name. This ends up being a 0 or 1. The STDOUT output is directed to the void so that it doesn&amp;rsquo;t create new &lt;code&gt;mail&lt;/code&gt; entries.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;||&lt;/code&gt; will conditionally run the next statement if the previous was falsey (i.e., no application was found running)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open --hide --background /Applications/$app.app&lt;/code&gt; opens the specified application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now this works as expected! I no longer have to worry about RescueTime not running. I might do this for other menubar applications that I like to have active, but are hidden.&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t tried this on Linux but I suspect you could do something similar (assuming there is an equivalent to &lt;code&gt;open&lt;/code&gt;).&lt;/p&gt;
</content>
  </entry>
</feed>
